{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "CE NextGen API Reference"
  },
  "basePath": "/ccm/api",
  "tags": [
    {
      "name": "anomaly"
    },
    {
      "name": "budgets"
    },
    {
      "name": "business-mapping"
    },
    {
      "name": "testconnection"
    },
    {
      "name": "notificationSetting"
    },
    {
      "name": "license-util"
    },
    {
      "name": "yaml"
    },
    {
      "name": "connector"
    },
    {
      "name": "graphql"
    },
    {
      "name": "health"
    },
    {
      "name": "metrics"
    },
    {
      "name": "costdetails"
    },
    {
      "name": "perspective-custom-field"
    },
    {
      "name": "perspectiveReport"
    },
    {
      "name": "perspective"
    },
    {
      "name": "recommendationdetails"
    },
    {
      "name": "recommendationoverview"
    },
    {
      "name": "usage"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/anomaly/perspective/{perspectiveId}": {
      "post": {
        "tags": ["anomaly"],
        "summary": "List Anomalies for Perspective",
        "description": "",
        "operationId": "listPerspectiveAnomalies",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PerspectiveQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListPerspectiveAnomalyData"
            }
          }
        }
      }
    },
    "/anomaly": {
      "post": {
        "tags": ["anomaly"],
        "summary": "List Anomalies",
        "description": "",
        "operationId": "listAnomalies",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnomalyQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListAnomalyData"
            }
          }
        }
      }
    },
    "/anomaly/feedback": {
      "put": {
        "tags": ["anomaly"],
        "summary": "Report Anomaly Feedback",
        "description": "",
        "operationId": "reportAnomalyFeedback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "anomalyId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnomalyFeedbackDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          }
        }
      }
    },
    "/anomaly/summary": {
      "post": {
        "tags": ["anomaly"],
        "summary": "Get Anomalies Summary",
        "description": "",
        "operationId": "getAnomaliesSummary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnomalyQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListAnomalySummary"
            }
          }
        }
      }
    },
    "/anomaly/widgets": {
      "post": {
        "tags": ["anomaly"],
        "summary": "Get Anomaly Widgets",
        "description": "",
        "operationId": "getAnomalyWidgetsData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnomalyQueryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListAnomalyWidgetData"
            }
          }
        }
      }
    },
    "/budgets/{id}": {
      "get": {
        "tags": ["budgets"],
        "summary": "Get budget",
        "description": "",
        "operationId": "getBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "summary": "Clone budget",
        "description": "",
        "operationId": "cloneBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      },
      "put": {
        "tags": ["budgets"],
        "summary": "Update budget",
        "description": "",
        "operationId": "updateBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["budgets"],
        "summary": "Delete budget",
        "description": "",
        "operationId": "deleteBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/budgets/perspectiveBudgets": {
      "get": {
        "tags": ["budgets"],
        "summary": "List Budgets for Perspective",
        "description": "",
        "operationId": "listBudgetsForPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListBudget"
            }
          }
        }
      }
    },
    "/budgets": {
      "get": {
        "tags": ["budgets"],
        "summary": "List Budgets for account",
        "description": "",
        "operationId": "listBudgetsForAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "summary": "Create budget",
        "description": "",
        "operationId": "createBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/budgets/forecastCost": {
      "get": {
        "tags": ["budgets"],
        "summary": "Deprecated use /perspective/forecastCost instead, Get forecast cost for Perspective.",
        "description": "",
        "operationId": "getForecastCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        },
        "deprecated": true
      }
    },
    "/budgets/lastMonthCost": {
      "get": {
        "tags": ["budgets"],
        "summary": "Deprecated use /perspective/lastMonthCost instead, Get last month cost for Perspective.",
        "description": "",
        "operationId": "getLastMonthCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        },
        "deprecated": true
      }
    },
    "/budgets/{id}/costDetails": {
      "get": {
        "tags": ["budgets"],
        "summary": "Get cost details for budget",
        "description": "",
        "operationId": "getCostDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBudgetData"
            }
          }
        }
      }
    },
    "/business-mapping/{id}": {
      "get": {
        "tags": ["business-mapping"],
        "summary": "Get Business Mapping",
        "description": "",
        "operationId": "getBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBusinessMapping"
            }
          }
        }
      },
      "delete": {
        "tags": ["business-mapping"],
        "summary": "Delete Business Mapping",
        "description": "",
        "operationId": "deleteBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/business-mapping": {
      "get": {
        "tags": ["business-mapping"],
        "summary": "Get List Of Business Mappings",
        "description": "",
        "operationId": "getBusinessMappingList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListBusinessMapping"
            }
          }
        }
      },
      "post": {
        "tags": ["business-mapping"],
        "summary": "Create Business Mapping",
        "description": "",
        "operationId": "createBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BusinessMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBusinessMapping"
            }
          }
        }
      },
      "put": {
        "tags": ["business-mapping"],
        "summary": "Update Business Mapping",
        "description": "",
        "operationId": "updateBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BusinessMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/testconnection": {
      "post": {
        "tags": ["testconnection"],
        "summary": "Validate connector",
        "description": "",
        "operationId": "validate connector",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ConnectorResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseConnectorValidationResult"
            }
          }
        }
      }
    },
    "/testconnection/firstConnector": {
      "get": {
        "tags": ["testconnection"],
        "summary": "Get connector details",
        "description": "",
        "operationId": "get connector details",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCCMConnectorDetails"
            }
          }
        }
      }
    },
    "/notificationSetting/perspective/{perspectiveId}": {
      "get": {
        "tags": ["notificationSetting"],
        "summary": "Get Notification Settings for a Perspective",
        "description": "",
        "operationId": "getNotificationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCCMNotificationSetting"
            }
          }
        }
      }
    },
    "/notificationSetting": {
      "get": {
        "tags": ["notificationSetting"],
        "summary": "List Notification Settings for an account",
        "description": "",
        "operationId": "listNotificationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCCMPerspectiveNotificationChannelsDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["notificationSetting"],
        "summary": "Create Notification Setting",
        "description": "",
        "operationId": "createNotificationSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CCMNotificationSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCCMNotificationSetting"
            }
          }
        }
      },
      "put": {
        "tags": ["notificationSetting"],
        "summary": "Update Notification Setting",
        "description": "",
        "operationId": "updateNotificationSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CCMNotificationSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCCMNotificationSetting"
            }
          }
        }
      },
      "delete": {
        "tags": ["notificationSetting"],
        "summary": "Delete Notification Settings for a Perspective",
        "description": "",
        "operationId": "deleteNotificationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          }
        }
      }
    },
    "/license-util": {
      "get": {
        "tags": ["license-util"],
        "summary": "Gets License Usage from a Particular Timestamp",
        "description": "",
        "operationId": "getCCMLicenseUsage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCELicenseUsageDTO"
            }
          }
        }
      }
    },
    "/yaml/cloudCostK8sClusterSetup": {
      "post": {
        "tags": ["yaml"],
        "summary": "get k8s cluster setup yaml based on features enabled",
        "description": "",
        "operationId": "cloudCostK8sClusterSetup",
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sClusterSetupRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": true
      }
    },
    "/yaml/cloudCostK8sClusterSetupV2": {
      "post": {
        "tags": ["yaml"],
        "summary": "get k8s cluster setup yaml based on requirement",
        "description": "",
        "operationId": "cloudCostK8sClusterSetupV2",
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeVisibility",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeOptimization",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sClusterSetupRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/yaml/generate-cost-optimisation-yaml": {
      "post": {
        "tags": ["yaml"],
        "summary": "Get Cost Optimisation Yaml",
        "description": "",
        "operationId": "getCostOptimisationYamlTemplate",
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": true
      }
    },
    "/yaml/cloudCostCapabilityCheck": {
      "post": {
        "tags": ["yaml"],
        "summary": "check if the existing k8s cloud provider have necessary permissions to enable Cloud Cost Visibility",
        "description": "",
        "operationId": "cloudCostCapabilityCheck",
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sClusterSetupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseConnectorValidationResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/connector/azureappclientid": {
      "get": {
        "tags": ["connector"],
        "summary": "Get Azure application client Id",
        "description": "",
        "operationId": "azureappclientid",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/connector/awsaccountconnectiondetail": {
      "get": {
        "tags": ["connector"],
        "summary": "Get Aws account connection details",
        "description": "",
        "operationId": "awsaccountconnectiondetail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseAwsAccountConnectionDetail"
            }
          }
        }
      }
    },
    "/connector/gcpserviceaccount": {
      "get": {
        "tags": ["connector"],
        "summary": "Provision and Get GCP Service Account",
        "description": "",
        "operationId": "gcpserviceaccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/graphql": {
      "post": {
        "tags": ["graphql"],
        "operationId": "execute_1",
        "consumes": ["text/plain"],
        "produces": ["application/json", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/graphql/schema": {
      "get": {
        "tags": ["graphql"],
        "operationId": "getSchema",
        "produces": ["application/json", "text/plain"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Get CE-NG Manager health",
        "description": "",
        "operationId": "getCENGMicroserviceHealthStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/metrics/timescale": {
      "get": {
        "tags": ["metrics"],
        "summary": "timescale",
        "description": "",
        "operationId": "timescale sql queries stats",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseMapStringQueryStat"
            }
          }
        }
      }
    },
    "/costdetails/tabularformat": {
      "post": {
        "tags": ["costdetails"],
        "summary": "Return cost detail in tabular format",
        "description": "",
        "operationId": "costdetailtabular",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CostDetailsQueryParamsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePerspectiveEntityStatsData"
            }
          }
        }
      }
    },
    "/costdetails/timeseriesformat": {
      "post": {
        "tags": ["costdetails"],
        "summary": "Return cost detail in time series format",
        "description": "",
        "operationId": "costdetailttimeseries",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CostDetailsQueryParamsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePerspectiveTimeSeriesData"
            }
          }
        }
      }
    },
    "/costdetails/overview": {
      "post": {
        "tags": ["costdetails"],
        "summary": "Returns an overview of the cost",
        "description": "",
        "operationId": "costdetailoverview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CostDetailsQueryParamsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseStatsInfo"
            }
          }
        }
      }
    },
    "/perspective-custom-field": {
      "get": {
        "tags": ["perspective-custom-field"],
        "summary": "Get customField",
        "description": "",
        "operationId": "getCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "post": {
        "tags": ["perspective-custom-field"],
        "summary": "Save customField",
        "description": "",
        "operationId": "saveCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "put": {
        "tags": ["perspective-custom-field"],
        "summary": "Update customField",
        "description": "",
        "operationId": "updateCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspective-custom-field"],
        "summary": "Delete customField",
        "description": "",
        "operationId": "deleteCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/perspective-custom-field/validate": {
      "post": {
        "tags": ["perspective-custom-field"],
        "summary": "Validate customField",
        "description": "",
        "operationId": "validateCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/perspectiveReport/{accountIdentifier}": {
      "get": {
        "tags": ["perspectiveReport"],
        "summary": "Get perspective reports",
        "description": "",
        "operationId": "getReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "post": {
        "tags": ["perspectiveReport"],
        "summary": "Create perspective reports",
        "description": "",
        "operationId": "createReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "put": {
        "tags": ["perspectiveReport"],
        "summary": "Update perspective reports",
        "description": "",
        "operationId": "updateReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspectiveReport"],
        "summary": "Delete perspective reports",
        "description": "",
        "operationId": "deleteReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/perspective": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get perspective",
        "description": "",
        "operationId": "getPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "post": {
        "tags": ["perspective"],
        "summary": "Create perspective",
        "description": "",
        "operationId": "createPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "clone",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "put": {
        "tags": ["perspective"],
        "summary": "Update perspective",
        "description": "",
        "operationId": "updatePerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspective"],
        "summary": "Delete perspective",
        "description": "",
        "operationId": "deletePerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/perspective/clone/{perspectiveId}": {
      "post": {
        "tags": ["perspective"],
        "summary": "Clone perspective",
        "description": "",
        "operationId": "clonePerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      }
    },
    "/perspective/getAllPerspectives": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get All perspectives",
        "description": "",
        "operationId": "getAllPerspectives",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListQLCEView"
            }
          }
        }
      }
    },
    "/perspective/forecastCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get forecast cost for perspective",
        "description": "",
        "operationId": "getForecastCostV2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/lastPeriodCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get last period cost for perspective",
        "description": "",
        "operationId": "getLastPeriodCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/lastMonthCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get last month cost for perspective",
        "description": "",
        "operationId": "getLastMonthCostV2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/forecastCostForPeriod": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get forecast cost for perspective for given period",
        "description": "",
        "operationId": "getForecastCostForPeriod",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/recommendation/details/node-pool": {
      "get": {
        "tags": ["recommendationdetails"],
        "summary": "Node pool Recommendation Details",
        "description": "",
        "operationId": "nodeRecommendationDetail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseNodeRecommendationDTO"
            }
          }
        }
      }
    },
    "/recommendation/details/workload": {
      "get": {
        "tags": ["recommendationdetails"],
        "summary": "Workload Recommendation Details",
        "description": "",
        "operationId": "workloadRecommendationDetail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseWorkloadRecommendationDTO"
            }
          }
        }
      }
    },
    "/recommendation/overview/stats": {
      "post": {
        "tags": ["recommendationoverview"],
        "summary": "Recommendations Statistics",
        "description": "",
        "operationId": "recommendationStats",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sRecommendationFilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRecommendationOverviewStats"
            }
          }
        }
      }
    },
    "/recommendation/overview/count": {
      "post": {
        "tags": ["recommendationoverview"],
        "summary": "Recommendations count",
        "description": "",
        "operationId": "recommendationsCount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sRecommendationFilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseInteger"
            }
          }
        }
      }
    },
    "/recommendation/overview/list": {
      "post": {
        "tags": ["recommendationoverview"],
        "summary": "List Recommendations",
        "description": "",
        "operationId": "listRecommendations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sRecommendationFilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRecommendationsDTO"
            }
          }
        }
      }
    },
    "/recommendation/overview/filter-values": {
      "post": {
        "tags": ["recommendationoverview"],
        "summary": "Filter values available for Recommendations",
        "description": "",
        "operationId": "recommendationFilterValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterValuesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListFilterStatsDTO"
            }
          }
        }
      }
    },
    "/usage/{module}": {
      "get": {
        "tags": ["usage"],
        "summary": "Gets License Usage By Module and Timestamp",
        "description": "",
        "operationId": "getLicenseUsage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "module",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "CDLicenseType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseLicenseUsageDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EntityInfo": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workloadName": {
          "type": "string"
        },
        "workloadType": {
          "type": "string"
        },
        "gcpProjectId": {
          "type": "string"
        },
        "gcpProduct": {
          "type": "string"
        },
        "gcpSKUId": {
          "type": "string"
        },
        "gcpSKUDescription": {
          "type": "string"
        },
        "awsUsageAccountId": {
          "type": "string"
        },
        "awsServiceCode": {
          "type": "string"
        },
        "awsInstancetype": {
          "type": "string"
        },
        "awsUsageType": {
          "type": "string"
        },
        "azureSubscriptionGuid": {
          "type": "string"
        },
        "azureServiceName": {
          "type": "string"
        },
        "azureInstanceId": {
          "type": "string"
        }
      }
    },
    "PerspectiveAnomalyData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "anomalyCount": {
          "type": "integer",
          "format": "int32"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "differenceFromExpectedCost": {
          "type": "number",
          "format": "double"
        },
        "associatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityInfo"
          }
        },
        "resourceType": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseListPerspectiveAnomalyData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerspectiveAnomalyData"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Number": {
      "type": "object"
    },
    "PerspectiveQueryDTO": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEViewFilterWrapper"
          }
        },
        "groupBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEViewGroupBy"
          }
        }
      }
    },
    "QLCEViewFieldInput": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
        },
        "identifierName": {
          "type": "string"
        }
      }
    },
    "QLCEViewFilter": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/QLCEViewFieldInput"
        },
        "operator": {
          "type": "string",
          "enum": ["NOT_IN", "IN", "EQUALS", "NOT_NULL", "NULL", "LIKE"]
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QLCEViewFilterWrapper": {
      "type": "object",
      "properties": {
        "idFilter": {
          "$ref": "#/definitions/QLCEViewFilter"
        },
        "timeFilter": {
          "$ref": "#/definitions/QLCEViewTimeFilter"
        },
        "viewMetadataFilter": {
          "$ref": "#/definitions/QLCEViewMetadataFilter"
        },
        "ruleFilter": {
          "$ref": "#/definitions/QLCEViewRule"
        }
      }
    },
    "QLCEViewGroupBy": {
      "type": "object",
      "properties": {
        "entityGroupBy": {
          "$ref": "#/definitions/QLCEViewFieldInput"
        },
        "timeTruncGroupBy": {
          "$ref": "#/definitions/QLCEViewTimeTruncGroupBy"
        }
      }
    },
    "QLCEViewMetadataFilter": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        },
        "isPreview": {
          "type": "boolean"
        },
        "preview": {
          "type": "boolean"
        }
      }
    },
    "QLCEViewRule": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEViewFilter"
          }
        }
      }
    },
    "QLCEViewTimeFilter": {
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/QLCEViewFieldInput"
        },
        "operator": {
          "type": "string",
          "enum": ["AFTER", "BEFORE"]
        },
        "value": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "QLCEViewTimeTruncGroupBy": {
      "type": "object",
      "properties": {
        "resolution": {
          "type": "string",
          "enum": ["HOUR", "DAY", "MONTH", "WEEK", "QUARTER", "YEAR"]
        }
      }
    },
    "AnomalyData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "anomalyRelativeTime": {
          "type": "string"
        },
        "actualAmount": {
          "type": "number",
          "format": "double"
        },
        "expectedAmount": {
          "type": "number",
          "format": "double"
        },
        "anomalousSpend": {
          "type": "number",
          "format": "double"
        },
        "anomalousSpendPercentage": {
          "type": "number",
          "format": "double"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceInfo": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/EntityInfo"
        },
        "details": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusRelativeTime": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "cloudProvider": {
          "type": "string"
        },
        "anomalyScore": {
          "type": "number",
          "format": "double"
        },
        "userFeedback": {
          "type": "string",
          "enum": ["TRUE_ANOMALY", "FALSE_ANOMALY", "NOT_RESPONDED"]
        }
      }
    },
    "ResponseListAnomalyData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalyData"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AnomalyQueryDTO": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/CCMFilter"
        },
        "orderBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMSort"
          }
        },
        "groupBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMGroupBy"
          }
        },
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMAggregation"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CCMAggregation": {
      "type": "object",
      "properties": {
        "operationType": {
          "type": "string",
          "enum": ["SUM", "MAX", "MIN", "AVG", "COUNT"]
        },
        "field": {
          "type": "string",
          "enum": [
            "PERSPECTIVE_ID",
            "WORKLOAD",
            "WORKLOAD_TYPE",
            "CLUSTER_ID",
            "CLUSTER_NAME",
            "CLUSTER_NAMESPACE",
            "CLUSTER_NAMESPACE_ID",
            "CLUSTER_WORKLOAD",
            "CLUSTER_WORKLOAD_ID",
            "CLUSTER_NODE",
            "CLUSTER_STORAGE",
            "CLUSTER_APPLICATION",
            "CLUSTER_ENVIRONMENT",
            "CLUSTER_SERVICE",
            "CLUSTER_CLOUD_PROVIDER",
            "CLUSTER_ECS_SERVICE",
            "CLUSTER_ECS_SERVICE_ID",
            "CLUSTER_ECS_TASK",
            "CLUSTER_ECS_TASK_ID",
            "CLUSTER_ECS_LAUNCH_TYPE",
            "CLUSTER_ECS_LAUNCH_TYPE_ID",
            "NAMESPACE",
            "GCP_PRODUCT",
            "GCP_PROJECT",
            "GCP_SKU_ID",
            "GCP_SKU_DESCRIPTION",
            "AWS_ACCOUNT",
            "AWS_SERVICE",
            "AWS_INSTANCE_TYPE",
            "AWS_USAGE_TYPE",
            "AZURE_SUBSCRIPTION_GUID",
            "AZURE_METER_NAME",
            "AZURE_METER_CATEGORY",
            "AZURE_METER_SUBCATEGORY",
            "AZURE_RESOURCE_ID",
            "AZURE_RESOURCE_GROUP_NAME",
            "AZURE_RESOURCE_TYPE",
            "AZURE_RESOURCE",
            "AZURE_SERVICE_NAME",
            "AZURE_SERVICE_TIER",
            "AZURE_INSTANCE_ID",
            "AZURE_SUBSCRIPTION_NAME",
            "AZURE_PUBLISHER_NAME",
            "AZURE_PUBLISHER_TYPE",
            "AZURE_RESERVATION_ID",
            "AZURE_RESERVATION_NAME",
            "AZURE_FREQUENCY",
            "COMMON_PRODUCT",
            "COMMON_REGION",
            "COMMON_NONE",
            "CLOUD_PROVIDER",
            "STATUS",
            "REGION",
            "ANOMALY_TIME",
            "ACTUAL_COST",
            "EXPECTED_COST",
            "COST_IMPACT",
            "ALL"
          ]
        }
      }
    },
    "CCMFilter": {
      "type": "object",
      "properties": {
        "stringFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMStringFilter"
          }
        },
        "numericFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMNumberFilter"
          }
        },
        "timeFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMTimeFilter"
          }
        }
      }
    },
    "CCMGroupBy": {
      "type": "object",
      "properties": {
        "groupByField": {
          "type": "string",
          "enum": [
            "PERSPECTIVE_ID",
            "WORKLOAD",
            "WORKLOAD_TYPE",
            "CLUSTER_ID",
            "CLUSTER_NAME",
            "CLUSTER_NAMESPACE",
            "CLUSTER_NAMESPACE_ID",
            "CLUSTER_WORKLOAD",
            "CLUSTER_WORKLOAD_ID",
            "CLUSTER_NODE",
            "CLUSTER_STORAGE",
            "CLUSTER_APPLICATION",
            "CLUSTER_ENVIRONMENT",
            "CLUSTER_SERVICE",
            "CLUSTER_CLOUD_PROVIDER",
            "CLUSTER_ECS_SERVICE",
            "CLUSTER_ECS_SERVICE_ID",
            "CLUSTER_ECS_TASK",
            "CLUSTER_ECS_TASK_ID",
            "CLUSTER_ECS_LAUNCH_TYPE",
            "CLUSTER_ECS_LAUNCH_TYPE_ID",
            "NAMESPACE",
            "GCP_PRODUCT",
            "GCP_PROJECT",
            "GCP_SKU_ID",
            "GCP_SKU_DESCRIPTION",
            "AWS_ACCOUNT",
            "AWS_SERVICE",
            "AWS_INSTANCE_TYPE",
            "AWS_USAGE_TYPE",
            "AZURE_SUBSCRIPTION_GUID",
            "AZURE_METER_NAME",
            "AZURE_METER_CATEGORY",
            "AZURE_METER_SUBCATEGORY",
            "AZURE_RESOURCE_ID",
            "AZURE_RESOURCE_GROUP_NAME",
            "AZURE_RESOURCE_TYPE",
            "AZURE_RESOURCE",
            "AZURE_SERVICE_NAME",
            "AZURE_SERVICE_TIER",
            "AZURE_INSTANCE_ID",
            "AZURE_SUBSCRIPTION_NAME",
            "AZURE_PUBLISHER_NAME",
            "AZURE_PUBLISHER_TYPE",
            "AZURE_RESERVATION_ID",
            "AZURE_RESERVATION_NAME",
            "AZURE_FREQUENCY",
            "COMMON_PRODUCT",
            "COMMON_REGION",
            "COMMON_NONE",
            "CLOUD_PROVIDER",
            "STATUS",
            "REGION",
            "ANOMALY_TIME",
            "ACTUAL_COST",
            "EXPECTED_COST",
            "COST_IMPACT",
            "ALL"
          ]
        }
      }
    },
    "CCMNumberFilter": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "PERSPECTIVE_ID",
            "WORKLOAD",
            "WORKLOAD_TYPE",
            "CLUSTER_ID",
            "CLUSTER_NAME",
            "CLUSTER_NAMESPACE",
            "CLUSTER_NAMESPACE_ID",
            "CLUSTER_WORKLOAD",
            "CLUSTER_WORKLOAD_ID",
            "CLUSTER_NODE",
            "CLUSTER_STORAGE",
            "CLUSTER_APPLICATION",
            "CLUSTER_ENVIRONMENT",
            "CLUSTER_SERVICE",
            "CLUSTER_CLOUD_PROVIDER",
            "CLUSTER_ECS_SERVICE",
            "CLUSTER_ECS_SERVICE_ID",
            "CLUSTER_ECS_TASK",
            "CLUSTER_ECS_TASK_ID",
            "CLUSTER_ECS_LAUNCH_TYPE",
            "CLUSTER_ECS_LAUNCH_TYPE_ID",
            "NAMESPACE",
            "GCP_PRODUCT",
            "GCP_PROJECT",
            "GCP_SKU_ID",
            "GCP_SKU_DESCRIPTION",
            "AWS_ACCOUNT",
            "AWS_SERVICE",
            "AWS_INSTANCE_TYPE",
            "AWS_USAGE_TYPE",
            "AZURE_SUBSCRIPTION_GUID",
            "AZURE_METER_NAME",
            "AZURE_METER_CATEGORY",
            "AZURE_METER_SUBCATEGORY",
            "AZURE_RESOURCE_ID",
            "AZURE_RESOURCE_GROUP_NAME",
            "AZURE_RESOURCE_TYPE",
            "AZURE_RESOURCE",
            "AZURE_SERVICE_NAME",
            "AZURE_SERVICE_TIER",
            "AZURE_INSTANCE_ID",
            "AZURE_SUBSCRIPTION_NAME",
            "AZURE_PUBLISHER_NAME",
            "AZURE_PUBLISHER_TYPE",
            "AZURE_RESERVATION_ID",
            "AZURE_RESERVATION_NAME",
            "AZURE_FREQUENCY",
            "COMMON_PRODUCT",
            "COMMON_REGION",
            "COMMON_NONE",
            "CLOUD_PROVIDER",
            "STATUS",
            "REGION",
            "ANOMALY_TIME",
            "ACTUAL_COST",
            "EXPECTED_COST",
            "COST_IMPACT",
            "ALL"
          ]
        },
        "operator": {
          "type": "string",
          "enum": [
            "NOT_IN",
            "IN",
            "EQUALS",
            "NOT_NULL",
            "NULL",
            "LIKE",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS_TO",
            "LESS_THAN_EQUALS_TO",
            "AFTER",
            "BEFORE"
          ]
        },
        "value": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "CCMSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "PERSPECTIVE_ID",
            "WORKLOAD",
            "WORKLOAD_TYPE",
            "CLUSTER_ID",
            "CLUSTER_NAME",
            "CLUSTER_NAMESPACE",
            "CLUSTER_NAMESPACE_ID",
            "CLUSTER_WORKLOAD",
            "CLUSTER_WORKLOAD_ID",
            "CLUSTER_NODE",
            "CLUSTER_STORAGE",
            "CLUSTER_APPLICATION",
            "CLUSTER_ENVIRONMENT",
            "CLUSTER_SERVICE",
            "CLUSTER_CLOUD_PROVIDER",
            "CLUSTER_ECS_SERVICE",
            "CLUSTER_ECS_SERVICE_ID",
            "CLUSTER_ECS_TASK",
            "CLUSTER_ECS_TASK_ID",
            "CLUSTER_ECS_LAUNCH_TYPE",
            "CLUSTER_ECS_LAUNCH_TYPE_ID",
            "NAMESPACE",
            "GCP_PRODUCT",
            "GCP_PROJECT",
            "GCP_SKU_ID",
            "GCP_SKU_DESCRIPTION",
            "AWS_ACCOUNT",
            "AWS_SERVICE",
            "AWS_INSTANCE_TYPE",
            "AWS_USAGE_TYPE",
            "AZURE_SUBSCRIPTION_GUID",
            "AZURE_METER_NAME",
            "AZURE_METER_CATEGORY",
            "AZURE_METER_SUBCATEGORY",
            "AZURE_RESOURCE_ID",
            "AZURE_RESOURCE_GROUP_NAME",
            "AZURE_RESOURCE_TYPE",
            "AZURE_RESOURCE",
            "AZURE_SERVICE_NAME",
            "AZURE_SERVICE_TIER",
            "AZURE_INSTANCE_ID",
            "AZURE_SUBSCRIPTION_NAME",
            "AZURE_PUBLISHER_NAME",
            "AZURE_PUBLISHER_TYPE",
            "AZURE_RESERVATION_ID",
            "AZURE_RESERVATION_NAME",
            "AZURE_FREQUENCY",
            "COMMON_PRODUCT",
            "COMMON_REGION",
            "COMMON_NONE",
            "CLOUD_PROVIDER",
            "STATUS",
            "REGION",
            "ANOMALY_TIME",
            "ACTUAL_COST",
            "EXPECTED_COST",
            "COST_IMPACT",
            "ALL"
          ]
        },
        "order": {
          "type": "string",
          "enum": ["ASCENDING", "DESCENDING"]
        }
      }
    },
    "CCMStringFilter": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "enum": [
            "PERSPECTIVE_ID",
            "WORKLOAD",
            "WORKLOAD_TYPE",
            "CLUSTER_ID",
            "CLUSTER_NAME",
            "CLUSTER_NAMESPACE",
            "CLUSTER_NAMESPACE_ID",
            "CLUSTER_WORKLOAD",
            "CLUSTER_WORKLOAD_ID",
            "CLUSTER_NODE",
            "CLUSTER_STORAGE",
            "CLUSTER_APPLICATION",
            "CLUSTER_ENVIRONMENT",
            "CLUSTER_SERVICE",
            "CLUSTER_CLOUD_PROVIDER",
            "CLUSTER_ECS_SERVICE",
            "CLUSTER_ECS_SERVICE_ID",
            "CLUSTER_ECS_TASK",
            "CLUSTER_ECS_TASK_ID",
            "CLUSTER_ECS_LAUNCH_TYPE",
            "CLUSTER_ECS_LAUNCH_TYPE_ID",
            "NAMESPACE",
            "GCP_PRODUCT",
            "GCP_PROJECT",
            "GCP_SKU_ID",
            "GCP_SKU_DESCRIPTION",
            "AWS_ACCOUNT",
            "AWS_SERVICE",
            "AWS_INSTANCE_TYPE",
            "AWS_USAGE_TYPE",
            "AZURE_SUBSCRIPTION_GUID",
            "AZURE_METER_NAME",
            "AZURE_METER_CATEGORY",
            "AZURE_METER_SUBCATEGORY",
            "AZURE_RESOURCE_ID",
            "AZURE_RESOURCE_GROUP_NAME",
            "AZURE_RESOURCE_TYPE",
            "AZURE_RESOURCE",
            "AZURE_SERVICE_NAME",
            "AZURE_SERVICE_TIER",
            "AZURE_INSTANCE_ID",
            "AZURE_SUBSCRIPTION_NAME",
            "AZURE_PUBLISHER_NAME",
            "AZURE_PUBLISHER_TYPE",
            "AZURE_RESERVATION_ID",
            "AZURE_RESERVATION_NAME",
            "AZURE_FREQUENCY",
            "COMMON_PRODUCT",
            "COMMON_REGION",
            "COMMON_NONE",
            "CLOUD_PROVIDER",
            "STATUS",
            "REGION",
            "ANOMALY_TIME",
            "ACTUAL_COST",
            "EXPECTED_COST",
            "COST_IMPACT",
            "ALL"
          ]
        },
        "operator": {
          "type": "string",
          "enum": [
            "NOT_IN",
            "IN",
            "EQUALS",
            "NOT_NULL",
            "NULL",
            "LIKE",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS_TO",
            "LESS_THAN_EQUALS_TO",
            "AFTER",
            "BEFORE"
          ]
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CCMTimeFilter": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "NOT_IN",
            "IN",
            "EQUALS",
            "NOT_NULL",
            "NULL",
            "LIKE",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_EQUALS_TO",
            "LESS_THAN_EQUALS_TO",
            "AFTER",
            "BEFORE"
          ]
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseBoolean": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "boolean"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AnomalyFeedbackDTO": {
      "type": "object",
      "properties": {
        "feedback": {
          "type": "string",
          "enum": ["TRUE_ANOMALY", "FALSE_ANOMALY", "NOT_RESPONDED"]
        }
      }
    },
    "AnomalySummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "count": {
          "type": "number",
          "format": "double"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "expectedCost": {
          "type": "number",
          "format": "double"
        },
        "anomalousCost": {
          "type": "number",
          "format": "double"
        },
        "costImpact": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseListAnomalySummary": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalySummary"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AnomalyWidgetData": {
      "type": "object",
      "properties": {
        "widgetDescription": {
          "type": "string",
          "enum": ["TOP_N_ANOMALIES", "TOTAL_COST_IMPACT", "ANOMALIES_BY_CLOUD_PROVIDERS", "ANOMALIES_BY_STATUS"]
        },
        "widgetData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalySummary"
          }
        }
      }
    },
    "ResponseListAnomalyWidgetData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnomalyWidgetData"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AlertThreshold": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "basedOn": {
          "type": "string",
          "enum": ["ACTUAL_COST", "FORECASTED_COST"]
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slackWebhooks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alertsSent": {
          "type": "integer",
          "format": "int32"
        },
        "crossedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "applicationIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "environmentType": {
              "type": "string",
              "enum": ["PROD", "NON_PROD", "ALL"]
            }
          }
        }
      ]
    },
    "Budget": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/BudgetScope"
        },
        "type": {
          "type": "string",
          "enum": ["SPECIFIED_AMOUNT", "PREVIOUS_MONTH_SPEND", "PREVIOUS_PERIOD_SPEND"]
        },
        "budgetAmount": {
          "type": "number",
          "format": "double"
        },
        "period": {
          "type": "string",
          "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
        },
        "growthRate": {
          "type": "number",
          "format": "double"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "forecastCost": {
          "type": "number",
          "format": "double"
        },
        "lastMonthCost": {
          "type": "number",
          "format": "double"
        },
        "alertThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertThreshold"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifyOnSlack": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "ngBudget": {
          "type": "boolean"
        }
      }
    },
    "BudgetScope": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "entityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "budgetScopeType": {
          "type": "string"
        }
      }
    },
    "ClusterBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "clusterIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PerspectiveBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "viewId": {
              "type": "string"
            },
            "viewName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ResponseBudget": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/Budget"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "string"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseListBudget": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseDouble": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "number",
          "format": "double"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BudgetCostData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "budgeted": {
          "type": "number",
          "format": "double"
        },
        "budgetVariance": {
          "type": "number",
          "format": "double"
        },
        "budgetVariancePercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BudgetData": {
      "type": "object",
      "properties": {
        "costData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetCostData"
          }
        },
        "forecastCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseBudgetData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/BudgetData"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BusinessMapping": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "accountId": {
          "type": "string"
        },
        "costTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostTarget"
          }
        },
        "sharedCosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedCost"
          }
        },
        "unallocatedCost": {
          "$ref": "#/definitions/UnallocatedCost"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "CostTarget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        }
      }
    },
    "EmbeddedUser": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "externalUserId": {
          "type": "string"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR",
              "POLICY_EVALUATION_FAILURE"
            ]
          }
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseBusinessMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/BusinessMapping"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SharedCost": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        },
        "strategy": {
          "type": "string",
          "enum": ["FIXED", "PROPORTIONAL"]
        },
        "splits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedCostSplit"
          }
        }
      }
    },
    "SharedCostSplit": {
      "type": "object",
      "properties": {
        "costTargetName": {
          "type": "string"
        },
        "percentageContribution": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "UnallocatedCost": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["DISPLAY_NAME", "HIDE", "SHARE"]
        },
        "label": {
          "type": "string"
        },
        "sharingStrategy": {
          "type": "string",
          "enum": ["FIXED", "PROPORTIONAL"]
        },
        "splits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedCostSplit"
          }
        }
      }
    },
    "ViewCondition": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "ViewField": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
        },
        "identifierName": {
          "type": "string"
        }
      }
    },
    "ViewIdCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/ViewCondition"
        },
        {
          "type": "object",
          "properties": {
            "viewField": {
              "$ref": "#/definitions/ViewField"
            },
            "viewOperator": {
              "type": "string",
              "enum": ["IN", "NOT_IN", "NOT_NULL", "NULL"]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ViewRule": {
      "type": "object",
      "properties": {
        "viewConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewCondition"
          }
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListBusinessMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessMapping"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ConnectorValidationResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN"]
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "errorSummary": {
          "type": "string"
        },
        "testedAt": {
          "type": "integer",
          "format": "int64"
        },
        "delegateId": {
          "type": "string"
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResponseConnectorValidationResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/ConnectorValidationResult"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AppDynamicsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accountname", "controllerUrl"],
          "properties": {
            "username": {
              "type": "string"
            },
            "accountname": {
              "type": "string"
            },
            "controllerUrl": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            },
            "clientSecretRef": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "authType": {
              "type": "string",
              "enum": ["UsernamePassword", "ApiClientToken"]
            }
          }
        }
      ]
    },
    "ArtifactoryAuthCredentials": {
      "type": "object"
    },
    "ArtifactoryAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        }
      }
    },
    "ArtifactoryConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["artifactoryServerUrl"],
          "properties": {
            "artifactoryServerUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/ArtifactoryAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ArtifactoryUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsCodeCommitAuthenticationDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["HTTPS"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        }
      }
    },
    "AwsCodeCommitConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/AwsCodeCommitAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Repo", "Region"]
            }
          }
        }
      ]
    },
    "AwsCodeCommitCredentialsDTO": {
      "type": "object"
    },
    "AwsCodeCommitHttpsCredentialsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["AWSCredentials"]
            },
            "spec": {
              "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "AwsCodeCommitHttpsCredentialsSpecDTO": {
      "type": "object"
    },
    "AwsCodeCommitSecretKeyAccessKeyDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "crossAccountAccess": {
          "$ref": "#/definitions/CrossAccountAccess"
        },
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig", "Irsa"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCredentialSpec"
        }
      }
    },
    "AwsCredentialSpec": {
      "type": "object"
    },
    "AwsCurAttributes": {
      "type": "object",
      "required": ["reportName", "s3BucketName"],
      "properties": {
        "reportName": {
          "type": "string"
        },
        "s3BucketName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "s3Prefix": {
          "type": "string"
        }
      }
    },
    "AwsKmsConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        }
      }
    },
    "AwsKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential", "kmsArn", "region"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsKmsConnectorCredential"
            },
            "kmsArn": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpec": {
      "type": "object"
    },
    "AwsKmsCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors", "roleArn"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            },
            "roleArn": {
              "type": "string"
            },
            "externalName": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsManualConfigSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object"
        }
      ]
    },
    "AwsSMCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["roleArn"],
          "properties": {
            "roleArn": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSecretManagerCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        }
      }
    },
    "AwsSecretManagerCredentialSpec": {
      "type": "object"
    },
    "AwsSecretManagerDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential", "region"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsSecretManagerCredential"
            },
            "region": {
              "type": "string"
            },
            "secretNamePrefix": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AzureAuthCredentialDTO": {
      "type": "object"
    },
    "AzureAuthDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Secret", "Certificate"]
        },
        "spec": {
          "$ref": "#/definitions/AzureAuthCredentialDTO"
        }
      }
    },
    "AzureClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["certificateRef"],
          "properties": {
            "certificateRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AzureClientSecretKeyDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["secretRef"],
          "properties": {
            "secretRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AzureConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["azureEnvironmentType", "credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AzureCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "azureEnvironmentType": {
              "type": "string",
              "enum": ["AZURE", "AZURE_US_GOVERNMENT"]
            }
          }
        }
      ]
    },
    "AzureCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AzureCredentialSpec"
        }
      }
    },
    "AzureCredentialSpec": {
      "type": "object"
    },
    "AzureKeyVaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["clientId", "secretKey", "subscription", "tenantId", "vaultName"],
          "properties": {
            "clientId": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "vaultName": {
              "type": "string"
            },
            "subscription": {
              "type": "string"
            },
            "azureEnvironmentType": {
              "type": "string",
              "enum": ["AZURE", "AZURE_US_GOVERNMENT"]
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AzureManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureCredentialSpec"
        },
        {
          "type": "object",
          "required": ["auth", "clientId", "tenantId"],
          "properties": {
            "clientId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "auth": {
              "readOnly": true,
              "$ref": "#/definitions/AzureAuthDTO"
            }
          }
        }
      ]
    },
    "BillingExportSpec": {
      "type": "object",
      "required": ["containerName", "directoryName", "reportName", "storageAccountName", "subscriptionId"],
      "properties": {
        "storageAccountName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "directoryName": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "BitbucketApiAccess": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernameToken"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        }
      }
    },
    "BitbucketApiAccessSpecDTO": {
      "type": "object"
    },
    "BitbucketAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        }
      }
    },
    "BitbucketConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/BitbucketAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/BitbucketApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "BitbucketCredentialsDTO": {
      "type": "object"
    },
    "BitbucketHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword"]
            },
            "spec": {
              "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "BitbucketHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "BitbucketSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernameTokenApiAccess": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CEAwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["crossAccountAccess"],
          "properties": {
            "crossAccountAccess": {
              "$ref": "#/definitions/CrossAccountAccess"
            },
            "curAttributes": {
              "$ref": "#/definitions/AwsCurAttributes"
            },
            "awsAccountId": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "CEAzureConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["subscriptionId", "tenantId"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "tenantId": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/BillingExportSpec"
            }
          }
        }
      ]
    },
    "CEKubernetesClusterConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectorRef"],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "ConnectorActivityDetails": {
      "type": "object",
      "properties": {
        "lastActivityTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConnectorConfigDTO": {
      "type": "object"
    },
    "ConnectorConnectivityDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN"]
        },
        "errorSummary": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "testedAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastTestedAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastConnectedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConnectorInfoDTO": {
      "type": "object",
      "required": ["identifier", "name", "spec", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "K8sCluster",
            "Git",
            "Splunk",
            "AppDynamics",
            "Prometheus",
            "Dynatrace",
            "Vault",
            "AzureKeyVault",
            "DockerRegistry",
            "Local",
            "AwsKms",
            "GcpKms",
            "AwsSecretManager",
            "Gcp",
            "Aws",
            "Azure",
            "Artifactory",
            "Jira",
            "Nexus",
            "Github",
            "Gitlab",
            "Bitbucket",
            "Codecommit",
            "CEAws",
            "CEAzure",
            "GcpCloudCost",
            "CEK8sCluster",
            "HttpHelmRepo",
            "NewRelic",
            "Datadog",
            "SumoLogic",
            "PagerDuty",
            "CustomHealth",
            "ServiceNow",
            "ErrorTracking",
            "Pdc"
          ]
        },
        "spec": {
          "$ref": "#/definitions/ConnectorConfigDTO"
        }
      }
    },
    "ConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/ConnectorConnectivityDetails"
        },
        "activityDetails": {
          "$ref": "#/definitions/ConnectorActivityDetails"
        },
        "harnessManaged": {
          "type": "boolean"
        },
        "gitDetails": {
          "$ref": "#/definitions/EntityGitDetails"
        },
        "entityValidityDetails": {
          "$ref": "#/definitions/EntityValidityDetails"
        }
      }
    },
    "CrossAccountAccess": {
      "type": "object",
      "required": ["crossAccountRoleArn"],
      "properties": {
        "crossAccountRoleArn": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "CustomHealthConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["baseURL", "method"],
          "properties": {
            "baseURL": {
              "type": "string"
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "params": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "method": {
              "type": "string",
              "enum": ["GET", "POST"]
            },
            "validationBody": {
              "type": "string"
            },
            "validationPath": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CustomHealthKeyAndValue": {
      "type": "object",
      "required": ["key"],
      "properties": {
        "key": {
          "type": "string"
        },
        "encryptedValueRef": {
          "$ref": "#/definitions/SecretRefData"
        },
        "value": {
          "type": "string"
        },
        "valueEncrypted": {
          "type": "boolean"
        }
      }
    },
    "DatadogConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "applicationKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "applicationKeyRef": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerAuthCredentialsDTO": {
      "type": "object"
    },
    "DockerAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        }
      }
    },
    "DockerConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["dockerRegistryUrl", "providerType"],
          "properties": {
            "dockerRegistryUrl": {
              "type": "string"
            },
            "providerType": {
              "type": "string",
              "enum": ["DockerHub", "Harbor", "Quay", "Other"]
            },
            "auth": {
              "$ref": "#/definitions/DockerAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DynatraceConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "EntityGitDetails": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "repoIdentifier": {
          "type": "string"
        },
        "rootFolder": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        }
      }
    },
    "EntityValidityDetails": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "invalidYaml": {
          "type": "string"
        }
      }
    },
    "ErrorTrackingConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpBillingExportSpec": {
      "type": "object",
      "required": ["datasetId", "tableId"],
      "properties": {
        "datasetId": {
          "type": "string"
        },
        "tableId": {
          "type": "string"
        }
      }
    },
    "GcpCloudCostConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["projectId", "serviceAccountEmail"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "projectId": {
              "type": "string"
            },
            "serviceAccountEmail": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/GcpBillingExportSpec"
            }
          }
        }
      ]
    },
    "GcpConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/GcpConnectorCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/GcpCredentialSpec"
        }
      }
    },
    "GcpCredentialSpec": {
      "type": "object"
    },
    "GcpKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credentials", "keyName", "keyRing", "projectId", "region"],
          "properties": {
            "projectId": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "keyRing": {
              "type": "string"
            },
            "keyName": {
              "type": "string"
            },
            "credentials": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "GcpManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitAuthenticationDTO": {
      "type": "object",
      "discriminator": "type"
    },
    "GitConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectionType", "spec", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "branchName": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Http", "Ssh"]
            },
            "connectionType": {
              "type": "string",
              "enum": ["Account", "Repo"]
            },
            "spec": {
              "$ref": "#/definitions/GitAuthenticationDTO"
            }
          }
        }
      ]
    },
    "GitHTTPAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitSSHAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["GithubApp", "Token"]
        },
        "spec": {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        }
      }
    },
    "GithubApiAccessSpecDTO": {
      "type": "object"
    },
    "GithubAppSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["applicationId", "installationId", "privateKeyRef"],
          "properties": {
            "installationId": {
              "type": "string"
            },
            "applicationId": {
              "type": "string"
            },
            "privateKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GithubCredentialsDTO"
        }
      }
    },
    "GithubConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GithubAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GithubApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GithubCredentialsDTO": {
      "type": "object"
    },
    "GithubHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken"]
            },
            "spec": {
              "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GithubHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GithubSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Token"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        }
      }
    },
    "GitlabApiAccessSpecDTO": {
      "type": "object"
    },
    "GitlabAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        }
      }
    },
    "GitlabConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GitlabAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GitlabApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GitlabCredentialsDTO": {
      "type": "object"
    },
    "GitlabHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken", "Kerberos"]
            },
            "spec": {
              "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GitlabHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GitlabKerberos": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["kerberosKeyRef"],
          "properties": {
            "kerberosKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HostDTO": {
      "type": "object",
      "required": ["hostname"],
      "properties": {
        "hostname": {
          "type": "string"
        },
        "hostAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HttpHelmAuthCredentialsDTO": {
      "type": "object"
    },
    "HttpHelmAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        }
      }
    },
    "HttpHelmConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["helmRepoUrl"],
          "properties": {
            "helmRepoUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/HttpHelmAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HttpHelmUsernamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "JiraConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["jiraUrl", "passwordRef"],
          "properties": {
            "jiraUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesAuthCredentialDTO": {
      "type": "object"
    },
    "KubernetesAuthDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "ClientKeyCert", "ServiceAccount", "OpenIdConnect"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        }
      }
    },
    "KubernetesClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["clientCertRef", "clientKeyRef"],
          "properties": {
            "caCertRef": {
              "type": "string"
            },
            "clientCertRef": {
              "type": "string"
            },
            "clientKeyRef": {
              "type": "string"
            },
            "clientKeyPassphraseRef": {
              "type": "string"
            },
            "clientKeyAlgo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesClusterConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/KubernetesCredentialDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesClusterDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": ["auth", "masterUrl"],
          "properties": {
            "masterUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/KubernetesAuthDTO"
            }
          }
        }
      ]
    },
    "KubernetesCredentialDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        }
      }
    },
    "KubernetesCredentialSpecDTO": {
      "type": "object"
    },
    "KubernetesOpenIdConnectDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["oidcClientIdRef", "oidcPasswordRef"],
          "properties": {
            "oidcIssuerUrl": {
              "type": "string"
            },
            "oidcUsername": {
              "type": "string"
            },
            "oidcUsernameRef": {
              "type": "string"
            },
            "oidcClientIdRef": {
              "type": "string"
            },
            "oidcPasswordRef": {
              "type": "string"
            },
            "oidcSecretRef": {
              "type": "string"
            },
            "oidcScopes": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesServiceAccountDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["serviceAccountTokenRef"],
          "properties": {
            "serviceAccountTokenRef": {
              "type": "string"
            },
            "caCertRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "LocalConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "NewRelicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "newRelicAccountId", "url"],
          "properties": {
            "newRelicAccountId": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusAuthCredentials": {
      "type": "object"
    },
    "NexusAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/NexusAuthCredentials"
        }
      }
    },
    "NexusConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["nexusServerUrl", "version"],
          "properties": {
            "nexusServerUrl": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/NexusAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/NexusAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "PagerDutyConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef"],
          "properties": {
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PhysicalDataCenterConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostDTO"
              }
            },
            "sshKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PrometheusConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SecretRefData": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": ["account", "org", "project", "unknown"]
        },
        "decryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "null": {
          "type": "boolean"
        }
      }
    },
    "ServiceNowConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef", "serviceNowUrl"],
          "properties": {
            "serviceNowUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SplunkConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accountId", "passwordRef", "splunkUrl"],
          "properties": {
            "splunkUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "accountId": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "SumoLogicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accessIdRef", "accessKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "accessIdRef": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "VaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["renewalIntervalMinutes", "vaultUrl"],
          "properties": {
            "authToken": {
              "type": "string"
            },
            "basePath": {
              "type": "string"
            },
            "vaultUrl": {
              "type": "string"
            },
            "renewalIntervalMinutes": {
              "type": "integer",
              "format": "int64"
            },
            "secretEngineManuallyConfigured": {
              "type": "boolean"
            },
            "secretEngineName": {
              "type": "string"
            },
            "appRoleId": {
              "type": "string"
            },
            "secretId": {
              "type": "string"
            },
            "secretEngineVersion": {
              "type": "integer",
              "format": "int32"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string"
            },
            "sinkPath": {
              "type": "string"
            },
            "useVaultAgent": {
              "type": "boolean"
            },
            "useAwsIam": {
              "type": "boolean"
            },
            "awsRegion": {
              "type": "string"
            },
            "vaultAwsIamRole": {
              "type": "string"
            },
            "xvaultAwsIamServerId": {
              "type": "string"
            },
            "useK8sAuth": {
              "type": "boolean"
            },
            "vaultK8sAuthRole": {
              "type": "string"
            },
            "serviceAccountTokenPath": {
              "type": "string"
            },
            "default": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            },
            "accessType": {
              "type": "string",
              "enum": ["APP_ROLE", "TOKEN", "VAULT_AGENT", "AWS_IAM", "K8s_AUTH"]
            }
          }
        }
      ]
    },
    "CCMConnectorDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "connectorValidationResult": {
          "$ref": "#/definitions/ConnectorValidationResult"
        }
      }
    },
    "ResponseCCMConnectorDetails": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CCMConnectorDetails"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "CCMNotificationChannel": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "notificationChannelType": {
          "type": "string",
          "enum": ["EMAIL", "SLACK", "PAGERDUTY", "MSTEAMS"]
        },
        "channelUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CCMNotificationSetting": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "perspectiveId": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMNotificationChannel"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "EmailNotificationChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/CCMNotificationChannel"
        },
        {
          "type": "object",
          "properties": {
            "emails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "MicrosoftTeamsNotificationChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/CCMNotificationChannel"
        },
        {
          "type": "object",
          "properties": {
            "microsoftTeamsUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ResponseCCMNotificationSetting": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CCMNotificationSetting"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "SlackNotificationChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/CCMNotificationChannel"
        },
        {
          "type": "object",
          "properties": {
            "slackWebHookUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CCMPerspectiveNotificationChannelsDTO": {
      "type": "object",
      "properties": {
        "perspectiveId": {
          "type": "string"
        },
        "perspectiveName": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMNotificationChannel"
          }
        }
      }
    },
    "ResponseListCCMPerspectiveNotificationChannelsDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMPerspectiveNotificationChannelsDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "CELicenseUsageDTO": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "activeSpend": {
          "$ref": "#/definitions/UsageDataDTO"
        }
      }
    },
    "ReferenceDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "accountIdentifier": {
          "type": "string"
        }
      }
    },
    "ResponseCELicenseUsageDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CELicenseUsageDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "UsageDataDTO": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "displayName": {
          "type": "string"
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceDTO"
          }
        }
      }
    },
    "Failure": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        },
        "metadata": {
          "$ref": "#/definitions/ErrorMetadataDTO"
        }
      }
    },
    "ErrorMetadataDTO": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "SampleErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "sampleMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ScmErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "conflictCommitId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "TemplateInputsErrorDTO": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "identifierOfErrorSource": {
          "type": "string"
        }
      }
    },
    "TemplateInputsErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "errorYaml": {
              "type": "string"
            },
            "errorMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/TemplateInputsErrorDTO"
              }
            }
          }
        }
      ]
    },
    "K8sClusterSetupRequest": {
      "type": "object",
      "properties": {
        "featuresEnabled": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
          }
        },
        "connectorIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "ccmConnectorIdentifier": {
          "type": "string"
        }
      }
    },
    "AwsAccountConnectionDetail": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "harnessAccountId": {
          "type": "string"
        },
        "cloudFormationTemplateLink": {
          "type": "string"
        },
        "stackLaunchTemplateLink": {
          "type": "string"
        }
      }
    },
    "ResponseAwsAccountConnectionDetail": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/AwsAccountConnectionDetail"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "GraphQLQuery": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "QueryStat": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "avgExecutionTime": {
          "type": "number",
          "format": "double"
        },
        "maxExecutionTime": {
          "type": "number",
          "format": "double"
        },
        "secondMaxExecutionTime": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseMapStringQueryStat": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/QueryStat"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ClusterData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "idleCost": {
          "type": "number",
          "format": "double"
        },
        "networkCost": {
          "type": "number",
          "format": "double"
        },
        "systemCost": {
          "type": "number",
          "format": "double"
        },
        "cpuIdleCost": {
          "type": "number",
          "format": "double"
        },
        "cpuActualIdleCost": {
          "type": "number",
          "format": "double"
        },
        "memoryIdleCost": {
          "type": "number",
          "format": "double"
        },
        "memoryActualIdleCost": {
          "type": "number",
          "format": "double"
        },
        "costTrend": {
          "type": "number",
          "format": "double"
        },
        "trendType": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "launchType": {
          "type": "string"
        },
        "cloudServiceName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "workloadName": {
          "type": "string"
        },
        "workloadType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "clusterType": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cloudProvider": {
          "type": "string"
        },
        "maxCpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "maxMemoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "avgCpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "avgMemoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "unallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "prevBillingAmount": {
          "type": "number",
          "format": "double"
        },
        "appName": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "cloudProviderId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "storageCost": {
          "type": "number",
          "format": "double"
        },
        "memoryBillingAmount": {
          "type": "number",
          "format": "double"
        },
        "cpuBillingAmount": {
          "type": "number",
          "format": "double"
        },
        "storageUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "memoryUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "cpuUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "storageRequest": {
          "type": "number",
          "format": "double"
        },
        "storageUtilizationValue": {
          "type": "number",
          "format": "double"
        },
        "storageActualIdleCost": {
          "type": "number",
          "format": "double"
        },
        "efficiencyScore": {
          "type": "integer",
          "format": "int32"
        },
        "efficiencyScoreTrendPercentage": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InstanceDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "nodeId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workload": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "nodePoolName": {
          "type": "string"
        },
        "cloudProviderInstanceId": {
          "type": "string"
        },
        "podCapacity": {
          "type": "string"
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "idleCost": {
          "type": "number",
          "format": "double"
        },
        "systemCost": {
          "type": "number",
          "format": "double"
        },
        "networkCost": {
          "type": "number",
          "format": "double"
        },
        "unallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "cpuAllocatable": {
          "type": "number",
          "format": "double"
        },
        "memoryAllocatable": {
          "type": "number",
          "format": "double"
        },
        "cpuRequested": {
          "type": "number",
          "format": "double"
        },
        "memoryRequested": {
          "type": "number",
          "format": "double"
        },
        "cpuUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "memoryUnitPrice": {
          "type": "number",
          "format": "double"
        },
        "instanceCategory": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "deleteTime": {
          "type": "integer",
          "format": "int64"
        },
        "qosClass": {
          "type": "string"
        },
        "memoryBillingAmount": {
          "type": "number",
          "format": "double"
        },
        "cpuBillingAmount": {
          "type": "number",
          "format": "double"
        },
        "storageUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "memoryUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "cpuUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "memoryIdleCost": {
          "type": "number",
          "format": "double"
        },
        "cpuIdleCost": {
          "type": "number",
          "format": "double"
        },
        "storageCost": {
          "type": "number",
          "format": "double"
        },
        "storageActualIdleCost": {
          "type": "number",
          "format": "double"
        },
        "storageUtilizationValue": {
          "type": "number",
          "format": "double"
        },
        "storageRequest": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PerspectiveEntityStatsData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEViewEntityStatsDataPoint"
          }
        }
      }
    },
    "QLCEViewEntityStatsDataPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "pricingSource": {
          "type": "string"
        },
        "cost": {
          "$ref": "#/definitions/Number"
        },
        "costTrend": {
          "$ref": "#/definitions/Number"
        },
        "clusterData": {
          "$ref": "#/definitions/ClusterData"
        },
        "instanceDetails": {
          "$ref": "#/definitions/InstanceDetails"
        },
        "storageDetails": {
          "$ref": "#/definitions/StorageDetails"
        },
        "clusterPerspective": {
          "type": "boolean"
        }
      }
    },
    "ResponsePerspectiveEntityStatsData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PerspectiveEntityStatsData"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "StorageDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "claimName": {
          "type": "string"
        },
        "claimNamespace": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "cloudProvider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "storageCost": {
          "type": "number",
          "format": "double"
        },
        "storageActualIdleCost": {
          "type": "number",
          "format": "double"
        },
        "storageUnallocatedCost": {
          "type": "number",
          "format": "double"
        },
        "capacity": {
          "type": "number",
          "format": "double"
        },
        "storageRequest": {
          "type": "number",
          "format": "double"
        },
        "storageUtilizationValue": {
          "type": "number",
          "format": "double"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "deleteTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CostDetailsQueryParamsDTO": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CCMStringFilter"
          }
        },
        "groupBy": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PERSPECTIVE_ID",
              "WORKLOAD",
              "WORKLOAD_TYPE",
              "CLUSTER_ID",
              "CLUSTER_NAME",
              "CLUSTER_NAMESPACE",
              "CLUSTER_NAMESPACE_ID",
              "CLUSTER_WORKLOAD",
              "CLUSTER_WORKLOAD_ID",
              "CLUSTER_NODE",
              "CLUSTER_STORAGE",
              "CLUSTER_APPLICATION",
              "CLUSTER_ENVIRONMENT",
              "CLUSTER_SERVICE",
              "CLUSTER_CLOUD_PROVIDER",
              "CLUSTER_ECS_SERVICE",
              "CLUSTER_ECS_SERVICE_ID",
              "CLUSTER_ECS_TASK",
              "CLUSTER_ECS_TASK_ID",
              "CLUSTER_ECS_LAUNCH_TYPE",
              "CLUSTER_ECS_LAUNCH_TYPE_ID",
              "NAMESPACE",
              "GCP_PRODUCT",
              "GCP_PROJECT",
              "GCP_SKU_ID",
              "GCP_SKU_DESCRIPTION",
              "AWS_ACCOUNT",
              "AWS_SERVICE",
              "AWS_INSTANCE_TYPE",
              "AWS_USAGE_TYPE",
              "AZURE_SUBSCRIPTION_GUID",
              "AZURE_METER_NAME",
              "AZURE_METER_CATEGORY",
              "AZURE_METER_SUBCATEGORY",
              "AZURE_RESOURCE_ID",
              "AZURE_RESOURCE_GROUP_NAME",
              "AZURE_RESOURCE_TYPE",
              "AZURE_RESOURCE",
              "AZURE_SERVICE_NAME",
              "AZURE_SERVICE_TIER",
              "AZURE_INSTANCE_ID",
              "AZURE_SUBSCRIPTION_NAME",
              "AZURE_PUBLISHER_NAME",
              "AZURE_PUBLISHER_TYPE",
              "AZURE_RESERVATION_ID",
              "AZURE_RESERVATION_NAME",
              "AZURE_FREQUENCY",
              "COMMON_PRODUCT",
              "COMMON_REGION",
              "COMMON_NONE",
              "CLOUD_PROVIDER",
              "STATUS",
              "REGION",
              "ANOMALY_TIME",
              "ACTUAL_COST",
              "EXPECTED_COST",
              "COST_IMPACT",
              "ALL"
            ]
          }
        },
        "timeResolution": {
          "type": "string",
          "enum": ["HOUR", "DAY", "MONTH", "WEEK", "QUARTER", "YEAR"]
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "sortOrder": {
          "type": "string",
          "enum": ["ASCENDING", "DESCENDING"]
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "skipRoundOff": {
          "type": "boolean"
        }
      }
    },
    "DataPoint": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/Reference"
        },
        "value": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "PerspectiveTimeSeriesData": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "cpuUtilValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "memoryUtilValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "cpuRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "cpuLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "memoryRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        },
        "memoryLimit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoints"
          }
        }
      }
    },
    "Reference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResponsePerspectiveTimeSeriesData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PerspectiveTimeSeriesData"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "TimeSeriesDataPoints": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoint"
          }
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseStatsInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/StatsInfo"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "StatsInfo": {
      "type": "object",
      "properties": {
        "statsLabel": {
          "type": "string"
        },
        "statsDescription": {
          "type": "string"
        },
        "statsValue": {
          "type": "string"
        },
        "statsTrend": {
          "$ref": "#/definitions/Number"
        },
        "value": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "RestResponseViewCustomField": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ViewCustomField"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ViewCustomField": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "viewId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sqlFormula": {
          "type": "string"
        },
        "displayFormula": {
          "type": "string"
        },
        "userDefinedExpression": {
          "type": "string"
        },
        "viewFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewField"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CEView": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "accountId": {
          "type": "string"
        },
        "viewVersion": {
          "type": "string"
        },
        "viewTimeRange": {
          "$ref": "#/definitions/ViewTimeRange"
        },
        "viewRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        },
        "dataSources": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
          }
        },
        "viewVisualization": {
          "$ref": "#/definitions/ViewVisualization"
        },
        "viewType": {
          "type": "string",
          "enum": ["SAMPLE", "CUSTOMER", "DEFAULT_AZURE", "DEFAULT"]
        },
        "viewState": {
          "type": "string",
          "enum": ["DRAFT", "COMPLETED"]
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "ViewTimeRange": {
      "type": "object",
      "properties": {
        "viewTimeRangeType": {
          "type": "string",
          "enum": ["LAST_7", "LAST_30", "LAST_MONTH", "CURRENT_MONTH", "CUSTOM"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ViewVisualization": {
      "type": "object",
      "properties": {
        "granularity": {
          "type": "string",
          "enum": ["DAY", "MONTH"]
        },
        "groupBy": {
          "$ref": "#/definitions/ViewField"
        },
        "chartType": {
          "type": "string",
          "enum": ["STACKED_TIME_SERIES", "STACKED_LINE_CHART"]
        }
      }
    },
    "CEReportSchedule": {
      "type": "object",
      "required": ["viewsId"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "viewsId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "userCron": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 50,
          "minItems": 0
        },
        "accountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "userCronTimeZone": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "nextExecution": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResponseListCEReportSchedule": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CEReportSchedule"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseCEView": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CEView"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "QLCEView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "chartType": {
          "type": "string",
          "enum": ["STACKED_TIME_SERIES", "STACKED_LINE_CHART"]
        },
        "viewType": {
          "type": "string",
          "enum": ["SAMPLE", "CUSTOMER", "DEFAULT_AZURE", "DEFAULT"]
        },
        "viewState": {
          "type": "string",
          "enum": ["DRAFT", "COMPLETED"]
        },
        "groupBy": {
          "$ref": "#/definitions/QLCEViewField"
        },
        "timeRange": {
          "type": "string",
          "enum": ["LAST_7", "LAST_30", "LAST_MONTH", "CURRENT_MONTH", "CUSTOM"]
        },
        "dataSources": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
          }
        },
        "reportScheduledConfigured": {
          "type": "boolean"
        }
      }
    },
    "QLCEViewField": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
        },
        "identifierName": {
          "type": "string"
        }
      }
    },
    "ResponseListQLCEView": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEView"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ClusterRecommendationAccuracy": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "masterPrice": {
          "type": "number",
          "format": "double"
        },
        "memory": {
          "type": "number",
          "format": "double"
        },
        "nodes": {
          "type": "integer",
          "format": "int64"
        },
        "regularNodes": {
          "type": "integer",
          "format": "int64"
        },
        "regularPrice": {
          "type": "number",
          "format": "double"
        },
        "spotNodes": {
          "type": "integer",
          "format": "int64"
        },
        "spotPrice": {
          "type": "number",
          "format": "double"
        },
        "totalPrice": {
          "type": "number",
          "format": "double"
        },
        "workerPrice": {
          "type": "number",
          "format": "double"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "NodePool": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "sumNodes": {
          "type": "integer",
          "format": "int64"
        },
        "vm": {
          "$ref": "#/definitions/VirtualMachine"
        },
        "vmClass": {
          "type": "string"
        }
      }
    },
    "NodePoolId": {
      "type": "object",
      "properties": {
        "nodepoolname": {
          "type": "string"
        },
        "clusterid": {
          "type": "string"
        }
      }
    },
    "NodeRecommendationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "nodePoolId": {
          "$ref": "#/definitions/NodePoolId"
        },
        "resourceRequirement": {
          "$ref": "#/definitions/RecommendClusterRequest"
        },
        "current": {
          "$ref": "#/definitions/RecommendationResponse"
        },
        "recommended": {
          "$ref": "#/definitions/RecommendationResponse"
        },
        "totalResourceUsage": {
          "$ref": "#/definitions/TotalResourceUsage"
        }
      }
    },
    "RecommendClusterRequest": {
      "type": "object",
      "properties": {
        "allowBurst": {
          "type": "boolean"
        },
        "allowOlderGen": {
          "type": "boolean"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxNodes": {
          "type": "integer",
          "format": "int64"
        },
        "minNodes": {
          "type": "integer",
          "format": "int64"
        },
        "networkPerf": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "onDemandPct": {
          "type": "integer",
          "format": "int64"
        },
        "sameSize": {
          "type": "boolean"
        },
        "sumCpu": {
          "type": "number",
          "format": "double"
        },
        "sumGpu": {
          "type": "integer",
          "format": "int64"
        },
        "sumMem": {
          "type": "number",
          "format": "double"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "RecommendationResponse": {
      "type": "object",
      "properties": {
        "accuracy": {
          "$ref": "#/definitions/ClusterRecommendationAccuracy"
        },
        "nodePools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodePool"
          }
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "instanceCategory": {
          "type": "string",
          "enum": ["ON_DEMAND", "SPOT", "RESERVED"]
        }
      }
    },
    "ResponseNodeRecommendationDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/NodeRecommendationDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "TotalResourceUsage": {
      "type": "object",
      "properties": {
        "sumcpu": {
          "type": "number",
          "format": "double"
        },
        "summemory": {
          "type": "number",
          "format": "double"
        },
        "maxcpu": {
          "type": "number",
          "format": "double"
        },
        "maxmemory": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "VirtualMachine": {
      "type": "object",
      "properties": {
        "avgPrice": {
          "type": "number",
          "format": "double"
        },
        "burst": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "cpusPerVm": {
          "type": "number",
          "format": "double"
        },
        "currentGen": {
          "type": "boolean"
        },
        "gpusPerVm": {
          "type": "number",
          "format": "double"
        },
        "memPerVm": {
          "type": "number",
          "format": "double"
        },
        "allocatableCpusPerVm": {
          "type": "number",
          "format": "double"
        },
        "allocatableMemPerVm": {
          "type": "number",
          "format": "double"
        },
        "networkPerf": {
          "type": "string"
        },
        "networkPerfCategory": {
          "type": "string"
        },
        "onDemandPrice": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContainerHistogramDTO": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "cpuHistogram": {
          "$ref": "#/definitions/HistogramExp"
        },
        "memoryHistogram": {
          "$ref": "#/definitions/HistogramExp"
        },
        "containerRecommendation": {
          "$ref": "#/definitions/ContainerRecommendation"
        }
      }
    },
    "ContainerRecommendation": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/ResourceRequirement"
        },
        "burstable": {
          "$ref": "#/definitions/ResourceRequirement"
        },
        "guaranteed": {
          "$ref": "#/definitions/ResourceRequirement"
        },
        "recommended": {
          "$ref": "#/definitions/ResourceRequirement"
        },
        "percentileBased": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceRequirement"
          }
        },
        "lastDayCost": {
          "$ref": "#/definitions/Cost"
        },
        "numDays": {
          "type": "integer",
          "format": "int32"
        },
        "totalSamplesCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Cost": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number"
        },
        "memory": {
          "type": "number"
        }
      }
    },
    "HistogramExp": {
      "type": "object",
      "properties": {
        "firstBucketSize": {
          "type": "number",
          "format": "double"
        },
        "growthRatio": {
          "type": "number",
          "format": "double"
        },
        "numBuckets": {
          "type": "integer",
          "format": "int32"
        },
        "minBucket": {
          "type": "integer",
          "format": "int32"
        },
        "maxBucket": {
          "type": "integer",
          "format": "int32"
        },
        "bucketWeights": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "totalWeight": {
          "type": "number",
          "format": "double"
        },
        "precomputed": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "ResourceRequirement": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponseWorkloadRecommendationDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/WorkloadRecommendationDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "WorkloadRecommendationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "containerRecommendations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ContainerRecommendation"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerHistogramDTO"
          }
        },
        "lastDayCost": {
          "$ref": "#/definitions/Cost"
        }
      }
    },
    "RecommendationOverviewStats": {
      "type": "object",
      "properties": {
        "totalMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "totalMonthlySaving": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseRecommendationOverviewStats": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RecommendationOverviewStats"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "K8sRecommendationFilterDTO": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["WORKLOAD", "NODE_POOL"]
          }
        },
        "perspectiveFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QLCEViewFilterWrapper"
          }
        },
        "minSaving": {
          "type": "number",
          "format": "double"
        },
        "minCost": {
          "type": "number",
          "format": "double"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseInteger": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "integer",
          "format": "int32"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RecommendationItemDTO": {
      "type": "object",
      "required": ["id", "resourceType"],
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "monthlySaving": {
          "type": "number",
          "format": "double"
        },
        "monthlyCost": {
          "type": "number",
          "format": "double"
        },
        "resourceType": {
          "type": "string",
          "enum": ["WORKLOAD", "NODE_POOL"]
        }
      }
    },
    "RecommendationsDTO": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecommendationItemDTO"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseRecommendationsDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RecommendationsDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "FilterStatsDTO": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResponseListFilterStatsDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterStatsDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "FilterValuesDTO": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "$ref": "#/definitions/K8sRecommendationFilterDTO"
        }
      }
    },
    "LicenseUsageDTO": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseLicenseUsageDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/LicenseUsageDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    }
  }
}
