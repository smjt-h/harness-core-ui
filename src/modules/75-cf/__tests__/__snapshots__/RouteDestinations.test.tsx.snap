// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RouteDestinations it should render default routes 1`] = `
Array [
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="CFHomePage"
    path="/account/:accountId/cf"
  >
    <RedirectToCFHome />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier"
  >
    <RedirectToCFProject />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    pageName="CFTrialHomePage"
    path="/account/:accountId/cf/home/trial"
  >
    <CFTrialHomePage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="CFHomePage"
    path="/account/:accountId/cf/home"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <CFHomePage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="FeatureFlagsLandingPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/feature-flags"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
      <FeatureFlagsLandingPage />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="FeatureFlagsDetailPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/feature-flags/:featureFlagIdentifier"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
      <FeatureFlagsDetailPage />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SegmentDetailPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/target-management/target-groups/:segmentIdentifier"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
       
      <SegmentDetailPage />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="LegacyTargetDetailPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/target-management/targets/:targetIdentifier"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
       
      <TargetDetailPage />
       
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/target-management"
  >
    <RedirectToTargets />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SegmentsPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/target-management/target-groups"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
      <SegmentsPage />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="TargetsPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/target-management/targets"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <TargetsPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="EnvironmentsPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/environments"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
      <EnvironmentsPage />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="EnvironmentDetails"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/environments/:environmentIdentifier"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <FFGitSyncProvider>
      <EnvironmentDetails />
    </FFGitSyncProvider>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="OnboardingPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/onboarding"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <OnboardingPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="OnboardingDetailPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/onboarding/detail"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <OnboardingDetailPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="CFWorkflowsPage"
    path="/account/:accountId/cf/orgs/:orgIdentifier/projects/:projectIdentifier/workflows"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <CFWorkflowsPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="ConnectorsPage"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/connectors"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <ConnectorsPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="CreateConnectorFromYamlPage"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/connectors/yaml/create-connector"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <CreateConnectorFromYamlPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="ConnectorDetailsPage"
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/connectors/:connectorId"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <ConnectorDetailsPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SecretsPage"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/secrets"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <SecretsPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/variables"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <VariablesPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="CreateSecretFromYamlPage"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/secrets/yaml/create-secret"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <CreateSecretFromYamlPage />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SecretDetails"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/secrets/:secretId"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <RedirectToSecretDetailHome />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SecretDetails"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/secrets/:secretId/overview"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <SecretDetaislHomePage>
      <SecretDetails />
    </SecretDetaislHomePage>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="SecretReferences"
    path="/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/resources/secrets/:secretId/references"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <SecretDetaislHomePage>
      <SecretReferences />
    </SecretDetaislHomePage>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="GitSyncRepoTab"
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/git-sync",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <RedirectToGitSyncHome />
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="GitSyncRepoTab"
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/git-sync/repos"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <GitSyncPage>
      <GitSyncRepoTab />
    </GitSyncPage>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="GitSyncEntityTab"
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/git-sync/entities"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <GitSyncPage>
      <GitSyncEntityTab />
    </GitSyncPage>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="GitSyncErrors"
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/git-sync/errors"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <GitSyncPage>
      <GitSyncErrors />
    </GitSyncPage>
  </RouteWithLayout>,
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    pageName="GitSyncConfigTab"
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/git-sync/config"
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <GitSyncPage>
      <GitSyncConfigTab />
    </GitSyncPage>
  </RouteWithLayout>,
  <AdminRouteDestinations />,
  <PipelineRouteDestinations />,
  <Route
    path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/governance"
  >
    <Route
      exact={true}
      path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/governance"
    >
      <RedirectToDefaultGovernanceRoute />
    </Route>
    <RouteWithLayout
      layout={[Function]}
      path="/account/:accountId/:module(cf)/orgs/:orgIdentifier/projects/:projectIdentifier/setup/governance"
      sidebarProps={
        Object {
          "icon": "cf-main",
          "navComponent": [Function],
          "title": "Feature Flags",
        }
      }
    >
      <GovernanceRemoteComponentMounter
        spinner={
          <Container
            style={
              Object {
                "height": "100%",
                "left": "290px",
                "position": "fixed",
                "top": 0,
                "width": "calc(100% - 290px)",
              }
            }
          >
            <ContainerSpinner />
          </Container>
        }
      />
    </RouteWithLayout>
  </Route>,
]
`;
