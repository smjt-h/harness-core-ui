{
    "swagger" : "2.0",
    "info" : {
      "version" : "2.0",
      "title" : "CD NextGen API Reference",
      "contact" : { }
    },
    "host" : "pr.harness.io",
    "basePath" : "/cds-34216-v1/ng/api",
    "tags" : [ {
      "name" : "accounts"
    }, {
      "name" : "environmentGroup"
    }, {
      "name" : "pipelines"
    }, {
      "name" : "connectors"
    }, {
      "name" : "enforcement"
    }, {
      "name" : "filters"
    }, {
      "name" : "gitopsproviders"
    }, {
      "name" : "git-sync-branch"
    }, {
      "name" : "git-sync-entities"
    }, {
      "name" : "git-full-sync"
    }, {
      "name" : "git-sync-settings"
    }, {
      "name" : "scm"
    }, {
      "name" : "git-sync"
    }, {
      "name" : "git-sync-errors"
    }, {
      "name" : "adminlicenses"
    }, {
      "name" : "licenses"
    }, {
      "name" : "usage"
    }, {
      "name" : "roleassignments"
    }, {
      "name" : "authentication-settings"
    }, {
      "name" : "account-setting"
    }, {
      "name" : "activityHistory"
    }, {
      "name" : "artifacts"
    }, {
      "name" : "aws"
    }, {
      "name" : "buckets"
    }, {
      "name" : "v2"
    }, {
      "name" : "delegate-group-tags"
    }, {
      "name" : "delegate-mtls"
    }, {
      "name" : "delegate-profilesng"
    }, {
      "name" : "delegate-token-ng"
    }, {
      "name" : "entitySetupUsage"
    }, {
      "name" : "environments"
    }, {
      "name" : "environmentsV2"
    }, {
      "name" : "globalKms"
    }, {
      "name" : "invites"
    }, {
      "name" : "gcp"
    }, {
      "name" : "apikey"
    }, {
      "name" : "file-store"
    }, {
      "name" : "health"
    }, {
      "name" : "host-validation"
    }, {
      "name" : "aggregate"
    }, {
      "name" : "hosts"
    }, {
      "name" : "secret-managers"
    }, {
      "name" : "v2secrets"
    }, {
      "name" : "organizations"
    }, {
      "name" : "projects"
    }, {
      "name" : "token"
    }, {
      "name" : "user-groups"
    }, {
      "name" : "azure"
    }, {
      "name" : "yamlschema"
    }, {
      "name" : "services"
    }, {
      "name" : "servicesV2"
    }, {
      "name" : "smtpConfig"
    }, {
      "name" : "user"
    }, {
      "name" : "executions"
    }, {
      "name" : "feedback"
    }, {
      "name" : "instanceng"
    }, {
      "name" : "instancesync"
    }, {
      "name" : "jira"
    }, {
      "name" : "dashboard"
    }, {
      "name" : "landingDashboards"
    }, {
      "name" : "scim"
    }, {
      "name" : "serviceaccount"
    }, {
      "name" : "servicenow"
    }, {
      "name" : "trial-signup"
    }, {
      "name" : "source-code-manager"
    }, {
      "name" : "webhook"
    }, {
      "name" : "webhookevent"
    }, {
      "name" : "polling"
    }, {
      "name" : "signup"
    }, {
      "name" : "partial-yaml-schema"
    }, {
      "name" : "yaml-schema"
    }, {
      "name" : "yaml-snippet"
    } ],
    "schemes" : [ "https", "http" ],
    "paths" : {
      "/accounts/{accountIdentifier}/name" : {
        "put" : {
          "tags" : [ "accounts" ],
          "summary" : "Update Account Name",
          "description" : "",
          "operationId" : "updateAccountNameNG",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AccountDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/accounts/{accountIdentifier}/default-experience" : {
        "put" : {
          "tags" : [ "accounts" ],
          "summary" : "Update Default Experience",
          "description" : "",
          "operationId" : "updateAccountDefaultExperienceNG",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AccountDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/accounts/{accountIdentifier}" : {
        "get" : {
          "tags" : [ "accounts" ],
          "summary" : "Get Account",
          "description" : "",
          "operationId" : "getAccountNG",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentGroup/list" : {
        "post" : {
          "tags" : [ "environmentGroup" ],
          "summary" : "Gets Environment Group list",
          "description" : "",
          "operationId" : "getEnvironmentGroupList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "envGroupIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 25,
            "format" : "int32"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "filterIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FilterProperties"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageEnvironmentGroupResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentGroup/{envGroupIdentifier}" : {
        "get" : {
          "tags" : [ "environmentGroup" ],
          "summary" : "Gets a Environment Group by identifier",
          "description" : "",
          "operationId" : "getEnvironmentGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "envGroupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "deleted",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentGroupResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "environmentGroup" ],
          "summary" : "Update an Environment Group by Identifier",
          "description" : "",
          "operationId" : "updateEnvironmentGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "envGroupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "lastObjectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "resolvedConflictCommitId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "baseBranch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "INLINE", "REMOTE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentGroupResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "environmentGroup" ],
          "summary" : "Delete en Environment Group by Identifier",
          "description" : "",
          "operationId" : "deleteEnvironmentGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "envGroupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "lastObjectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentGroupDeleteResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentGroup" : {
        "post" : {
          "tags" : [ "environmentGroup" ],
          "summary" : "Create an Environment Group",
          "description" : "",
          "operationId" : "createEnvironmentGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentGroupResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/steps" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "get steps for given service definition type",
          "description" : "",
          "operationId" : "getSteps",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "serviceDefinitionType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Kubernetes", "NativeHelm", "Ssh", "WinRm", "ServerlessAwsLambda" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseStepCategory"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/strategies" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "Gets Execution Strategy list",
          "description" : "",
          "operationId" : "getExecutionStrategyList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapServiceDefinitionTypeListExecutionStrategyType"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/strategies/yaml-snippets" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "Gets Yaml for Execution Strategy based on deployment type and selected strategy",
          "description" : "",
          "operationId" : "getExecutionStrategyYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "serviceDefinitionType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Kubernetes", "NativeHelm", "Ssh", "WinRm", "ServerlessAwsLambda" ]
          }, {
            "name" : "strategyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Basic", "Canary", "BlueGreen", "Rolling", "Default" ]
          }, {
            "name" : "includeVerify",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/strategies/provisioner-yaml-snippets" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "Gets Yaml for Execution Strategy based on Provisioner Type",
          "description" : "",
          "operationId" : "getProvisionerExecutionStrategyYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "provisionerType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "TERRAFORM", "CLOUD_FORMATION", "AZURE_ARM", "SHELL_SCRIPT_PROVISIONER" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/serviceDefinitionTypes" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "Git list of service definition types",
          "description" : "",
          "operationId" : "getServiceDefinitionTypes",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceDefinitionType"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/provisioner-steps" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "get provisioner steps",
          "description" : "",
          "operationId" : "getProvisionerSteps",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseStepCategory"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/pipelines/configuration/cd-stage-yaml-snippet" : {
        "get" : {
          "tags" : [ "pipelines" ],
          "summary" : "Gets the failure strategy yaml snippet for CD stage",
          "description" : "",
          "operationId" : "getFailureStrategiesYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/testConnection/{identifier}" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Test the connection",
          "description" : "",
          "operationId" : "getTestConnectionResult",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorValidationResult"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/validateUniqueIdentifier" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Validate Identifier is unique",
          "description" : "",
          "operationId" : "validateTheIdentifierIsUnique",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/testConnectionInternal/{identifier}" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Test the connection internal api",
          "description" : "",
          "operationId" : "getTestConnectionResultInternal",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorValidationResult"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/testGitRepoConnection/{identifier}" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Test the connection",
          "description" : "",
          "operationId" : "getTestGitRepoConnectionResult",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoURL",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorValidationResult"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/catalogue" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Get Connector Catalogue",
          "description" : "",
          "operationId" : "getConnectorCatalogue",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorCatalogueResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/stats" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Get Connectors statistics",
          "description" : "",
          "operationId" : "getConnectorStatistics",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorStatistics"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/listbyfqn" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Gets Connector list",
          "description" : "",
          "operationId" : "listConnectorByFQN",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/getceawstemplateurl" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Get CCM Aws Connector Template URL Environment Wise",
          "description" : "",
          "operationId" : "getCEAwsTemplate",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "eventsEnabled",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "curEnabled",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "optimizationEnabled",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          },
          "deprecated" : true
        }
      },
      "/connectors/fieldValues" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Get All Allowed field values for Connector Type",
          "description" : "",
          "operationId" : "getAllAllowedFieldValues",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFieldValues"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/{identifier}" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Get Connector",
          "description" : "",
          "operationId" : "getConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "connectors" ],
          "summary" : "Delete a connector by identifier",
          "description" : "",
          "operationId" : "deleteConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "lastObjectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors" : {
        "get" : {
          "tags" : [ "connectors" ],
          "summary" : "Gets Connector list",
          "description" : "",
          "operationId" : "getConnectorList",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
          }, {
            "name" : "category",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
          }, {
            "name" : "source_category",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          },
          "deprecated" : true
        },
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Creates a Connector",
          "description" : "",
          "operationId" : "createConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/Connector"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "isNewBranch",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "baseBranch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "INLINE", "REMOTE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "connectors" ],
          "summary" : "Updates a Connector",
          "description" : "",
          "operationId" : "updateConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/Connector"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "lastObjectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "resolvedConflictCommitId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "baseBranch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "INLINE", "REMOTE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/connectors/listV2" : {
        "post" : {
          "tags" : [ "connectors" ],
          "summary" : "Gets Connector list",
          "description" : "",
          "operationId" : "getConnectorListV2",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "includeAllConnectorsAvailableAtScope",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ConnectorFilterProperties"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "getDistinctFromBranches",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageConnectorResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/enforcement" : {
        "post" : {
          "tags" : [ "enforcement" ],
          "summary" : "Fetch Feature Restriction Detail",
          "description" : "",
          "operationId" : "getFeatureRestrictionDetail",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FeatureRestrictionDetailRequestDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFeatureRestrictionDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/enforcement/details" : {
        "post" : {
          "tags" : [ "enforcement" ],
          "summary" : "Fetch List of Feature Restriction Detail",
          "description" : "",
          "operationId" : "getFeatureRestrictionDetails",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FeatureRestrictionDetailListRequestDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListFeatureRestrictionDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/enforcement/enabled" : {
        "get" : {
          "tags" : [ "enforcement" ],
          "summary" : "Fetch the List of enabled Feature Restriction Detail for this Account",
          "description" : "",
          "operationId" : "getEnabledFeatureRestrictionDetailByAccountId",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListFeatureRestrictionDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/enforcement/metadata" : {
        "get" : {
          "tags" : [ "enforcement" ],
          "summary" : "Fetch All Feature Restriction Metadata",
          "description" : "",
          "operationId" : "getAllFeatureRestrictionMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListFeatureRestrictionMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/enforcement/{featureRestrictionName}/metadata" : {
        "get" : {
          "tags" : [ "enforcement" ],
          "summary" : "Fetch Feature Restriction Metadata",
          "description" : "",
          "operationId" : "fetchFeatureRestrictionMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "featureRestrictionName",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "enum" : [ "TEST1", "TEST2", "TEST3", "TEST4", "TEST5", "TEST6", "TEST7", "PERSPECTIVES", "CCM_K8S_CLUSTERS", "CCM_AUTOSTOPPING_RULES", "MULTIPLE_ORGANIZATIONS", "MULTIPLE_PROJECTS", "INTEGRATED_APPROVALS_WITH_HARNESS_UI", "INTEGRATED_APPROVALS_WITH_JIRA", "SECRET_MANAGERS", "DEPLOYMENTS", "INITIAL_DEPLOYMENTS", "DEPLOYMENTS_PER_MONTH", "SERVICES", "BUILDS", "SAML_SUPPORT", "OAUTH_SUPPORT", "LDAP_SUPPORT", "TWO_FACTOR_AUTH_SUPPORT", "CUSTOM_ROLES", "CUSTOM_RESOURCE_GROUPS", "MAX_TOTAL_BUILDS", "MAX_BUILDS_PER_MONTH", "ACTIVE_COMMITTERS", "TEST_INTELLIGENCE", "TEMPLATE_SERVICE", "K8S_BG_SWAP_SERVICES", "K8S_BLUE_GREEN_DEPLOY", "K8S_APPLY", "K8S_DELETE", "K8S_CANARY_DELETE", "K8S_ROLLING_DEPLOY", "K8S_CANARY_DEPLOY", "K8S_SCALE", "K8S_ROLLING_ROLLBACK", "TERRAFORM_APPLY", "TERRAFORM_PLAN", "TERRAFORM_DESTROY", "TERRAFORM_ROLLBACK", "INTEGRATED_APPROVALS_WITH_SERVICE_NOW", "CREATE_STACK", "DELETE_STACK", "ROLLBACK_STACK", "SECURITY", "DEVELOPERS", "MONTHLY_ACTIVE_USERS" ]
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFeatureRestrictionMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/filters/{identifier}" : {
        "get" : {
          "tags" : [ "filters" ],
          "summary" : "Get Filter",
          "description" : "",
          "operationId" : "getFilter",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFilterDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "filters" ],
          "summary" : "Delete a filter",
          "description" : "",
          "operationId" : "deleteFilter",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/filters" : {
        "get" : {
          "tags" : [ "filters" ],
          "summary" : "Get Filter",
          "description" : "",
          "operationId" : "getFilterList",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageFilterDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "filters" ],
          "summary" : "Create a Filter",
          "description" : "",
          "operationId" : "postFilter",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FilterDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFilterDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "filters" ],
          "summary" : "Update a Filter",
          "description" : "",
          "operationId" : "updateFilter",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FilterDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFilterDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/gitopsproviders/validateUniqueIdentifier" : {
        "get" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "Validate Identifier is unique",
          "description" : "",
          "operationId" : "validateProviderIdentifierIsUnique",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/gitopsproviders/{identifier}" : {
        "get" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "Get GitOps Provider",
          "description" : "",
          "operationId" : "getGitOpsProvider",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitopsProviderResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "Deletes a GitOpsProvider",
          "description" : "",
          "operationId" : "deleteGitOpsProvider",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/gitopsproviders" : {
        "post" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "Creates a GitOpsProvider",
          "description" : "",
          "operationId" : "createGitOpsProvider",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitOpsProvider"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "isNewBranch",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "baseBranch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "INLINE", "REMOTE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitopsProviderResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "Updates a GitOpsProvider",
          "description" : "",
          "operationId" : "updateGitOpsProvider",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitOpsProvider"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "rootFolder",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitMsg",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "isNewBranch",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "baseBranch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "INLINE", "REMOTE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitopsProviderResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/gitopsproviders/list" : {
        "get" : {
          "tags" : [ "gitopsproviders" ],
          "summary" : "List GitOps Providers",
          "description" : "",
          "operationId" : "listGitOpsProviders",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CONNECTED_ARGO_PROVIDER", "MANAGED_ARGO_PROVIDER" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitopsProviderResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-branch/listBranchesWithStatus" : {
        "get" : {
          "tags" : [ "git-sync-branch" ],
          "summary" : "Gets list of branches with their status by Git Sync Config Id",
          "description" : "",
          "operationId" : "getListOfBranchesWithStatus",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "yamlGitConfigIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branchSyncStatus",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "SYNCED", "SYNCING", "UNSYNCED" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitBranchListDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-branch/sync" : {
        "post" : {
          "tags" : [ "git-sync-branch" ],
          "summary" : "Sync the new branch into harness",
          "description" : "",
          "operationId" : "syncGitBranch",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-entities/{entityType}" : {
        "get" : {
          "tags" : [ "git-sync-entities" ],
          "summary" : "Get Git Sync Entity By Type",
          "description" : "",
          "operationId" : "listGitSyncEntitiesByType",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "gitSyncConfigId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "entityType",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitSyncEntityListDTO"
              }
            }
          }
        }
      },
      "/git-sync-entities/summary" : {
        "post" : {
          "tags" : [ "git-sync-entities" ],
          "summary" : "List Git Sync Entity by product for List of Repos and Entities",
          "description" : "",
          "operationId" : "listGitSyncEntitiesSummaryForRepoAndTypes",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitEntityFilterProperties"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitSyncRepoFilesList"
              }
            }
          }
        }
      },
      "/git-sync-entities/branch/{branch}" : {
        "post" : {
          "tags" : [ "git-sync-entities" ],
          "summary" : "List Git Sync Entity by product for Repo and Branch and List of Entities",
          "description" : "",
          "operationId" : "listGitSyncEntitiesSummaryForRepoAndBranch",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }, {
            "name" : "gitSyncConfigId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitEntityBranchFilterSummaryProperties"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListGitSyncEntityListDTO"
              }
            }
          }
        }
      },
      "/git-full-sync" : {
        "post" : {
          "tags" : [ "git-full-sync" ],
          "summary" : "Triggers full sync",
          "description" : "",
          "operationId" : "triggerFullSync",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTriggerFullSyncResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-full-sync/config" : {
        "get" : {
          "tags" : [ "git-full-sync" ],
          "summary" : "Get full sync configuration",
          "description" : "",
          "operationId" : "getGitFullSyncConfig",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitFullSyncConfigDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "git-full-sync" ],
          "summary" : "Create a full sync configuration",
          "description" : "",
          "operationId" : "createGitFullSyncConfig",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitFullSyncConfigRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitFullSyncConfigDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "git-full-sync" ],
          "summary" : "Update a full sync configuration",
          "description" : "",
          "operationId" : "updateGitFullSyncConfig",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitFullSyncConfigRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitFullSyncConfigDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-full-sync/files" : {
        "post" : {
          "tags" : [ "git-full-sync" ],
          "summary" : "Fetches the list of all Git Full Sync Entities and their status",
          "description" : "",
          "operationId" : "listFullSyncFiles",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitFullSyncEntityInfoFilterKeys"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitFullSyncEntityInfoDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-settings" : {
        "get" : {
          "tags" : [ "git-sync-settings" ],
          "summary" : "Get git sync settings",
          "description" : "",
          "operationId" : "getGitSyncSettings",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitSyncSettingsDTO"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "git-sync-settings" ],
          "summary" : "Create a Git Sync Setting",
          "description" : "",
          "operationId" : "postGitSyncSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitSyncSettingsDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitSyncSettingsDTO"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "git-sync-settings" ],
          "summary" : "Update a Git Sync Setting",
          "description" : "",
          "operationId" : "updateGitSyncSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitSyncSettingsDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitSyncSettingsDTO"
              }
            }
          }
        }
      },
      "/scm/createPR" : {
        "post" : {
          "tags" : [ "scm" ],
          "summary" : "creates a pull request",
          "description" : "",
          "operationId" : "createPR",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitPRCreateRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseCreatePRDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/listBranchesByGitConfig" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "Retrieves a list of Git Branches corresponding to a Git Sync Config Id",
          "description" : "",
          "operationId" : "getListOfBranchesByGitConfig",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "yamlGitConfigIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "format" : "int32"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/listRepoBranches" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "Gets list of branches by Connector Identifier",
          "description" : "",
          "operationId" : "getListOfBranchesByConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "connectorIdentifierRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoURL",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "format" : "int32"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/fileContent" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "Gets file content",
          "description" : "",
          "operationId" : "getFileContent",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "yamlGitConfigIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitFileContent"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/isSaasGit" : {
        "post" : {
          "tags" : [ "scm" ],
          "summary" : "Checks if Saas is possible",
          "description" : "",
          "operationId" : "isSaasGit",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "repoURL",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSaasGitDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/list-repos-by-connector" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "Lists Git Repos corresponding to given reference connector",
          "description" : "",
          "operationId" : "getListOfReposByRefConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListGitRepositoryResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/list-branches" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "Lists Git Branches of given repo",
          "description" : "",
          "operationId" : "getListOfBranchesByRefConnectorV2",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoURL",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitBranchesResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scm/get-file" : {
        "get" : {
          "tags" : [ "scm" ],
          "summary" : "get file",
          "description" : "",
          "operationId" : "getFile",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "RepoName",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "commitId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "ConnectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGetFileResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync/{identifier}/folder/{folderIdentifier}/default" : {
        "put" : {
          "tags" : [ "git-sync" ],
          "summary" : "Update Git Sync default by id",
          "description" : "",
          "operationId" : "putGitSyncDefault",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "organizationId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "folderIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/GitSyncConfig"
              }
            }
          }
        }
      },
      "/git-sync/git-sync-enabled" : {
        "get" : {
          "tags" : [ "git-sync" ],
          "summary" : "Is Git Sync EnabledForProject",
          "description" : "",
          "operationId" : "isGitSyncEnabled",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/GitEnabledDTO"
              }
            }
          }
        }
      },
      "/git-sync" : {
        "get" : {
          "tags" : [ "git-sync" ],
          "summary" : "List Git Sync",
          "description" : "",
          "operationId" : "listGitSync",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/GitSyncConfig"
                }
              }
            }
          }
        },
        "post" : {
          "tags" : [ "git-sync" ],
          "summary" : "Create a Git Sync",
          "description" : "",
          "operationId" : "postGitSync",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitSyncConfig"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/GitSyncConfig"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "git-sync" ],
          "summary" : "Update Git Sync by id",
          "description" : "",
          "operationId" : "putGitSync",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GitSyncConfig"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/GitSyncConfig"
              }
            }
          }
        }
      },
      "/git-sync-errors/aggregate" : {
        "get" : {
          "tags" : [ "git-sync-errors" ],
          "summary" : "Gets Error list grouped by commit",
          "description" : "",
          "operationId" : "listGitToHarnessErrorsCommits",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "numberOfErrorsInSummary",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 5,
            "maximum" : 5,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitSyncErrorAggregateByCommitDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-errors/commits/{commitId}" : {
        "get" : {
          "tags" : [ "git-sync-errors" ],
          "summary" : "Gets Error list for a particular Commit",
          "description" : "",
          "operationId" : "listGitToHarnessErrorsForCommit",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "commitId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitSyncErrorDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-errors" : {
        "get" : {
          "tags" : [ "git-sync-errors" ],
          "summary" : "Gets Error list",
          "description" : "",
          "operationId" : "listGitSyncErrors",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "gitToHarness",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageGitSyncErrorDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/git-sync-errors/count" : {
        "get" : {
          "tags" : [ "git-sync-errors" ],
          "summary" : "Gets Error Count",
          "description" : "",
          "operationId" : "getGitSyncErrorsCount",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGitSyncErrorCountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/modules/{accountIdentifier}" : {
        "get" : {
          "tags" : [ "licenses" ],
          "summary" : "Gets Module Licenses By Account And ModuleType",
          "description" : "",
          "operationId" : "getModuleLicensesByAccountAndModuleType",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/{accountIdentifier}/summary" : {
        "get" : {
          "tags" : [ "licenses" ],
          "summary" : "Gets Module Licenses With Summary By Account And ModuleType",
          "description" : "",
          "operationId" : "getLicensesAndSummary",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseLicensesWithSummaryDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/account" : {
        "get" : {
          "tags" : [ "licenses" ],
          "summary" : "Gets All Module License Information in Account",
          "description" : "",
          "operationId" : "getAccountLicenses",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/free" : {
        "post" : {
          "tags" : [ "licenses" ],
          "summary" : "Starts Free License For A Module",
          "description" : "",
          "operationId" : "startFreeLicense",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/community" : {
        "post" : {
          "tags" : [ "licenses" ],
          "summary" : "Starts Community License For A Module",
          "description" : "",
          "operationId" : "startCommunityLicense",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/trial" : {
        "post" : {
          "tags" : [ "licenses" ],
          "summary" : "Starts Trial License For A Module",
          "description" : "",
          "operationId" : "startTrialLicense",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/StartTrialDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/extend-trial" : {
        "post" : {
          "tags" : [ "licenses" ],
          "summary" : "Extends Trail License For A Module",
          "description" : "",
          "operationId" : "extendTrialLicense",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/StartTrialDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/actions" : {
        "get" : {
          "tags" : [ "licenses" ],
          "summary" : "Get Allowed Actions Under Each Edition",
          "description" : "",
          "operationId" : "getEditionActions",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapEditionSetEditionActionDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/versions" : {
        "post" : {
          "tags" : [ "licenses" ],
          "summary" : "Get Last Modified Time For All Module Types",
          "description" : "",
          "operationId" : "getLastModifiedTimeForAllModuleTypes",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapModuleTypeLong"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/licenses/{identifier}" : {
        "get" : {
          "tags" : [ "licenses" ],
          "summary" : "Gets Module License",
          "description" : "",
          "operationId" : "getModuleLicenseById",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseModuleLicenseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/usage/{module}" : {
        "get" : {
          "tags" : [ "usage" ],
          "summary" : "Gets License Usage By Module and Timestamp",
          "description" : "",
          "operationId" : "getLicenseUsage",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "module",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "timestamp",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "CDLicenseType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseLicenseUsageDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/usage/CD/servicesLicense" : {
        "get" : {
          "tags" : [ "usage" ],
          "summary" : "Gets License Usage By Timestamp for Services in CD Module",
          "description" : "",
          "operationId" : "getCDLicenseUsageForServices",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "timestamp",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceUsageDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/usage/CD/serviceInstancesLicense" : {
        "get" : {
          "tags" : [ "usage" ],
          "summary" : "Gets License Usage By Timestamp for Service Instances in CD Module",
          "description" : "",
          "operationId" : "getCDLicenseUsageForServiceInstances",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "timestamp",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceInstanceUsageDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/roleassignments/aggregate" : {
        "post" : {
          "tags" : [ "roleassignments" ],
          "summary" : "Get Role Assignments Aggregate",
          "description" : "",
          "operationId" : "getRoleAssignmentsAggregate",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/RoleAssignmentFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseRoleAssignmentAggregateResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/roleassignments/filter" : {
        "post" : {
          "tags" : [ "roleassignments" ],
          "summary" : "(Stub) Get Filtered Role Assignments",
          "description" : "",
          "operationId" : "getFilteredRoleAssignmentList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/RoleAssignmentFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageRoleAssignmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/roleassignments/multi/internal" : {
        "post" : {
          "tags" : [ "roleassignments" ],
          "summary" : "(Stub) Create Multiple Role Assignments",
          "description" : "",
          "operationId" : "createRoleAssignments",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "managed",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/RoleAssignmentCreateRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListRoleAssignmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/roleassignments" : {
        "post" : {
          "tags" : [ "roleassignments" ],
          "summary" : "(Stub) Create Role Assignment",
          "description" : "",
          "operationId" : "createRoleAssignment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/RoleAssignment"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseRoleAssignmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/authentication-settings/saml-login-test" : {
        "get" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Get SAML Login Test",
          "description" : "",
          "operationId" : "getSamlLoginTest",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseLoginTypeResponse"
              }
            }
          }
        }
      },
      "/authentication-settings/two-factor-admin-override-settings" : {
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Set account level two factor auth setting",
          "description" : "",
          "operationId" : "setTwoFactorAuthAtAccountLevel",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/TwoFactorAdminOverrideSettings"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/authentication-settings" : {
        "get" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Get authentication settings for an account",
          "description" : "",
          "operationId" : "getAuthenticationSettings",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseAuthenticationSettingsResponse"
              }
            }
          }
        }
      },
      "/authentication-settings/login-settings/password-strength" : {
        "get" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Get Password strength settings",
          "description" : "",
          "operationId" : "getPasswordStrengthSettings",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponsePasswordStrengthPolicy"
              }
            }
          }
        }
      },
      "/authentication-settings/login-settings/{loginSettingsId}" : {
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Update login settings - lockout, expiration, strength",
          "description" : "",
          "operationId" : "putLoginSettings",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "loginSettingsId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LoginSettings"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseLoginSettings"
              }
            }
          }
        }
      },
      "/authentication-settings/oauth/update-providers" : {
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Update Oauth providers for an account",
          "description" : "",
          "operationId" : "updateOauthProviders",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/OAuthSettings"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/authentication-settings/oauth/remove-mechanism" : {
        "delete" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Remove Oauth mechanism for an account",
          "description" : "",
          "operationId" : "removeOauthMechanism",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/authentication-settings/update-auth-mechanism" : {
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Update Auth mechanism for an account",
          "description" : "",
          "operationId" : "updateAuthMechanism",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "authenticationMechanism",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/authentication-settings/whitelisted-domains" : {
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Update Whitelisted domains for an account",
          "description" : "",
          "operationId" : "updateWhitelistedDomains",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/authentication-settings/saml-metadata-upload" : {
        "post" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Create SAML Config",
          "description" : "",
          "operationId" : "uploadSamlMetaData",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : false,
            "type" : "file"
          }, {
            "name" : "displayName",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupMembershipAttr",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "authorizationEnabled",
            "in" : "formData",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "logoutUrl",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "entityIdentifier",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "samlProviderType",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "clientId",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "clientSecret",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseSSOConfig"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Edit SAML Config",
          "description" : "",
          "operationId" : "updateSamlMetaData",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : false,
            "type" : "file"
          }, {
            "name" : "displayName",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupMembershipAttr",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "authorizationEnabled",
            "in" : "formData",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "logoutUrl",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "entityIdentifier",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "samlProviderType",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "clientId",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "clientSecret",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseSSOConfig"
              }
            }
          }
        }
      },
      "/authentication-settings/delete-saml-metadata" : {
        "delete" : {
          "tags" : [ "authentication-settings" ],
          "summary" : "Delete SAML Config",
          "description" : "",
          "operationId" : "deleteSamlMetaData",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseSSOConfig"
              }
            }
          }
        }
      },
      "/account-setting" : {
        "get" : {
          "tags" : [ "account-setting" ],
          "summary" : "Gets account setting",
          "description" : "",
          "operationId" : "getAccountSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Connector" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountSettingResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "account-setting" ],
          "summary" : "Create a account setting",
          "description" : "",
          "operationId" : "createAccountSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AccountSettings"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountSettingResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "account-setting" ],
          "summary" : "Update a account setting",
          "description" : "",
          "operationId" : "updateAccountSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AccountSettings"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountSettingResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/account-setting/list" : {
        "get" : {
          "tags" : [ "account-setting" ],
          "summary" : "List account setting",
          "description" : "",
          "operationId" : "listAccountSetting",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Connector" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListAccountSettings"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/activityHistory/summary" : {
        "get" : {
          "tags" : [ "activityHistory" ],
          "summary" : "Get Activities Summary",
          "description" : "",
          "operationId" : "getActivitiesSummary",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "timeGroupType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "HOUR", "DAY", "WEEK" ]
          }, {
            "name" : "referredEntityType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "referredByEntityType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageActivitySummary"
              }
            }
          }
        }
      },
      "/activityHistory/connectivityCheckSummary" : {
        "get" : {
          "tags" : [ "activityHistory" ],
          "summary" : "Get ConnectivityCheck Summary",
          "description" : "",
          "operationId" : "getConnectivitySummary",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseConnectivityCheckSummary"
              }
            }
          }
        }
      },
      "/activityHistory" : {
        "get" : {
          "tags" : [ "activityHistory" ],
          "summary" : "Get Activities where this resource was used",
          "description" : "",
          "operationId" : "listActivities",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "status",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED" ]
          }, {
            "name" : "referredEntityType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "referredByEntityType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageActivity"
              }
            }
          }
        }
      },
      "/artifacts/acr/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ACR build details with yaml input for expression resolution",
          "description" : "",
          "operationId" : "getBuildDetailsForAcrArtifactWithYaml",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "subscriptionId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "registry",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/acr/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ACR repository build details",
          "description" : "",
          "operationId" : "getBuildDetailsForACRRepository",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "subscriptionId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "registry",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/acr/container-registries" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ACR registries by subscription ",
          "description" : "",
          "operationId" : "getACRRegistriesBySubscription",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "subscriptionId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAcrRegistriesDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/acr/container-registries/{registry}/repositories" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ACR repositories by subscription and container registry name ",
          "description" : "",
          "operationId" : "getACRRepositories",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "subscriptionId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registry",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAcrRepositoriesDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets artifactory artifact build details with yaml input for expression resolution",
          "description" : "",
          "operationId" : "getBuildDetailsForArtifactoryArtifactWithYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseArtifactoryResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/getLastSuccessfulBuild" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets artifactory artifact last successful build",
          "description" : "",
          "operationId" : "getLastSuccessfulBuildForArtifactoryArtifact",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ArtifactoryRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseArtifactoryBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/validateArtifactServer" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate artifactory artifact server",
          "description" : "",
          "operationId" : "validateArtifactServerForArtifactory",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets artifactory artifact build details",
          "description" : "",
          "operationId" : "getBuildDetailsForArtifactoryArtifact",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseArtifactoryResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/repositoriesDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets repository details",
          "description" : "",
          "operationId" : "getRepositoriesDetailsForArtifactory",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "repositoryType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "any"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseArtifactoryRepoDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/artifactory/artifactBuildsDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets artifacts builds details",
          "description" : "",
          "operationId" : "getArtifactsBuildsDetailsForArtifactory",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "repositoryName",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "maxVersions",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListArtifactoryArtifactBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/getLabels" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets docker labels",
          "description" : "",
          "operationId" : "getLabelsForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DockerRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDockerResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets docker build details with yaml input for expression resolution",
          "description" : "",
          "operationId" : "getBuildDetailsForDockerWithYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDockerResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/getLastSuccessfulBuild" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets docker last successful build",
          "description" : "",
          "operationId" : "getLastSuccessfulBuildForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DockerRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDockerBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/validateArtifactServer" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate docker artifact server",
          "description" : "",
          "operationId" : "validateArtifactServerForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets docker build details",
          "description" : "",
          "operationId" : "getBuildDetailsForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDockerResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/validateArtifactSource" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate docker image",
          "description" : "",
          "operationId" : "validateArtifactImageForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/docker/validateArtifact" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate docker artifact with tag/tagregx if given",
          "description" : "",
          "operationId" : "validateArtifactForDocker",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DockerRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ecr build details with yaml expression",
          "description" : "",
          "operationId" : "getBuildDetailsForEcrWithYaml",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/getLastSuccessfulBuild" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ecr last successful build",
          "description" : "",
          "operationId" : "getLastSuccessfulBuildForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EcrRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEcrBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/validateArtifactServer" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate ecr artifact server",
          "description" : "",
          "operationId" : "validateArtifactServerForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ecr build details",
          "description" : "",
          "operationId" : "getBuildDetailsForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/validateArtifactSource" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate Ecr image",
          "description" : "",
          "operationId" : "validateArtifactImageForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/validateArtifact" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate Ecr Artifact",
          "description" : "",
          "operationId" : "validateArtifactForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EcrRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/ecr/getImages" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets ecr images",
          "description" : "",
          "operationId" : "getImagesListForEcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEcrListImagesDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/getLastSuccessfulBuild" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets gcr last successful build",
          "description" : "",
          "operationId" : "getLastSuccessfulBuildForGcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GcrRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGcrBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/validateArtifactServer" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate gcr artifact server",
          "description" : "",
          "operationId" : "validateArtifactServerForGcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registryHostname",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets gcr build details",
          "description" : "",
          "operationId" : "getBuildDetailsForGcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registryHostname",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets gcr build details with Yaml expression",
          "description" : "",
          "operationId" : "getBuildDetailsForGcrWithYaml",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registryHostname",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGcrResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/validateArtifactSource" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate Gcr image",
          "description" : "",
          "operationId" : "validateArtifactImageForGcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registryHostname",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/gcr/validateArtifact" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate Gcr Artifact",
          "description" : "",
          "operationId" : "validateArtifactForGcr",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "imagePath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "registryHostname",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/GcrRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/nexus/getBuildDetailsV2" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets nexus artifact build details with yaml input for expression resolution",
          "description" : "",
          "operationId" : "getBuildDetailsForNexusArtifactWithYaml",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryPort",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "pipelineIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fqnPath",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNexusResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/nexus/getLastSuccessfulBuild" : {
        "post" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets nexus artifact last successful build",
          "description" : "",
          "operationId" : "getLastSuccessfulBuildForNexusArtifact",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryPort",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/NexusRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNexusBuildDetailsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/nexus/validateArtifactServer" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Validate nexus artifact server",
          "description" : "",
          "operationId" : "validateArtifactServerForNexus",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/artifacts/nexus/getBuildDetails" : {
        "get" : {
          "tags" : [ "artifacts" ],
          "summary" : "Gets nexus artifact build details",
          "description" : "",
          "operationId" : "getBuildDetailsForNexusArtifact",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "repository",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryPort",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryFormat",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repositoryUrl",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "artifactPath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNexusResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aws/aws-helper/regions" : {
        "get" : {
          "tags" : [ "aws" ],
          "summary" : "Get all the AWS regions defined in the application",
          "description" : "",
          "operationId" : "RegionsForAws",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapStringString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aws/aws-helper/cf-parameters" : {
        "post" : {
          "tags" : [ "aws" ],
          "summary" : "Get Cloudformation parameters from a template",
          "description" : "",
          "operationId" : "CFParametersForAws",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "type",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "isBranch",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filePath",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "commitId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "awsConnectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "gitConnectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListAwsCFTemplateParamsData"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aws/aws-helper/cf-capabilities" : {
        "get" : {
          "tags" : [ "aws" ],
          "summary" : "Get the Cloudformation capabilities",
          "description" : "",
          "operationId" : "CFCapabilitiesForAws",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aws/aws-helper/cf-states" : {
        "get" : {
          "tags" : [ "aws" ],
          "summary" : "Get all the Cloudformation states for a stack",
          "description" : "",
          "operationId" : "CFStatesForAws",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSetString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aws/aws-helper/iam-roles" : {
        "get" : {
          "tags" : [ "aws" ],
          "summary" : "Get all the IAM roles",
          "description" : "",
          "operationId" : "getIamRolesForAws",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "awsConnectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapStringString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/buckets/gcs" : {
        "get" : {
          "tags" : [ "buckets" ],
          "summary" : "Gets GCS buckets list",
          "description" : "",
          "operationId" : "getGCSBucketList",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapStringString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/buckets/s3/getBuckets" : {
        "get" : {
          "tags" : [ "buckets" ],
          "summary" : "Gets s3 buckets",
          "description" : "",
          "operationId" : "getBucketListForS3",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "region",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseMapStringString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/{identifier}/tags" : {
        "put" : {
          "tags" : [ "v2" ],
          "summary" : "Update tags for the Delegate group",
          "description" : "",
          "operationId" : "updateTagsForDelegateGroup",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateGroupTags"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroup"
              }
            }
          },
          "deprecated" : true
        }
      },
      "/v2/accounts/{accountId}/delegate-configs/{delegateConfigIdentifier}/scoping-rules" : {
        "put" : {
          "tags" : [ "v2" ],
          "summary" : "Updates the Scoping Rules inside the Delegate config",
          "description" : "",
          "operationId" : "updateScopingRulesNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateConfigIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ScopingRuleDetailsNg"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/v2/accounts/{accountId}/delegate-configs/listV2" : {
        "post" : {
          "tags" : [ "v2" ],
          "summary" : "Lists the Delegate configs with filter",
          "description" : "",
          "operationId" : "listDelegateConfigsNgV2WithFilter",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileFilterProperties"
            }
          }, {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "0"
          }, {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "fieldsIncluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "fieldsExcluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponsePageResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/v2/accounts/{accountId}/delegate-configs/{delegateConfigIdentifier}/selectors" : {
        "put" : {
          "tags" : [ "v2" ],
          "summary" : "Updates the selectors inside the Delegate config",
          "description" : "",
          "operationId" : "updateSelectorsNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateConfigIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/v2/accounts/{accountId}/delegate-configs" : {
        "get" : {
          "tags" : [ "v2" ],
          "summary" : "Lists the Delegate Configurations",
          "description" : "",
          "operationId" : "listDelegateConfigsNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "0"
          }, {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "fieldsIncluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "fieldsExcluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponsePageResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "v2" ],
          "summary" : "Adds a Delegate profile",
          "description" : "",
          "operationId" : "addDelegateProfileNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/v2/delegate-configs" : {
        "post" : {
          "tags" : [ "v2" ],
          "summary" : "Adds a Delegate profile",
          "description" : "",
          "operationId" : "addDelegateProfileNgV2noQueryParamsV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/v2/accounts/{accountId}/delegate-configs/{delegateConfigIdentifier}" : {
        "get" : {
          "tags" : [ "v2" ],
          "summary" : "Gets Delegate config by identifier",
          "description" : "",
          "operationId" : "getDelegateConfigNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateConfigIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "v2" ],
          "summary" : "Updates a Delegate Configuration",
          "description" : "",
          "operationId" : "updateDelegateConfigNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateConfigIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "v2" ],
          "summary" : "Deletes a Delegate config by identifier",
          "description" : "",
          "operationId" : "deleteDelegateConfigNgV2",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateConfigIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            }
          }
        }
      },
      "/delegate-group-tags/{groupIdentifier}" : {
        "get" : {
          "tags" : [ "delegate-group-tags" ],
          "summary" : "List tags attached with Delegate group",
          "description" : "",
          "operationId" : "listTagsForDelegateGroup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroupDTO"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "delegate-group-tags" ],
          "summary" : "Add tags to the Delegate group",
          "description" : "",
          "operationId" : "addTagsToDelegateGroup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateGroupTags"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroupDTO"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "delegate-group-tags" ],
          "summary" : "Update tags of the Delegate group",
          "description" : "",
          "operationId" : "updateTagsOfDelegateGroup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateGroupTags"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroupDTO"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "delegate-group-tags" ],
          "summary" : "Deletes all tags from the Delegate group",
          "description" : "",
          "operationId" : "deleteTagsFromDelegateGroup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroupDTO"
              }
            }
          }
        }
      },
      "/delegate-mtls/endpoint" : {
        "get" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Gets the delegate mTLS endpoint for an account.",
          "description" : "",
          "operationId" : "getDelegateMtlsEndpointForAccount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateMtlsEndpointDetails"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Creates the delegate mTLS endpoint for an account.",
          "description" : "",
          "operationId" : "createDelegateMtlsEndpointForAccount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The details of the delegate mTLS endpoint to create.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/DelegateMtlsEndpointRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateMtlsEndpointDetails"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Updates the existing delegate mTLS endpoint for an account.",
          "description" : "",
          "operationId" : "updateDelegateMtlsEndpointForAccount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "The details to update for the delegate mTLS endpoint.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/DelegateMtlsEndpointRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateMtlsEndpointDetails"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Removes the delegate mTLS endpoint for an account.",
          "description" : "",
          "operationId" : "deleteDelegateMtlsEndpointForAccount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        },
        "patch" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Updates selected properties of the existing delegate mTLS endpoint for an account.",
          "description" : "",
          "operationId" : "patchDelegateMtlsEndpointForAccount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "A subset of the details to update for the delegate mTLS endpoint.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/DelegateMtlsEndpointRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateMtlsEndpointDetails"
              }
            }
          }
        }
      },
      "/delegate-mtls/check-availability" : {
        "get" : {
          "tags" : [ "delegate-mtls" ],
          "summary" : "Checks whether a given delegate mTLS endpoint domain prefix is available.",
          "description" : "",
          "operationId" : "checkDelegateMtlsEndpointDomainPrefixAvailability",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "description" : "Account Identifier for the Entity.",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "domainPrefix",
            "in" : "query",
            "description" : "The domain prefix to check.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseBoolean"
              }
            }
          }
        }
      },
      "/delegate-profiles/ng/{delegateProfileId}/scoping-rules" : {
        "put" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Updates the scoping rules inside the Delegate profile",
          "description" : "",
          "operationId" : "updateScopingRulesNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateProfileId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ScopingRuleDetailsNg"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/delegate-profiles/ng/{delegateProfileId}/selectors" : {
        "put" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Updates the selectors inside the Delegate profile",
          "description" : "",
          "operationId" : "updateSelectorsNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateProfileId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/delegate-profiles/ng" : {
        "get" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Lists the Delegate Configurations (profiles)",
          "description" : "",
          "operationId" : "listDelegateProfilesNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "0"
          }, {
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "fieldsIncluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "fieldsExcluded",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponsePageResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Adds a Delegate Configuration (profile)",
          "description" : "",
          "operationId" : "addDelegateProfileNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        }
      },
      "/delegate-profiles/ng/{delegateProfileId}" : {
        "get" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Gets Delegate Configuration (profile)",
          "description" : "",
          "operationId" : "getDelegateProfileNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateProfileId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Updates a Delegate profile",
          "description" : "",
          "operationId" : "updateDelegateProfileNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateProfileId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateProfileDetailsNg"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "delegate-profilesng" ],
          "summary" : "Deletes a Delegate Configuration (profile)",
          "description" : "",
          "operationId" : "deleteDelegateProfileNg",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "delegateProfileId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseVoid"
              }
            }
          }
        }
      },
      "/delegate-token-ng" : {
        "get" : {
          "tags" : [ "delegate-token-ng" ],
          "summary" : "Get Delegate Tokens",
          "description" : "",
          "operationId" : "getDelegateTokens",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "status",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "ACTIVE", "REVOKED" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseListDelegateTokenDetails"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "delegate-token-ng" ],
          "summary" : "Creates Delegate Token",
          "description" : "",
          "operationId" : "createDelegateToken",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "tokenName",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateTokenDetails"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "delegate-token-ng" ],
          "summary" : "Revokes Delegate Token",
          "description" : "",
          "operationId" : "revokeDelegateToken",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "tokenName",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateTokenDetails"
              }
            }
          }
        }
      },
      "/delegate-token-ng/delegate-groups" : {
        "get" : {
          "tags" : [ "delegate-token-ng" ],
          "summary" : "Get Delegate Groups",
          "description" : "",
          "operationId" : "getDelegateGroupsUsingToken",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "delegateTokenName",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseDelegateGroupListing"
              }
            }
          }
        }
      },
      "/entitySetupUsage" : {
        "get" : {
          "tags" : [ "entitySetupUsage" ],
          "summary" : "Get Entities referring this resource",
          "description" : "",
          "operationId" : "listReferredByEntities",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "referredEntityType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageEntitySetupUsageDTO"
              }
            }
          }
        }
      },
      "/environments/upsert" : {
        "put" : {
          "tags" : [ "environments" ],
          "summary" : "Upsert an environment by identifier",
          "description" : "",
          "operationId" : "upsertEnvironment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environments" : {
        "get" : {
          "tags" : [ "environments" ],
          "summary" : "Gets environment list for a project",
          "description" : "",
          "operationId" : "getEnvironmentListForProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "envIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageEnvironmentResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "environments" ],
          "summary" : "Create an Environment",
          "description" : "",
          "operationId" : "createEnvironment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "environments" ],
          "summary" : "Update an environment by identifier",
          "description" : "",
          "operationId" : "updateEnvironment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environments/{environmentIdentifier}" : {
        "get" : {
          "tags" : [ "environments" ],
          "summary" : "Gets a Environment by identifier",
          "description" : "",
          "operationId" : "getEnvironment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "environmentIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "deleted",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "environments" ],
          "summary" : "Delete en environment by identifier",
          "description" : "",
          "operationId" : "deleteEnvironment",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "environmentIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentsV2/upsert" : {
        "put" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Upsert an environment by identifier",
          "description" : "",
          "operationId" : "upsertEnvironmentV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentsV2/list/access" : {
        "get" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Gets environment access list",
          "description" : "",
          "operationId" : "getEnvironmentAccessList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "envIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentsV2" : {
        "get" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Gets environment list",
          "description" : "",
          "operationId" : "getEnvironmentList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "envIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Create an Environment",
          "description" : "",
          "operationId" : "createEnvironmentV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Update an environment by identifier",
          "description" : "",
          "operationId" : "updateEnvironmentV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/EnvironmentRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/environmentsV2/{environmentIdentifier}" : {
        "get" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Gets a Environment by identifier",
          "description" : "",
          "operationId" : "getEnvironmentV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "environmentIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "deleted",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvironmentResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "environmentsV2" ],
          "summary" : "Delete en environment by identifier",
          "description" : "",
          "operationId" : "deleteEnvironmentV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "environmentIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/invites" : {
        "get" : {
          "tags" : [ "invites" ],
          "summary" : "Get all invites for the queried project/organization",
          "description" : "",
          "operationId" : "getInvites",
          "consumes" : [ "application/json", "text/yaml" ],
          "produces" : [ "application/json", "text/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageInvite"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "invites" ],
          "summary" : "Add a new invite for the specified project/organization",
          "description" : "",
          "operationId" : "sendInvite",
          "consumes" : [ "application/json", "text/yaml" ],
          "produces" : [ "application/json", "text/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/CreateInvite"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListInviteOperationResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          },
          "deprecated" : true
        }
      },
      "/invites/{inviteId}" : {
        "put" : {
          "tags" : [ "invites" ],
          "summary" : "Resend invite mail",
          "description" : "",
          "operationId" : "updateInvite",
          "consumes" : [ "application/json", "text/yaml" ],
          "produces" : [ "application/json", "text/yaml" ],
          "parameters" : [ {
            "name" : "inviteId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/Invite"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOptionalInvite"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "invites" ],
          "summary" : "Delete a invite for the specified project/organization",
          "description" : "",
          "operationId" : "deleteInvite",
          "consumes" : [ "*/*" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "inviteId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOptionalInvite"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/invites/invite" : {
        "get" : {
          "tags" : [ "invites" ],
          "summary" : "Get invite",
          "description" : "",
          "operationId" : "getInvite",
          "consumes" : [ "application/json", "text/yaml" ],
          "produces" : [ "application/json", "text/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "inviteId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "jwttoken",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseInvite"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/invites/aggregate" : {
        "post" : {
          "tags" : [ "invites" ],
          "summary" : "Get a page of pending users for access control",
          "description" : "",
          "operationId" : "getPendingUsersAggregated",
          "consumes" : [ "application/json", "text/yaml" ],
          "produces" : [ "application/json", "text/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ACLAggregateFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageInvite"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/gcp/clusters" : {
        "get" : {
          "tags" : [ "gcp" ],
          "summary" : "Gets gcp cluster names",
          "description" : "",
          "operationId" : "getClusterNamesForGcp",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseGcpResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/apikey" : {
        "get" : {
          "tags" : [ "apikey" ],
          "summary" : "List api keys",
          "description" : "",
          "operationId" : "listApiKeys",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListApiKeyDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "apikey" ],
          "summary" : "Create API key",
          "description" : "",
          "operationId" : "createApiKey",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ApiKeyDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseApiKeyDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/apikey/{identifier}" : {
        "put" : {
          "tags" : [ "apikey" ],
          "summary" : "Update API key",
          "description" : "",
          "operationId" : "updateApiKey",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ApiKeyDTO"
            }
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseApiKeyDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "apikey" ],
          "summary" : "Delete API key",
          "description" : "",
          "operationId" : "deleteApiKey",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/apikey/aggregate" : {
        "get" : {
          "tags" : [ "apikey" ],
          "summary" : "List api key",
          "description" : "",
          "operationId" : "listAggregatedApiKeys",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageApiKeyAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/apikey/aggregate/{identifier}" : {
        "get" : {
          "tags" : [ "apikey" ],
          "summary" : "Get API key",
          "description" : "",
          "operationId" : "getAggregatedApiKey",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseApiKeyAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/yaml" : {
        "post" : {
          "tags" : [ "file-store" ],
          "summary" : "Create file or folder via YAML",
          "description" : "",
          "operationId" : "createViaYAML",
          "consumes" : [ "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FileDtoYamlWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFileDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/yaml/{identifier}" : {
        "put" : {
          "tags" : [ "file-store" ],
          "summary" : "Update file or folder via YAML",
          "description" : "",
          "operationId" : "updateViaYAML",
          "consumes" : [ "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FileDtoYamlWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFileDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/{identifier}/referenced-by" : {
        "get" : {
          "tags" : [ "file-store" ],
          "summary" : "Get referenced by entities",
          "description" : "",
          "operationId" : "getReferencedBy",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "entityType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageEntitySetupUsageDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/filter" : {
        "post" : {
          "tags" : [ "file-store" ],
          "summary" : "Gets the filtered list of files",
          "description" : "",
          "operationId" : "listFilesWithFilter",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "filterIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FilesFilterProperties"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageFileDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/createdBy" : {
        "get" : {
          "tags" : [ "file-store" ],
          "summary" : "Get list of created by usernames",
          "description" : "",
          "operationId" : "getCreatedByList",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSetString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/file/{fileIdentifier}/download" : {
        "get" : {
          "tags" : [ "file-store" ],
          "summary" : "Download file",
          "description" : "",
          "operationId" : "downloadFile",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "fileIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/folder" : {
        "post" : {
          "tags" : [ "file-store" ],
          "summary" : "Get folder nodes",
          "description" : "",
          "operationId" : "getFolderNodes",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FolderNodeDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFolderNodeDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store/{identifier}" : {
        "put" : {
          "tags" : [ "file-store" ],
          "summary" : "Update file or folder",
          "description" : "",
          "operationId" : "update",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "tags",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fileUsage",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "enum" : [ "MANIFEST_FILE", "CONFIG", "SCRIPT" ]
          }, {
            "name" : "type",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "enum" : [ "FILE", "FOLDER" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "description",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "mimeType",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "createdBy",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "content",
            "in" : "formData",
            "required" : false,
            "type" : "file"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFileDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "file-store" ],
          "summary" : "Delete file or folder by identifier",
          "description" : "",
          "operationId" : "deleteFile",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/file-store" : {
        "post" : {
          "tags" : [ "file-store" ],
          "summary" : "Create file or folder",
          "description" : "",
          "operationId" : "create",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "tags",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "content",
            "in" : "formData",
            "required" : false,
            "type" : "file"
          }, {
            "name" : "identifier",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "name",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "fileUsage",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "enum" : [ "MANIFEST_FILE", "CONFIG", "SCRIPT" ]
          }, {
            "name" : "type",
            "in" : "formData",
            "required" : true,
            "type" : "string",
            "enum" : [ "FILE", "FOLDER" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "description",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "mimeType",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "createdBy",
            "in" : "formData",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseFileDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/health" : {
        "get" : {
          "tags" : [ "health" ],
          "summary" : "get health for NGManager service",
          "description" : "",
          "operationId" : "getNGManagerHealthStatus",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            }
          }
        }
      },
      "/host-validation/ssh" : {
        "post" : {
          "tags" : [ "host-validation" ],
          "summary" : "Validate SSH hosts connectivity",
          "description" : "",
          "operationId" : "validateSshHosts",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/HostValidationParams"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListHostValidationDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/account-resources" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Gets count of account resources",
          "description" : "",
          "operationId" : "getAccountResourcesCount",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAccountResourcesDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/projects/{identifier}" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Gets a ProjectAggregateDTO by identifier",
          "description" : "",
          "operationId" : "getProjectAggregateDTO",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseProjectAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/organizations/{identifier}" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Gets an OrganizationAggregateDTO by identifier",
          "description" : "",
          "operationId" : "getOrganizationAggregateDTO",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOrganizationAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/acl/usergroups/{identifier}" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Get Aggregated User Group",
          "description" : "",
          "operationId" : "getUserGroupAggregate",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/projects" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Get ProjectAggregateDTO list",
          "description" : "",
          "operationId" : "getProjectAggregateDTOList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "hasModule",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : true
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageProjectAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/acl/usergroups" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Get Aggregated User Group list",
          "description" : "",
          "operationId" : "getUserGroupAggregateList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "userSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 6,
            "maximum" : 20,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserGroupAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/acl/usergroups/filter" : {
        "post" : {
          "tags" : [ "aggregate" ],
          "summary" : "Get Aggregated User Group list with filter",
          "description" : "",
          "operationId" : "getUserGroupAggregateListsWithFilter",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AggregateACLRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListUserGroupAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/aggregate/organizations" : {
        "get" : {
          "tags" : [ "aggregate" ],
          "summary" : "Get OrganizationAggregateDTO list",
          "description" : "",
          "operationId" : "getOrganizationAggregateDTOList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageOrganizationAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/hosts/filter" : {
        "post" : {
          "tags" : [ "hosts" ],
          "summary" : "Get hosts filtered by connector",
          "description" : "",
          "operationId" : "filterHostsByConnector",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/HostFilterDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageHostDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/secret-managers/meta-data" : {
        "post" : {
          "tags" : [ "secret-managers" ],
          "summary" : "Get metadata of secret manager",
          "description" : "",
          "operationId" : "getMetadata",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretManagerMetadataRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretManagerMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/validateUniqueIdentifier/{identifier}" : {
        "get" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Validate Secret Identifier is unique",
          "description" : "",
          "operationId" : "validateSecretIdentifierIsUnique",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/list" : {
        "post" : {
          "tags" : [ "v2secrets" ],
          "summary" : "List secrets",
          "description" : "",
          "operationId" : "listSecretsV3",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretResourceFilterDTO"
            }
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/yaml" : {
        "post" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Create a secret via yaml",
          "description" : "",
          "operationId" : "postSecretViaYaml",
          "consumes" : [ "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "privateSecret",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretRequestWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/{identifier}" : {
        "get" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Gets secret",
          "description" : "",
          "operationId" : "getSecretV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Update a secret",
          "description" : "",
          "operationId" : "putSecret",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretRequestWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Delete secret",
          "description" : "",
          "operationId" : "deleteSecretV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/{identifier}/yaml" : {
        "put" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Update a secret via yaml",
          "description" : "",
          "operationId" : "putSecretViaYaml",
          "consumes" : [ "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretRequestWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/files/{identifier}" : {
        "put" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Update a secret file",
          "description" : "",
          "operationId" : "putSecretFileV2",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : false,
            "type" : "file"
          }, {
            "name" : "spec",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/files" : {
        "post" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Create a secret file",
          "description" : "",
          "operationId" : "postSecretFileV2",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "privateSecret",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "file",
            "in" : "formData",
            "required" : true,
            "type" : "file"
          }, {
            "name" : "spec",
            "in" : "formData",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets/validate" : {
        "post" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Validate a secret",
          "description" : "",
          "operationId" : "validateSecret",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretValidationMetaData"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretValidationResultDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/v2/secrets" : {
        "get" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Get secrets",
          "description" : "",
          "operationId" : "listSecretsV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "type",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "SecretFile", "SecretText", "SSHKey", "WinRmCredentials" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "types",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SecretFile", "SecretText", "SSHKey", "WinRmCredentials" ]
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "source_category",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
          }, {
            "name" : "includeSecretsFromEverySubScope",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          },
          "deprecated" : true
        },
        "post" : {
          "tags" : [ "v2secrets" ],
          "summary" : "Create a secret",
          "description" : "",
          "operationId" : "postSecret",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "privateSecret",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SecretRequestWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSecretResponseWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/organizations/{identifier}" : {
        "get" : {
          "tags" : [ "organizations" ],
          "summary" : "Get an Organization by identifier",
          "description" : "",
          "operationId" : "getOrganization",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOrganizationResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "organizations" ],
          "summary" : "Update an Organization by ID",
          "description" : "",
          "operationId" : "putOrganization",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/OrganizationRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOrganizationResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "organizations" ],
          "summary" : "Delete an Organization by identifier",
          "description" : "",
          "operationId" : "deleteOrganization",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/organizations" : {
        "get" : {
          "tags" : [ "organizations" ],
          "summary" : "Get Organization list",
          "description" : "",
          "operationId" : "getOrganizationList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageOrganizationResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "organizations" ],
          "summary" : "Create an Organization",
          "description" : "",
          "operationId" : "postOrganization",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/OrganizationRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOrganizationResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/projects/list" : {
        "get" : {
          "tags" : [ "projects" ],
          "summary" : "Get Project list",
          "description" : "",
          "operationId" : "getProjectListWithMultiOrgFilter",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "hasModule",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : true
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/projects/{identifier}" : {
        "get" : {
          "tags" : [ "projects" ],
          "summary" : "Gets a Project by ID",
          "description" : "",
          "operationId" : "getProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "projects" ],
          "summary" : "Update a Project by ID",
          "description" : "",
          "operationId" : "putProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ProjectRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "projects" ],
          "summary" : "Delete a Project by identifier",
          "description" : "",
          "operationId" : "deleteProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/projects" : {
        "get" : {
          "tags" : [ "projects" ],
          "summary" : "Get Project list",
          "description" : "",
          "operationId" : "getProjectList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "hasModule",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : true
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "moduleType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "projects" ],
          "summary" : "Create a Project",
          "description" : "",
          "operationId" : "postProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "default" : "default"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ProjectRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseProjectResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/token" : {
        "get" : {
          "tags" : [ "token" ],
          "summary" : "Get token",
          "description" : "",
          "operationId" : "getToken",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "tokenId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTokenDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "token" ],
          "summary" : "Create token",
          "description" : "",
          "operationId" : "createToken",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/TokenDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/token/{identifier}" : {
        "put" : {
          "tags" : [ "token" ],
          "summary" : "Update token",
          "description" : "",
          "operationId" : "updateToken",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/TokenDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTokenDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "token" ],
          "summary" : "Delete token",
          "description" : "",
          "operationId" : "deleteToken",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "apiKeyIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/token/rotate/{identifier}" : {
        "post" : {
          "tags" : [ "token" ],
          "summary" : "Rotate token",
          "description" : "",
          "operationId" : "rotateToken",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "rotateTimestamp",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "apiKeyIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/token/aggregate" : {
        "get" : {
          "tags" : [ "token" ],
          "summary" : "List tokens",
          "description" : "",
          "operationId" : "listAggregatedTokens",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "apiKeyType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          }, {
            "name" : "parentIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "apiKeyIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageTokenAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user-groups/{identifier}/member/{userIdentifier}" : {
        "get" : {
          "tags" : [ "user-groups" ],
          "summary" : "Check if the user is part of the user group",
          "description" : "",
          "operationId" : "checkMember",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "user-groups" ],
          "summary" : "Add a user to the user group",
          "description" : "",
          "operationId" : "addMember",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "user-groups" ],
          "summary" : "Remove a user from the user group",
          "description" : "",
          "operationId" : "removeMember",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/{userGroupId}/unlink" : {
        "put" : {
          "tags" : [ "user-groups" ],
          "summary" : "API to unlink the harness user group from SSO group",
          "description" : "",
          "operationId" : "unlinkSsoGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "userGroupId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "retainMembers",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseUserGroup"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/{userGroupId}/link/saml/{samlId}" : {
        "put" : {
          "tags" : [ "user-groups" ],
          "summary" : "Link to SAML group",
          "description" : "",
          "operationId" : "linkToSamlGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "userGroupId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "samlId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SamlLinkGroupRequest"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/RestResponseUserGroup"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/{identifier}/users" : {
        "post" : {
          "tags" : [ "user-groups" ],
          "summary" : "List users in a user group",
          "description" : "",
          "operationId" : "getUsersInUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/{identifier}" : {
        "get" : {
          "tags" : [ "user-groups" ],
          "summary" : "Get a User Group",
          "description" : "",
          "operationId" : "getUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "user-groups" ],
          "summary" : "Delete a User Group",
          "description" : "",
          "operationId" : "deleteUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups" : {
        "get" : {
          "tags" : [ "user-groups" ],
          "summary" : "Get User Group List",
          "description" : "",
          "operationId" : "getUserGroupList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "user-groups" ],
          "summary" : "Create a User Group",
          "description" : "",
          "operationId" : "postUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserGroupDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "user-groups" ],
          "summary" : "Update a User Group",
          "description" : "",
          "operationId" : "putUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserGroupDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/batch" : {
        "post" : {
          "tags" : [ "user-groups" ],
          "summary" : "Get Batch User Group List",
          "description" : "",
          "operationId" : "getBatchUserGroupList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserGroupFilterDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListUserGroupDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/user-groups/copy" : {
        "put" : {
          "tags" : [ "user-groups" ],
          "summary" : "Copy a User Group to several scopes",
          "description" : "",
          "operationId" : "copyUserGroup",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Scope"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            },
            "403" : {
              "description" : "Unauthorized",
              "schema" : {
                "$ref" : "#/definitions/AccessControlCheckError"
              }
            }
          }
        }
      },
      "/azure/subscriptions" : {
        "get" : {
          "tags" : [ "azure" ],
          "summary" : "Gets azure subscriptions ",
          "description" : "",
          "operationId" : "getAzureSubscriptions",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAzureSubscriptionsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/azure/subscriptions/{subscriptionId}/resourceGroups" : {
        "get" : {
          "tags" : [ "azure" ],
          "summary" : "Gets azure resource groups by subscription ",
          "description" : "",
          "operationId" : "getAzureResourceGroupsBySubscription",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "subscriptionId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAzureResourceGroupsDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/azure/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/clusters" : {
        "get" : {
          "tags" : [ "azure" ],
          "summary" : "Gets azure k8s clusters by subscription ",
          "description" : "",
          "operationId" : "getAzureClusters",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "subscriptionId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "resourceGroup",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAzureClustersDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/yamlschema/schemafile" : {
        "get" : {
          "tags" : [ "yamlschema" ],
          "summary" : "Get Schema for the given entity type",
          "description" : "",
          "operationId" : "schemafile",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/octet-stream" ],
          "parameters" : [ {
            "name" : "filename",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/services/batch" : {
        "post" : {
          "tags" : [ "services" ],
          "summary" : "Create Services",
          "description" : "",
          "operationId" : "createServices",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceRequestDTO"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/services/upsert" : {
        "put" : {
          "tags" : [ "services" ],
          "summary" : "Upsert a service by identifier",
          "description" : "",
          "operationId" : "upsertService",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/services/helmCmdFlags" : {
        "get" : {
          "tags" : [ "services" ],
          "summary" : "Get Command flags based on Deployment Type",
          "description" : "",
          "operationId" : "helmCmdFlags",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "serviceSpecType",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "version",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "V2", "V3", "V380" ]
          }, {
            "name" : "storeType",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSetHelmCommandFlagType"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/services" : {
        "get" : {
          "tags" : [ "services" ],
          "summary" : "Gets Service list for a project",
          "description" : "",
          "operationId" : "getServiceListForProject",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "serviceIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "services" ],
          "summary" : "Create a Service",
          "description" : "",
          "operationId" : "createService",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "services" ],
          "summary" : "Update a service by identifier",
          "description" : "",
          "operationId" : "updateService",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/services/{serviceIdentifier}" : {
        "get" : {
          "tags" : [ "services" ],
          "summary" : "Gets a Service by identifier",
          "description" : "",
          "operationId" : "getService",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "serviceIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "deleted",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "services" ],
          "summary" : "Delete a service by identifier",
          "description" : "",
          "operationId" : "deleteService",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "serviceIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicesV2/batch" : {
        "post" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Create Services",
          "description" : "",
          "operationId" : "createServicesV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceRequestDTO"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicesV2" : {
        "get" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Gets Service list ",
          "description" : "",
          "operationId" : "getServiceList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "serviceIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Create a Service",
          "description" : "",
          "operationId" : "createServiceV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Update a service by identifier",
          "description" : "",
          "operationId" : "updateServiceV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicesV2/upsert" : {
        "put" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Upsert a service by identifier",
          "description" : "",
          "operationId" : "upsertServiceV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceRequestDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicesV2/list/access" : {
        "get" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Gets Service Access list ",
          "description" : "",
          "operationId" : "getServiceAccessList",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "page",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "size",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 100,
            "format" : "int32"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "serviceIdentifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "sort",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicesV2/{serviceIdentifier}" : {
        "get" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Gets a Service by identifier",
          "description" : "",
          "operationId" : "getServiceV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "serviceIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "deleted",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "default" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "servicesV2" ],
          "summary" : "Delete a service by identifier",
          "description" : "",
          "operationId" : "deleteServiceV2",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "If-Match",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "serviceIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/smtpConfig/validateName" : {
        "post" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Checks whether other connectors exist with the same name",
          "description" : "",
          "operationId" : "validateName",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseValidationResultDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/smtpConfig/validate-connectivity" : {
        "post" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Tests the connectivity",
          "description" : "",
          "operationId" : "validateConnectivity",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "to",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "subject",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "body",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseValidationResultDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/smtpConfig" : {
        "get" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Gets Smtp config by accountId",
          "description" : "",
          "operationId" : "getSmtpConfig",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNgSmtpDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Create SMTP config",
          "description" : "",
          "operationId" : "createSmtpConfig",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/NgSmtpDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNgSmtpDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Update SmtpConfig",
          "description" : "",
          "operationId" : "updateSmtp",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/NgSmtpDTO"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseNgSmtpDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/smtpConfig/{identifier}" : {
        "delete" : {
          "tags" : [ "smtpConfig" ],
          "summary" : "Delete Smtp Config",
          "description" : "",
          "operationId" : "deleteSmtpConfig",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/unlock-user/{userId}" : {
        "put" : {
          "tags" : [ "user" ],
          "summary" : "unlock user",
          "description" : "",
          "operationId" : "unlockUser",
          "consumes" : [ "*/*" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/password" : {
        "put" : {
          "tags" : [ "user" ],
          "summary" : "Change user password",
          "description" : "",
          "operationId" : "changeUserPassword",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/PasswordChangeDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePasswordChangeResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/batch" : {
        "post" : {
          "tags" : [ "user" ],
          "summary" : "Get a list of users",
          "description" : "",
          "operationId" : "getUsers",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/projects" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "get user project information",
          "description" : "",
          "operationId" : "getUserProjectInfo",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageProject"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/all-projects" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "get user all projects information",
          "description" : "",
          "operationId" : "getUserAllProjectsInfo",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "userId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListProject"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/projects-count" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "Get count of projects accessible to a user",
          "description" : "",
          "operationId" : "getAccessibleProjectsCount",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "userId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseActiveProjectsCountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/last-admin" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "check if user is last admin at the scope",
          "description" : "",
          "operationId" : "checkIfLastAdmin",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "userId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/aggregate/{userId}" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "Get a user by userId for access control",
          "description" : "",
          "operationId" : "getAggregatedUser",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserAggregate"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/aggregate" : {
        "post" : {
          "tags" : [ "user" ],
          "summary" : "Get a page of active users for access control",
          "description" : "",
          "operationId" : "getAggregatedUsers",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ACLAggregateFilter"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserAggregate"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user" : {
        "put" : {
          "tags" : [ "user" ],
          "summary" : "update user information",
          "description" : "",
          "operationId" : "updateUserInfo",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/UserInfo"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/enable-two-factor-auth" : {
        "put" : {
          "tags" : [ "user" ],
          "summary" : "enable two factor auth settings",
          "description" : "",
          "operationId" : "enableTwoFactorAuth",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/TwoFactorAuthSettingsInfo"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/disable-two-factor-auth" : {
        "put" : {
          "tags" : [ "user" ],
          "summary" : "disable two factor auth settings",
          "description" : "",
          "operationId" : "disableTwoFactorAuth",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/{userId}" : {
        "delete" : {
          "tags" : [ "user" ],
          "summary" : "Remove user as the collaborator from the scope",
          "description" : "",
          "operationId" : "removeUser",
          "consumes" : [ "*/*" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/two-factor-auth/{authMechanism}" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "get two factor auth settings",
          "description" : "",
          "operationId" : "getTwoFactorAuthSettings",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "authMechanism",
            "in" : "path",
            "required" : true,
            "type" : "string",
            "enum" : [ "TOTP" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTwoFactorAuthSettingsInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/currentgen" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "Get users from current gen for an account",
          "description" : "",
          "operationId" : "getCurrentGenUsers",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "searchString",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageUserMetadataDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/users" : {
        "post" : {
          "tags" : [ "user" ],
          "summary" : "Add users to a scope",
          "description" : "",
          "operationId" : "addUsers",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/AddUsers"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseAddUsersResponse"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/user/currentUser" : {
        "get" : {
          "tags" : [ "user" ],
          "summary" : "get current user information",
          "description" : "",
          "operationId" : "getCurrentUserInfo",
          "consumes" : [ "application/json", "application/yaml" ],
          "produces" : [ "application/json", "application/yaml" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/executions/executionStatus" : {
        "get" : {
          "tags" : [ "executions" ],
          "summary" : "Gets Execution Status list",
          "description" : "",
          "operationId" : "getExecutionStatuses",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListExecutionStatus"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/executions/dummyCDStageModuleInfo" : {
        "get" : {
          "tags" : [ "executions" ],
          "summary" : "dummy api",
          "description" : "",
          "operationId" : "getDummyCDStageModuleInfo",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseCDStageModuleInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/executions/dummyApiForSwaggerSchemaCheck" : {
        "get" : {
          "tags" : [ "executions" ],
          "summary" : "dummy api for checking pms schema",
          "description" : "",
          "operationId" : "dummyApiForSwaggerSchemaCheck",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePipelineConfig"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/executions/dummyCDPipelineModuleInfo" : {
        "get" : {
          "tags" : [ "executions" ],
          "summary" : "dummy api",
          "description" : "",
          "operationId" : "getDummyCDPipelineModuleInfo",
          "consumes" : [ "application/json", "text/yaml", "text/html" ],
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseCDPipelineModuleInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/feedback" : {
        "post" : {
          "tags" : [ "feedback" ],
          "summary" : "Saves Feedback",
          "description" : "",
          "operationId" : "saveFeedback",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/FeedbackFormDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/instanceng" : {
        "get" : {
          "tags" : [ "instanceng" ],
          "summary" : "Get instance NG data",
          "description" : "",
          "operationId" : "getInstanceNGData",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "instanceInfoPodName",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "instanceInfoNamespace",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseOptionalHarnessServiceInfoNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/instancesync/response" : {
        "post" : {
          "tags" : [ "instancesync" ],
          "summary" : "Get instance sync perpetual task response",
          "description" : "",
          "operationId" : "getInstanceSyncPerpetualTaskResponse",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "perpetualTaskId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/DelegateResponseData"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/jira/statuses" : {
        "get" : {
          "tags" : [ "jira" ],
          "summary" : "Get jira statuses",
          "description" : "",
          "operationId" : "getJiraStatuses",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectKey",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "issueType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListJiraStatusNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/jira/validate" : {
        "get" : {
          "tags" : [ "jira" ],
          "summary" : "Validate jira credentials",
          "description" : "",
          "operationId" : "validateJiraCredentials",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/jira/createMetadata" : {
        "get" : {
          "tags" : [ "jira" ],
          "summary" : "Get jira issue create metadata",
          "description" : "",
          "operationId" : "getJiraIssueCreateMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectKey",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "issueType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "expand",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "fetchStatus",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "ignoreComment",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseJiraIssueCreateMetadataNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/jira/updateMetadata" : {
        "get" : {
          "tags" : [ "jira" ],
          "summary" : "Get jira issue update metadata",
          "description" : "",
          "operationId" : "getJiraIssueUpdateMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "issueKey",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseJiraIssueUpdateMetadataNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/jira/projects" : {
        "get" : {
          "tags" : [ "jira" ],
          "summary" : "Get jira projects",
          "description" : "",
          "operationId" : "getJiraProjects",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListJiraProjectBasicNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getWorkloads" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get workloads",
          "description" : "",
          "operationId" : "getWorkloads",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "environmentType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "PreProduction", "Production" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDashboardWorkloadDeployment"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/deploymentExecution" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get deployment execution",
          "description" : "",
          "operationId" : "getDeploymentExecution",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseExecutionDeploymentInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getDeployments" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get deployments",
          "description" : "",
          "operationId" : "getDeployments",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "top",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 20,
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDashboardExecutionStatusInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getServicesGrowthTrend" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get service growth trend",
          "description" : "",
          "operationId" : "getServicesGrowthTrend",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "timeGroupByType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "HOUR", "DAY", "WEEK" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTimeValuePairListDTOInteger"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getInstanceCountDetailsByService" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get active service instance count breakdown by env type",
          "description" : "",
          "operationId" : "getActiveServiceInstanceCountBreakdown",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseInstanceCountDetailsByEnvTypeAndServiceId"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getActiveServiceInstanceSummary" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get active service instance summary",
          "description" : "",
          "operationId" : "getActiveServiceInstanceSummary",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "timestamp",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseActiveServiceInstanceSummary"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getEnvBuildInstanceCountByService" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get list of unique environment and build ids with instance count",
          "description" : "",
          "operationId" : "getEnvBuildInstanceCount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvBuildIdAndInstanceCountInfoList"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getInstancesByServiceEnvAndBuilds" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get list of buildId and instances",
          "description" : "",
          "operationId" : "getActiveInstancesByServiceIdEnvIdAndBuildIds",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "envId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "buildIds",
            "in" : "query",
            "required" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseInstancesByBuildIdList"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getInstanceGrowthTrend" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get instance growth trend",
          "description" : "",
          "operationId" : "getInstanceGrowthTrend",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTimeValuePairListDTOInteger"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getInstanceCountHistory" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get instance count history",
          "description" : "",
          "operationId" : "getInstanceCountHistory",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseTimeValuePairListDTOEnvIdCountPair"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getDeploymentsByServiceId" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get deployments by serviceId",
          "description" : "",
          "operationId" : "getDeploymentsByServiceId",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDeploymentsInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/getServiceHeaderInfo" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get service header info",
          "description" : "",
          "operationId" : "getServiceHeaderInfo",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceHeaderInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/deploymentHealth" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get deployment health",
          "description" : "",
          "operationId" : "getDeploymentHealth",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseHealthDeploymentDashboard"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/serviceDeployments" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get service deployment",
          "description" : "",
          "operationId" : "getServiceDeployments",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "bucketSizeInDays",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 1,
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceDeploymentInfoDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/serviceDetails" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get service details list",
          "description" : "",
          "operationId" : "getServiceDetails",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceDetailsInfoDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/dashboard/serviceDeploymentsInfo" : {
        "get" : {
          "tags" : [ "dashboard" ],
          "summary" : "Get service deployments info",
          "description" : "",
          "operationId" : "getServiceDeploymentsInfo",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "serviceId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "bucketSizeInDays",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 1,
            "format" : "int64"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceDeploymentListInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/servicesCount" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get services count",
          "description" : "",
          "operationId" : "getServicesCount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServicesCount"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/envCount" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get environments count",
          "description" : "",
          "operationId" : "getEnvCount",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseEnvCount"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/activeServices" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get Most Active Services",
          "description" : "",
          "operationId" : "getActiveServices",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "sortBy",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "DEPLOYMENTS", "INSTANCES" ]
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServicesDashboardInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/topProjects" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get Top Projects as per Deployments",
          "description" : "",
          "operationId" : "getTopProjects",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseProjectsDashboardInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/deploymentStatsSummary" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get deployment stats summary",
          "description" : "",
          "operationId" : "getDeploymentStatsSummary",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "startTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "endTime",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int64"
          }, {
            "name" : "groupBy",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH" ]
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDeploymentStatsSummary"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/landingDashboards/activeDeploymentStats" : {
        "post" : {
          "tags" : [ "landingDashboards" ],
          "summary" : "Get active deployment stats",
          "description" : "",
          "operationId" : "getActiveDeploymentStats",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/LandingDashboardRequestCD"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePipelinesExecutionDashboardInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scim/account/{accountIdentifier}/Groups" : {
        "get" : {
          "tags" : [ "scim" ],
          "summary" : "Search groups by their name. Supports pagination. If nothing is passed in filter, all results will be returned.",
          "description" : "",
          "operationId" : "searchScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }, {
            "name" : "startIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "post" : {
          "tags" : [ "scim" ],
          "summary" : "Create a new group and return uuid in response",
          "description" : "",
          "operationId" : "createScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ScimGroup"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/scim/account/{accountIdentifier}/Groups/{groupIdentifier}" : {
        "get" : {
          "tags" : [ "scim" ],
          "summary" : "Fetch an existing user by uuid",
          "description" : "",
          "operationId" : "getScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "put" : {
          "tags" : [ "scim" ],
          "summary" : "Update a group",
          "description" : "",
          "operationId" : "updateScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ScimGroup"
            }
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "delete" : {
          "tags" : [ "scim" ],
          "summary" : "Delete an existing user by uuid",
          "description" : "",
          "operationId" : "deleteScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "patch" : {
          "tags" : [ "scim" ],
          "summary" : "Update some fields of a groups by uuid. Can update members/name",
          "description" : "",
          "operationId" : "patchScimGroup",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "groupIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/PatchRequest"
            }
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/scim/account/{accountIdentifier}/Users/{userIdentifier}" : {
        "get" : {
          "tags" : [ "scim" ],
          "summary" : "Get an existing user by uuid",
          "description" : "",
          "operationId" : "getScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "put" : {
          "tags" : [ "scim" ],
          "summary" : "Update an existing user by uuid",
          "description" : "",
          "operationId" : "updateScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ScimUser"
            }
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "scim" ],
          "summary" : "Delete an user by uuid",
          "description" : "",
          "operationId" : "deleteScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "patch" : {
          "tags" : [ "scim" ],
          "summary" : "Update some fields of a user by uuid",
          "description" : "",
          "operationId" : "patchScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "userIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/PatchRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ScimUser"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/scim/account/{accountIdentifier}/Users" : {
        "get" : {
          "tags" : [ "scim" ],
          "summary" : "Search users by their email address. Supports pagination. If nothing is passed in filter, all results will be returned.",
          "description" : "",
          "operationId" : "searchScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "filter",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          }, {
            "name" : "startIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32"
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "scim" ],
          "summary" : "Create a new user",
          "description" : "",
          "operationId" : "createScimUser",
          "consumes" : [ "application/scim+json", "application/json" ],
          "produces" : [ "application/scim+json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ScimUser"
            }
          }, {
            "name" : "accountIdentifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/serviceaccount" : {
        "get" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "List service account",
          "description" : "",
          "operationId" : "listServiceAccount",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "Create service account",
          "description" : "",
          "operationId" : "createServiceAccount",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceAccountDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/serviceaccount/{identifier}" : {
        "put" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "Update service account",
          "description" : "",
          "operationId" : "updateServiceAccount",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/ServiceAccountDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceAccountDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "Delete service account",
          "description" : "",
          "operationId" : "deleteServiceAccount",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/serviceaccount/aggregate" : {
        "get" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "List service account",
          "description" : "",
          "operationId" : "listAggregatedServiceAccounts",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifiers",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "pageIndex",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 0,
            "format" : "int32"
          }, {
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "default" : 50,
            "maximum" : 100,
            "format" : "int32"
          }, {
            "name" : "sortOrders",
            "in" : "query",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi"
          }, {
            "name" : "searchTerm",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponsePageServiceAccountAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/serviceaccount/aggregate/{identifier}" : {
        "get" : {
          "tags" : [ "serviceaccount" ],
          "summary" : "Get service account",
          "description" : "",
          "operationId" : "getAggregatedServiceAccount",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseServiceAccountAggregateDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicenow/metadata" : {
        "get" : {
          "tags" : [ "servicenow" ],
          "summary" : "Get ServiceNow metadata for ticketType",
          "description" : "",
          "operationId" : "getServiceNowIssueMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "ticketType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceNowFieldNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicenow/createMetadata" : {
        "get" : {
          "tags" : [ "servicenow" ],
          "summary" : "Get ServiceNow issue create metadata",
          "description" : "",
          "operationId" : "getServiceNowIssueCreateMetadata",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "ticketType",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceNowFieldNG"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicenow/ticketTypes" : {
        "get" : {
          "tags" : [ "servicenow" ],
          "summary" : "Get serviceNow ticket types",
          "description" : "",
          "operationId" : "getServiceNowTicketTypes",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListServiceNowTicketTypeDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/servicenow/applicationStatus" : {
        "get" : {
          "tags" : [ "servicenow" ],
          "summary" : "Check if harness application is added to ServiceNow instance",
          "description" : "",
          "operationId" : "getServiceNowApplicationStatus",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "connectorRef",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "branch",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "repoIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "getDefaultFromOtherRepo",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/trial-signup/provision" : {
        "put" : {
          "tags" : [ "trial-signup" ],
          "summary" : "Provision resources for signup",
          "description" : "",
          "operationId" : "provisionResourcesForCI",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSetupStatus"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/trial-signup/delegate-install-status" : {
        "get" : {
          "tags" : [ "trial-signup" ],
          "summary" : "Provision resources for signup",
          "description" : "",
          "operationId" : "getDelegateInstallStatus",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseDelegateStatus"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/source-code-manager" : {
        "get" : {
          "tags" : [ "source-code-manager" ],
          "summary" : "get source code manager information",
          "description" : "",
          "operationId" : "getSourceCodeManagers",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListSourceCodeManagerDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal Server Error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "source-code-manager" ],
          "summary" : "save source code manager",
          "description" : "",
          "operationId" : "saveSourceCodeManagers",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SourceCodeManagerDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSourceCodeManagerDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal Server Error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/source-code-manager/{identifier}" : {
        "put" : {
          "tags" : [ "source-code-manager" ],
          "summary" : "update source code manager",
          "description" : "",
          "operationId" : "updateSourceCodeManagers",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SourceCodeManagerDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseSourceCodeManagerDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal Server Error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "delete" : {
          "tags" : [ "source-code-manager" ],
          "summary" : "delete source code manager",
          "description" : "",
          "operationId" : "deleteSourceCodeManagers",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal Server Error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/webhook" : {
        "post" : {
          "tags" : [ "webhook" ],
          "summary" : "accept webhook event",
          "description" : "",
          "operationId" : "webhookEndpoint",
          "consumes" : [ "application/json", "application/yaml", "text/plain" ],
          "produces" : [ "application/json", "application/yaml", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseString"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/polling/delegate-response/{perpetualTaskId}" : {
        "post" : {
          "tags" : [ "polling" ],
          "operationId" : "processPollingResultNg",
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "name" : "perpetualTaskId",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "accountId",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          } ],
          "responses" : {
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/polling/subscribe" : {
        "post" : {
          "tags" : [ "polling" ],
          "operationId" : "subscribe",
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/ResponsePollingResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/polling/unsubscribe" : {
        "post" : {
          "tags" : [ "polling" ],
          "operationId" : "unsubscribe",
          "produces" : [ "application/json", "text/yaml", "text/html" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "type" : "boolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup" : {
        "post" : {
          "tags" : [ "signup" ],
          "operationId" : "signup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SignupDTO"
            }
          }, {
            "name" : "captchaToken",
            "in" : "query",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/RestResponseVoid"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup/verify/{token}" : {
        "post" : {
          "tags" : [ "signup" ],
          "operationId" : "verifyToken",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "token",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/RestResponseVerifyTokenResponseDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup/verify-notification" : {
        "post" : {
          "tags" : [ "signup" ],
          "summary" : "Resend user verification email",
          "description" : "",
          "operationId" : "resendVerifyEmail",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "email",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseBoolean"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup/community" : {
        "post" : {
          "tags" : [ "signup" ],
          "operationId" : "communitySignup",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/SignupDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/RestResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup/complete/{token}" : {
        "put" : {
          "tags" : [ "signup" ],
          "operationId" : "completeSignupInvite",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "token",
            "in" : "path",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/RestResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/signup/oauth" : {
        "post" : {
          "tags" : [ "signup" ],
          "operationId" : "signupOAuth",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/OAuthSignupDTO"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "headers" : { },
              "schema" : {
                "$ref" : "#/definitions/RestResponseUserInfo"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/partial-yaml-schema/details" : {
        "get" : {
          "tags" : [ "partial-yaml-schema" ],
          "summary" : "Get Partial Yaml Schema with details",
          "description" : "",
          "operationId" : "getPartialYamlSchemaWithDetails",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseYamlSchemaDetailsWrapper"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/partial-yaml-schema/merged" : {
        "post" : {
          "tags" : [ "partial-yaml-schema" ],
          "summary" : "Get Merged Partial Yaml Schema",
          "description" : "",
          "operationId" : "getMergedPartialYamlSchema",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/YamlSchemaDetailsWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListPartialSchemaDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/partial-yaml-schema" : {
        "get" : {
          "tags" : [ "partial-yaml-schema" ],
          "summary" : "Get Partial Yaml Schema",
          "description" : "",
          "operationId" : "getPartialYamlSchema",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseListPartialSchemaDTO"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        },
        "post" : {
          "tags" : [ "partial-yaml-schema" ],
          "summary" : "Get step YAML schema",
          "description" : "",
          "operationId" : "getStepYamlSchema",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          }, {
            "name" : "entityType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "yamlGroup",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/YamlSchemaDetailsWrapper"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseJsonNode"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/yaml-schema" : {
        "get" : {
          "tags" : [ "yaml-schema" ],
          "summary" : "Get Yaml Schema",
          "description" : "",
          "operationId" : "getYamlSchema",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "entityType",
            "in" : "query",
            "required" : true,
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          }, {
            "name" : "subtype",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          }, {
            "name" : "identifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "accountIdentifier",
            "in" : "query",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseJsonNode"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/yaml-snippet" : {
        "get" : {
          "tags" : [ "yaml-snippet" ],
          "summary" : "Get Yaml Snippet Metadata",
          "description" : "",
          "operationId" : "getYamlSnippetMetadata",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "tags",
            "in" : "query",
            "required" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "k8s", "git", "docker", "connector", "secretmanager", "secret", "secretText", "secretFile", "sshKey", "service", "infra", "steps", "pipeline", "http", "splunk", "appdynamics", "vault", "azurekeyvault", "local", "gcpkms", "gcp", "aws", "awskms", "awssecretmanager", "artifactory", "jira", "nexus", "github", "gitlab", "bitbucket", "ceaws", "ceazure", "cek8s", "codecommit", "httphelmrepo", "newrelic", "gcpcloudcost", "prometheus", "datadog", "sumologic", "dynatrace", "pagerduty", "customhealth", "servicenow", "errortracking", "azure", "pdc", "azurerepo" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseYamlSnippets"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      },
      "/yaml-snippet/{identifier}" : {
        "get" : {
          "tags" : [ "yaml-snippet" ],
          "summary" : "Get Yaml Snippet",
          "description" : "",
          "operationId" : "getYamlSnippet",
          "consumes" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "produces" : [ "application/json", "text/yaml", "text/html", "text/plain" ],
          "parameters" : [ {
            "name" : "identifier",
            "in" : "path",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "projectIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "orgIdentifier",
            "in" : "query",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "scope",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResponseJsonNode"
              }
            },
            "400" : {
              "description" : "Bad Request",
              "schema" : {
                "$ref" : "#/definitions/Failure"
              }
            },
            "500" : {
              "description" : "Internal server error",
              "schema" : {
                "$ref" : "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "definitions" : {
      "AccountDTO" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "companyName" : {
            "type" : "string"
          },
          "cluster" : {
            "type" : "string"
          },
          "defaultExperience" : {
            "type" : "string",
            "enum" : [ "NG", "CG" ]
          },
          "authenticationMechanism" : {
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          },
          "serviceAccountConfig" : {
            "$ref" : "#/definitions/ServiceAccountConfig"
          },
          "nextGenEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "Response" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "object"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseAccountDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AccountDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceAccountConfig" : {
        "type" : "object",
        "properties" : {
          "apiKeyLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tokenLimit" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Failure" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "code" : {
            "type" : "string",
            "enum" : [ "DEFAULT_ERROR_CODE", "INVALID_ARGUMENT", "INVALID_EMAIL", "DOMAIN_NOT_ALLOWED_TO_REGISTER", "COMMNITY_EDITION_NOT_FOUND", "DEPLOY_MODE_IS_NOT_ON_PREM", "USER_ALREADY_REGISTERED", "USER_INVITATION_DOES_NOT_EXIST", "USER_DOES_NOT_EXIST", "USER_INVITE_OPERATION_FAILED", "USER_DISABLED", "ACCOUNT_DOES_NOT_EXIST", "INACTIVE_ACCOUNT", "ACCOUNT_MIGRATED", "USER_DOMAIN_NOT_ALLOWED", "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED", "RESOURCE_NOT_FOUND", "INVALID_FORMAT", "ROLE_DOES_NOT_EXIST", "EMAIL_NOT_VERIFIED", "EMAIL_VERIFICATION_TOKEN_NOT_FOUND", "INVALID_TOKEN", "REVOKED_TOKEN", "INVALID_CAPTCHA_TOKEN", "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS", "EXPIRED_TOKEN", "TOKEN_ALREADY_REFRESHED_ONCE", "ACCESS_DENIED", "NG_ACCESS_DENIED", "INVALID_CREDENTIAL", "INVALID_CREDENTIALS_THIRD_PARTY", "INVALID_KEY", "INVALID_CONNECTOR_TYPE", "INVALID_KEYPATH", "INVALID_VARIABLE", "UNKNOWN_HOST", "UNREACHABLE_HOST", "INVALID_PORT", "SSH_SESSION_TIMEOUT", "SOCKET_CONNECTION_ERROR", "CONNECTION_ERROR", "SOCKET_CONNECTION_TIMEOUT", "CONNECTION_TIMEOUT", "SSH_CONNECTION_ERROR", "USER_GROUP_ERROR", "INVALID_EXECUTION_ID", "ERROR_IN_GETTING_CHANNEL_STREAMS", "UNEXPECTED", "UNKNOWN_ERROR", "UNKNOWN_EXECUTOR_TYPE_ERROR", "DUPLICATE_STATE_NAMES", "TRANSITION_NOT_LINKED", "TRANSITION_TO_INCORRECT_STATE", "TRANSITION_TYPE_NULL", "STATES_WITH_DUP_TRANSITIONS", "BARRIERS_NOT_RUNNING_CONCURRENTLY", "NON_FORK_STATES", "NON_REPEAT_STATES", "INITIAL_STATE_NOT_DEFINED", "FILE_INTEGRITY_CHECK_FAILED", "INVALID_URL", "FILE_DOWNLOAD_FAILED", "PLATFORM_SOFTWARE_DELETE_ERROR", "INVALID_CSV_FILE", "INVALID_REQUEST", "SCHEMA_VALIDATION_FAILED", "FILTER_CREATION_ERROR", "INVALID_YAML_ERROR", "PLAN_CREATION_ERROR", "INVALID_INFRA_STATE", "PIPELINE_ALREADY_TRIGGERED", "NON_EXISTING_PIPELINE", "DUPLICATE_COMMAND_NAMES", "INVALID_PIPELINE", "COMMAND_DOES_NOT_EXIST", "DUPLICATE_ARTIFACTSTREAM_NAMES", "DUPLICATE_HOST_NAMES", "STATE_NOT_FOR_TYPE", "STATE_MACHINE_ISSUE", "STATE_DISCONTINUE_FAILED", "STATE_PAUSE_FAILED", "PAUSE_ALL_ALREADY", "RESUME_ALL_ALREADY", "ROLLBACK_ALREADY", "ABORT_ALL_ALREADY", "EXPIRE_ALL_ALREADY", "RETRY_FAILED", "UNKNOWN_ARTIFACT_TYPE", "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE", "INIT_TIMEOUT", "LICENSE_EXPIRED", "NOT_LICENSED", "REQUEST_TIMEOUT", "WORKFLOW_ALREADY_TRIGGERED", "JENKINS_ERROR", "INVALID_ARTIFACT_SOURCE", "INVALID_ARTIFACT_SERVER", "INVALID_CLOUD_PROVIDER", "UPDATE_NOT_ALLOWED", "DELETE_NOT_ALLOWED", "APPDYNAMICS_CONFIGURATION_ERROR", "APM_CONFIGURATION_ERROR", "SPLUNK_CONFIGURATION_ERROR", "ELK_CONFIGURATION_ERROR", "LOGZ_CONFIGURATION_ERROR", "SUMO_CONFIGURATION_ERROR", "INSTANA_CONFIGURATION_ERROR", "APPDYNAMICS_ERROR", "STACKDRIVER_ERROR", "STACKDRIVER_CONFIGURATION_ERROR", "NEWRELIC_CONFIGURATION_ERROR", "NEWRELIC_ERROR", "DYNA_TRACE_CONFIGURATION_ERROR", "DYNA_TRACE_ERROR", "CLOUDWATCH_ERROR", "CLOUDWATCH_CONFIGURATION_ERROR", "PROMETHEUS_CONFIGURATION_ERROR", "DATA_DOG_CONFIGURATION_ERROR", "SERVICE_GUARD_CONFIGURATION_ERROR", "ENCRYPTION_NOT_CONFIGURED", "UNAVAILABLE_DELEGATES", "WORKFLOW_EXECUTION_IN_PROGRESS", "PIPELINE_EXECUTION_IN_PROGRESS", "AWS_ACCESS_DENIED", "AWS_CLUSTER_NOT_FOUND", "AWS_SERVICE_NOT_FOUND", "IMAGE_NOT_FOUND", "ILLEGAL_ARGUMENT", "IMAGE_TAG_NOT_FOUND", "DELEGATE_NOT_AVAILABLE", "INVALID_YAML_PAYLOAD", "AUTHENTICATION_ERROR", "AUTHORIZATION_ERROR", "UNRECOGNIZED_YAML_FIELDS", "COULD_NOT_MAP_BEFORE_YAML", "MISSING_BEFORE_YAML", "MISSING_YAML", "NON_EMPTY_DELETIONS", "GENERAL_YAML_ERROR", "GENERAL_YAML_INFO", "YAML_GIT_SYNC_ERROR", "GIT_CONNECTION_ERROR", "GIT_ERROR", "ARTIFACT_SERVER_ERROR", "ENCRYPT_DECRYPT_ERROR", "SECRET_MANAGEMENT_ERROR", "SECRET_NOT_FOUND", "KMS_OPERATION_ERROR", "GCP_KMS_OPERATION_ERROR", "VAULT_OPERATION_ERROR", "AWS_SECRETS_MANAGER_OPERATION_ERROR", "AZURE_KEY_VAULT_OPERATION_ERROR", "CYBERARK_OPERATION_ERROR", "UNSUPPORTED_OPERATION_EXCEPTION", "FEATURE_UNAVAILABLE", "GENERAL_ERROR", "BASELINE_CONFIGURATION_ERROR", "SAML_IDP_CONFIGURATION_NOT_AVAILABLE", "INVALID_AUTHENTICATION_MECHANISM", "INVALID_SAML_CONFIGURATION", "INVALID_OAUTH_CONFIGURATION", "INVALID_LDAP_CONFIGURATION", "USER_GROUP_SYNC_FAILURE", "USER_GROUP_ALREADY_EXIST", "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION", "EXPLANATION", "HINT", "NOT_WHITELISTED_IP", "INVALID_TOTP_TOKEN", "EMAIL_FAILED", "SSL_HANDSHAKE_FAILED", "NO_APPS_ASSIGNED", "INVALID_INFRA_CONFIGURATION", "TEMPLATES_LINKED", "USER_HAS_NO_PERMISSIONS", "USER_NOT_AUTHORIZED", "USER_ALREADY_PRESENT", "INVALID_USAGE_RESTRICTION", "USAGE_RESTRICTION_ERROR", "STATE_EXECUTION_INSTANCE_NOT_FOUND", "DELEGATE_TASK_RETRY", "KUBERNETES_API_TASK_EXCEPTION", "KUBERNETES_TASK_EXCEPTION", "KUBERNETES_YAML_ERROR", "SAVE_FILE_INTO_GCP_STORAGE_FAILED", "READ_FILE_FROM_GCP_STORAGE_FAILED", "FILE_NOT_FOUND_ERROR", "USAGE_LIMITS_EXCEEDED", "EVENT_PUBLISH_FAILED", "JIRA_ERROR", "EXPRESSION_EVALUATION_FAILED", "KUBERNETES_VALUES_ERROR", "KUBERNETES_CLUSTER_ERROR", "INCORRECT_SIGN_IN_MECHANISM", "OAUTH_LOGIN_FAILED", "INVALID_TERRAFORM_TARGETS_REQUEST", "TERRAFORM_EXECUTION_ERROR", "FILE_READ_FAILED", "FILE_SIZE_EXCEEDS_LIMIT", "CLUSTER_NOT_FOUND", "MARKETPLACE_TOKEN_NOT_FOUND", "INVALID_MARKETPLACE_TOKEN", "INVALID_TICKETING_SERVER", "SERVICENOW_ERROR", "PASSWORD_EXPIRED", "USER_LOCKED", "PASSWORD_STRENGTH_CHECK_FAILED", "ACCOUNT_DISABLED", "INVALID_ACCOUNT_PERMISSION", "PAGERDUTY_ERROR", "HEALTH_ERROR", "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED", "DOMAIN_WHITELIST_FILTER_CHECK_FAILED", "INVALID_DASHBOARD_UPDATE_REQUEST", "DUPLICATE_FIELD", "INVALID_AZURE_VAULT_CONFIGURATION", "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS", "INVALID_ROLLBACK", "DATA_COLLECTION_ERROR", "SUMO_DATA_COLLECTION_ERROR", "DEPLOYMENT_GOVERNANCE_ERROR", "BATCH_PROCESSING_ERROR", "GRAPHQL_ERROR", "FILE_CREATE_ERROR", "ILLEGAL_STATE", "GIT_DIFF_COMMIT_NOT_IN_ORDER", "FAILED_TO_ACQUIRE_PERSISTENT_LOCK", "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK", "POD_NOT_FOUND_ERROR", "COMMAND_EXECUTION_ERROR", "REGISTRY_EXCEPTION", "ENGINE_INTERRUPT_PROCESSING_EXCEPTION", "ENGINE_IO_EXCEPTION", "ENGINE_OUTCOME_EXCEPTION", "ENGINE_SWEEPING_OUTPUT_EXCEPTION", "CACHE_NOT_FOUND_EXCEPTION", "ENGINE_ENTITY_UPDATE_EXCEPTION", "SHELL_EXECUTION_EXCEPTION", "TEMPLATE_NOT_FOUND", "AZURE_SERVICE_EXCEPTION", "AZURE_CLIENT_EXCEPTION", "GIT_UNSEEN_REMOTE_HEAD_COMMIT", "TIMEOUT_ENGINE_EXCEPTION", "NO_AVAILABLE_DELEGATES", "NO_INSTALLED_DELEGATES", "DUPLICATE_DELEGATE_EXCEPTION", "GCP_MARKETPLACE_EXCEPTION", "MISSING_DEFAULT_GOOGLE_CREDENTIALS", "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS", "OPTIMISTIC_LOCKING_EXCEPTION", "NG_PIPELINE_EXECUTION_EXCEPTION", "NG_PIPELINE_CREATE_EXCEPTION", "RESOURCE_NOT_FOUND_EXCEPTION", "PMS_INITIALIZE_SDK_EXCEPTION", "UNEXPECTED_SNIPPET_EXCEPTION", "UNEXPECTED_SCHEMA_EXCEPTION", "CONNECTOR_VALIDATION_EXCEPTION", "TIMESCALE_NOT_AVAILABLE", "MIGRATION_EXCEPTION", "REQUEST_PROCESSING_INTERRUPTED", "SECRET_MANAGER_ID_NOT_FOUND", "GCP_SECRET_MANAGER_OPERATION_ERROR", "GCP_SECRET_OPERATION_ERROR", "GIT_OPERATION_ERROR", "TASK_FAILURE_ERROR", "INSTANCE_STATS_PROCESS_ERROR", "INSTANCE_STATS_MIGRATION_ERROR", "DEPLOYMENT_MIGRATION_ERROR", "CG_LICENSE_USAGE_ERROR", "INSTANCE_STATS_AGGREGATION_ERROR", "UNRESOLVED_EXPRESSIONS_ERROR", "KRYO_HANDLER_NOT_FOUND_ERROR", "DELEGATE_ERROR_HANDLER_EXCEPTION", "UNEXPECTED_TYPE_ERROR", "EXCEPTION_HANDLER_NOT_FOUND", "CONNECTOR_NOT_FOUND_EXCEPTION", "GCP_SERVER_ERROR", "HTTP_RESPONSE_EXCEPTION", "SCM_NOT_FOUND_ERROR", "SCM_CONFLICT_ERROR", "SCM_UNPROCESSABLE_ENTITY", "PROCESS_EXECUTION_EXCEPTION", "SCM_UNAUTHORIZED", "SCM_INTERNAL_SERVER_ERROR", "DATA", "CONTEXT", "PR_CREATION_ERROR", "URL_NOT_REACHABLE", "URL_NOT_PROVIDED", "ENGINE_EXPRESSION_EVALUATION_ERROR", "ENGINE_FUNCTOR_ERROR", "JIRA_CLIENT_ERROR", "SCM_NOT_MODIFIED", "APPROVAL_STEP_NG_ERROR", "BUCKET_SERVER_ERROR", "GIT_SYNC_ERROR", "TEMPLATE_EXCEPTION", "ENTITY_REFERENCE_EXCEPTION", "INVALID_INPUT_SET", "INVALID_OVERLAY_INPUT_SET", "RESOURCE_ALREADY_EXISTS", "INVALID_JSON_PAYLOAD", "POLICY_EVALUATION_FAILURE", "POLICY_SET_ERROR", "INVALID_ARTIFACTORY_REGISTRY_REQUEST", "INVALID_NEXUS_REGISTRY_REQUEST", "ENTITY_NOT_FOUND", "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST", "AZURE_AUTHENTICATION_ERROR", "AZURE_CONFIG_ERROR", "DATA_PROCESSING_ERROR", "AWS_IAM_ERROR", "AWS_CF_ERROR", "INVALID_AZURE_AKS_REQUEST", "SERVERLESS_EXECUTION_ERROR" ]
          },
          "message" : {
            "type" : "string"
          },
          "correlationId" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ValidationError"
            }
          }
        }
      },
      "ValidationError" : {
        "type" : "object",
        "properties" : {
          "fieldId" : {
            "type" : "string"
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "code" : {
            "type" : "string",
            "enum" : [ "DEFAULT_ERROR_CODE", "INVALID_ARGUMENT", "INVALID_EMAIL", "DOMAIN_NOT_ALLOWED_TO_REGISTER", "COMMNITY_EDITION_NOT_FOUND", "DEPLOY_MODE_IS_NOT_ON_PREM", "USER_ALREADY_REGISTERED", "USER_INVITATION_DOES_NOT_EXIST", "USER_DOES_NOT_EXIST", "USER_INVITE_OPERATION_FAILED", "USER_DISABLED", "ACCOUNT_DOES_NOT_EXIST", "INACTIVE_ACCOUNT", "ACCOUNT_MIGRATED", "USER_DOMAIN_NOT_ALLOWED", "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED", "RESOURCE_NOT_FOUND", "INVALID_FORMAT", "ROLE_DOES_NOT_EXIST", "EMAIL_NOT_VERIFIED", "EMAIL_VERIFICATION_TOKEN_NOT_FOUND", "INVALID_TOKEN", "REVOKED_TOKEN", "INVALID_CAPTCHA_TOKEN", "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS", "EXPIRED_TOKEN", "TOKEN_ALREADY_REFRESHED_ONCE", "ACCESS_DENIED", "NG_ACCESS_DENIED", "INVALID_CREDENTIAL", "INVALID_CREDENTIALS_THIRD_PARTY", "INVALID_KEY", "INVALID_CONNECTOR_TYPE", "INVALID_KEYPATH", "INVALID_VARIABLE", "UNKNOWN_HOST", "UNREACHABLE_HOST", "INVALID_PORT", "SSH_SESSION_TIMEOUT", "SOCKET_CONNECTION_ERROR", "CONNECTION_ERROR", "SOCKET_CONNECTION_TIMEOUT", "CONNECTION_TIMEOUT", "SSH_CONNECTION_ERROR", "USER_GROUP_ERROR", "INVALID_EXECUTION_ID", "ERROR_IN_GETTING_CHANNEL_STREAMS", "UNEXPECTED", "UNKNOWN_ERROR", "UNKNOWN_EXECUTOR_TYPE_ERROR", "DUPLICATE_STATE_NAMES", "TRANSITION_NOT_LINKED", "TRANSITION_TO_INCORRECT_STATE", "TRANSITION_TYPE_NULL", "STATES_WITH_DUP_TRANSITIONS", "BARRIERS_NOT_RUNNING_CONCURRENTLY", "NON_FORK_STATES", "NON_REPEAT_STATES", "INITIAL_STATE_NOT_DEFINED", "FILE_INTEGRITY_CHECK_FAILED", "INVALID_URL", "FILE_DOWNLOAD_FAILED", "PLATFORM_SOFTWARE_DELETE_ERROR", "INVALID_CSV_FILE", "INVALID_REQUEST", "SCHEMA_VALIDATION_FAILED", "FILTER_CREATION_ERROR", "INVALID_YAML_ERROR", "PLAN_CREATION_ERROR", "INVALID_INFRA_STATE", "PIPELINE_ALREADY_TRIGGERED", "NON_EXISTING_PIPELINE", "DUPLICATE_COMMAND_NAMES", "INVALID_PIPELINE", "COMMAND_DOES_NOT_EXIST", "DUPLICATE_ARTIFACTSTREAM_NAMES", "DUPLICATE_HOST_NAMES", "STATE_NOT_FOR_TYPE", "STATE_MACHINE_ISSUE", "STATE_DISCONTINUE_FAILED", "STATE_PAUSE_FAILED", "PAUSE_ALL_ALREADY", "RESUME_ALL_ALREADY", "ROLLBACK_ALREADY", "ABORT_ALL_ALREADY", "EXPIRE_ALL_ALREADY", "RETRY_FAILED", "UNKNOWN_ARTIFACT_TYPE", "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE", "INIT_TIMEOUT", "LICENSE_EXPIRED", "NOT_LICENSED", "REQUEST_TIMEOUT", "WORKFLOW_ALREADY_TRIGGERED", "JENKINS_ERROR", "INVALID_ARTIFACT_SOURCE", "INVALID_ARTIFACT_SERVER", "INVALID_CLOUD_PROVIDER", "UPDATE_NOT_ALLOWED", "DELETE_NOT_ALLOWED", "APPDYNAMICS_CONFIGURATION_ERROR", "APM_CONFIGURATION_ERROR", "SPLUNK_CONFIGURATION_ERROR", "ELK_CONFIGURATION_ERROR", "LOGZ_CONFIGURATION_ERROR", "SUMO_CONFIGURATION_ERROR", "INSTANA_CONFIGURATION_ERROR", "APPDYNAMICS_ERROR", "STACKDRIVER_ERROR", "STACKDRIVER_CONFIGURATION_ERROR", "NEWRELIC_CONFIGURATION_ERROR", "NEWRELIC_ERROR", "DYNA_TRACE_CONFIGURATION_ERROR", "DYNA_TRACE_ERROR", "CLOUDWATCH_ERROR", "CLOUDWATCH_CONFIGURATION_ERROR", "PROMETHEUS_CONFIGURATION_ERROR", "DATA_DOG_CONFIGURATION_ERROR", "SERVICE_GUARD_CONFIGURATION_ERROR", "ENCRYPTION_NOT_CONFIGURED", "UNAVAILABLE_DELEGATES", "WORKFLOW_EXECUTION_IN_PROGRESS", "PIPELINE_EXECUTION_IN_PROGRESS", "AWS_ACCESS_DENIED", "AWS_CLUSTER_NOT_FOUND", "AWS_SERVICE_NOT_FOUND", "IMAGE_NOT_FOUND", "ILLEGAL_ARGUMENT", "IMAGE_TAG_NOT_FOUND", "DELEGATE_NOT_AVAILABLE", "INVALID_YAML_PAYLOAD", "AUTHENTICATION_ERROR", "AUTHORIZATION_ERROR", "UNRECOGNIZED_YAML_FIELDS", "COULD_NOT_MAP_BEFORE_YAML", "MISSING_BEFORE_YAML", "MISSING_YAML", "NON_EMPTY_DELETIONS", "GENERAL_YAML_ERROR", "GENERAL_YAML_INFO", "YAML_GIT_SYNC_ERROR", "GIT_CONNECTION_ERROR", "GIT_ERROR", "ARTIFACT_SERVER_ERROR", "ENCRYPT_DECRYPT_ERROR", "SECRET_MANAGEMENT_ERROR", "SECRET_NOT_FOUND", "KMS_OPERATION_ERROR", "GCP_KMS_OPERATION_ERROR", "VAULT_OPERATION_ERROR", "AWS_SECRETS_MANAGER_OPERATION_ERROR", "AZURE_KEY_VAULT_OPERATION_ERROR", "CYBERARK_OPERATION_ERROR", "UNSUPPORTED_OPERATION_EXCEPTION", "FEATURE_UNAVAILABLE", "GENERAL_ERROR", "BASELINE_CONFIGURATION_ERROR", "SAML_IDP_CONFIGURATION_NOT_AVAILABLE", "INVALID_AUTHENTICATION_MECHANISM", "INVALID_SAML_CONFIGURATION", "INVALID_OAUTH_CONFIGURATION", "INVALID_LDAP_CONFIGURATION", "USER_GROUP_SYNC_FAILURE", "USER_GROUP_ALREADY_EXIST", "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION", "EXPLANATION", "HINT", "NOT_WHITELISTED_IP", "INVALID_TOTP_TOKEN", "EMAIL_FAILED", "SSL_HANDSHAKE_FAILED", "NO_APPS_ASSIGNED", "INVALID_INFRA_CONFIGURATION", "TEMPLATES_LINKED", "USER_HAS_NO_PERMISSIONS", "USER_NOT_AUTHORIZED", "USER_ALREADY_PRESENT", "INVALID_USAGE_RESTRICTION", "USAGE_RESTRICTION_ERROR", "STATE_EXECUTION_INSTANCE_NOT_FOUND", "DELEGATE_TASK_RETRY", "KUBERNETES_API_TASK_EXCEPTION", "KUBERNETES_TASK_EXCEPTION", "KUBERNETES_YAML_ERROR", "SAVE_FILE_INTO_GCP_STORAGE_FAILED", "READ_FILE_FROM_GCP_STORAGE_FAILED", "FILE_NOT_FOUND_ERROR", "USAGE_LIMITS_EXCEEDED", "EVENT_PUBLISH_FAILED", "JIRA_ERROR", "EXPRESSION_EVALUATION_FAILED", "KUBERNETES_VALUES_ERROR", "KUBERNETES_CLUSTER_ERROR", "INCORRECT_SIGN_IN_MECHANISM", "OAUTH_LOGIN_FAILED", "INVALID_TERRAFORM_TARGETS_REQUEST", "TERRAFORM_EXECUTION_ERROR", "FILE_READ_FAILED", "FILE_SIZE_EXCEEDS_LIMIT", "CLUSTER_NOT_FOUND", "MARKETPLACE_TOKEN_NOT_FOUND", "INVALID_MARKETPLACE_TOKEN", "INVALID_TICKETING_SERVER", "SERVICENOW_ERROR", "PASSWORD_EXPIRED", "USER_LOCKED", "PASSWORD_STRENGTH_CHECK_FAILED", "ACCOUNT_DISABLED", "INVALID_ACCOUNT_PERMISSION", "PAGERDUTY_ERROR", "HEALTH_ERROR", "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED", "DOMAIN_WHITELIST_FILTER_CHECK_FAILED", "INVALID_DASHBOARD_UPDATE_REQUEST", "DUPLICATE_FIELD", "INVALID_AZURE_VAULT_CONFIGURATION", "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS", "INVALID_ROLLBACK", "DATA_COLLECTION_ERROR", "SUMO_DATA_COLLECTION_ERROR", "DEPLOYMENT_GOVERNANCE_ERROR", "BATCH_PROCESSING_ERROR", "GRAPHQL_ERROR", "FILE_CREATE_ERROR", "ILLEGAL_STATE", "GIT_DIFF_COMMIT_NOT_IN_ORDER", "FAILED_TO_ACQUIRE_PERSISTENT_LOCK", "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK", "POD_NOT_FOUND_ERROR", "COMMAND_EXECUTION_ERROR", "REGISTRY_EXCEPTION", "ENGINE_INTERRUPT_PROCESSING_EXCEPTION", "ENGINE_IO_EXCEPTION", "ENGINE_OUTCOME_EXCEPTION", "ENGINE_SWEEPING_OUTPUT_EXCEPTION", "CACHE_NOT_FOUND_EXCEPTION", "ENGINE_ENTITY_UPDATE_EXCEPTION", "SHELL_EXECUTION_EXCEPTION", "TEMPLATE_NOT_FOUND", "AZURE_SERVICE_EXCEPTION", "AZURE_CLIENT_EXCEPTION", "GIT_UNSEEN_REMOTE_HEAD_COMMIT", "TIMEOUT_ENGINE_EXCEPTION", "NO_AVAILABLE_DELEGATES", "NO_INSTALLED_DELEGATES", "DUPLICATE_DELEGATE_EXCEPTION", "GCP_MARKETPLACE_EXCEPTION", "MISSING_DEFAULT_GOOGLE_CREDENTIALS", "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS", "OPTIMISTIC_LOCKING_EXCEPTION", "NG_PIPELINE_EXECUTION_EXCEPTION", "NG_PIPELINE_CREATE_EXCEPTION", "RESOURCE_NOT_FOUND_EXCEPTION", "PMS_INITIALIZE_SDK_EXCEPTION", "UNEXPECTED_SNIPPET_EXCEPTION", "UNEXPECTED_SCHEMA_EXCEPTION", "CONNECTOR_VALIDATION_EXCEPTION", "TIMESCALE_NOT_AVAILABLE", "MIGRATION_EXCEPTION", "REQUEST_PROCESSING_INTERRUPTED", "SECRET_MANAGER_ID_NOT_FOUND", "GCP_SECRET_MANAGER_OPERATION_ERROR", "GCP_SECRET_OPERATION_ERROR", "GIT_OPERATION_ERROR", "TASK_FAILURE_ERROR", "INSTANCE_STATS_PROCESS_ERROR", "INSTANCE_STATS_MIGRATION_ERROR", "DEPLOYMENT_MIGRATION_ERROR", "CG_LICENSE_USAGE_ERROR", "INSTANCE_STATS_AGGREGATION_ERROR", "UNRESOLVED_EXPRESSIONS_ERROR", "KRYO_HANDLER_NOT_FOUND_ERROR", "DELEGATE_ERROR_HANDLER_EXCEPTION", "UNEXPECTED_TYPE_ERROR", "EXCEPTION_HANDLER_NOT_FOUND", "CONNECTOR_NOT_FOUND_EXCEPTION", "GCP_SERVER_ERROR", "HTTP_RESPONSE_EXCEPTION", "SCM_NOT_FOUND_ERROR", "SCM_CONFLICT_ERROR", "SCM_UNPROCESSABLE_ENTITY", "PROCESS_EXECUTION_EXCEPTION", "SCM_UNAUTHORIZED", "SCM_INTERNAL_SERVER_ERROR", "DATA", "CONTEXT", "PR_CREATION_ERROR", "URL_NOT_REACHABLE", "URL_NOT_PROVIDED", "ENGINE_EXPRESSION_EVALUATION_ERROR", "ENGINE_FUNCTOR_ERROR", "JIRA_CLIENT_ERROR", "SCM_NOT_MODIFIED", "APPROVAL_STEP_NG_ERROR", "BUCKET_SERVER_ERROR", "GIT_SYNC_ERROR", "TEMPLATE_EXCEPTION", "ENTITY_REFERENCE_EXCEPTION", "INVALID_INPUT_SET", "INVALID_OVERLAY_INPUT_SET", "RESOURCE_ALREADY_EXISTS", "INVALID_JSON_PAYLOAD", "POLICY_EVALUATION_FAILURE", "POLICY_SET_ERROR", "INVALID_ARTIFACTORY_REGISTRY_REQUEST", "INVALID_NEXUS_REGISTRY_REQUEST", "ENTITY_NOT_FOUND", "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST", "AZURE_AUTHENTICATION_ERROR", "AZURE_CONFIG_ERROR", "DATA_PROCESSING_ERROR", "AWS_IAM_ERROR", "AWS_CF_ERROR", "INVALID_AZURE_AKS_REQUEST", "SERVERLESS_EXECUTION_ERROR" ]
          },
          "message" : {
            "type" : "string"
          },
          "correlationId" : {
            "type" : "string"
          },
          "detailedMessage" : {
            "type" : "string"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "metadata" : {
            "$ref" : "#/definitions/ErrorMetadataDTO"
          }
        }
      },
      "ErrorMetadataDTO" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "NodeErrorInfo" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fqn" : {
            "type" : "string"
          }
        }
      },
      "ResponseMessage" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "enum" : [ "DEFAULT_ERROR_CODE", "INVALID_ARGUMENT", "INVALID_EMAIL", "DOMAIN_NOT_ALLOWED_TO_REGISTER", "COMMNITY_EDITION_NOT_FOUND", "DEPLOY_MODE_IS_NOT_ON_PREM", "USER_ALREADY_REGISTERED", "USER_INVITATION_DOES_NOT_EXIST", "USER_DOES_NOT_EXIST", "USER_INVITE_OPERATION_FAILED", "USER_DISABLED", "ACCOUNT_DOES_NOT_EXIST", "INACTIVE_ACCOUNT", "ACCOUNT_MIGRATED", "USER_DOMAIN_NOT_ALLOWED", "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED", "RESOURCE_NOT_FOUND", "INVALID_FORMAT", "ROLE_DOES_NOT_EXIST", "EMAIL_NOT_VERIFIED", "EMAIL_VERIFICATION_TOKEN_NOT_FOUND", "INVALID_TOKEN", "REVOKED_TOKEN", "INVALID_CAPTCHA_TOKEN", "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS", "EXPIRED_TOKEN", "TOKEN_ALREADY_REFRESHED_ONCE", "ACCESS_DENIED", "NG_ACCESS_DENIED", "INVALID_CREDENTIAL", "INVALID_CREDENTIALS_THIRD_PARTY", "INVALID_KEY", "INVALID_CONNECTOR_TYPE", "INVALID_KEYPATH", "INVALID_VARIABLE", "UNKNOWN_HOST", "UNREACHABLE_HOST", "INVALID_PORT", "SSH_SESSION_TIMEOUT", "SOCKET_CONNECTION_ERROR", "CONNECTION_ERROR", "SOCKET_CONNECTION_TIMEOUT", "CONNECTION_TIMEOUT", "SSH_CONNECTION_ERROR", "USER_GROUP_ERROR", "INVALID_EXECUTION_ID", "ERROR_IN_GETTING_CHANNEL_STREAMS", "UNEXPECTED", "UNKNOWN_ERROR", "UNKNOWN_EXECUTOR_TYPE_ERROR", "DUPLICATE_STATE_NAMES", "TRANSITION_NOT_LINKED", "TRANSITION_TO_INCORRECT_STATE", "TRANSITION_TYPE_NULL", "STATES_WITH_DUP_TRANSITIONS", "BARRIERS_NOT_RUNNING_CONCURRENTLY", "NON_FORK_STATES", "NON_REPEAT_STATES", "INITIAL_STATE_NOT_DEFINED", "FILE_INTEGRITY_CHECK_FAILED", "INVALID_URL", "FILE_DOWNLOAD_FAILED", "PLATFORM_SOFTWARE_DELETE_ERROR", "INVALID_CSV_FILE", "INVALID_REQUEST", "SCHEMA_VALIDATION_FAILED", "FILTER_CREATION_ERROR", "INVALID_YAML_ERROR", "PLAN_CREATION_ERROR", "INVALID_INFRA_STATE", "PIPELINE_ALREADY_TRIGGERED", "NON_EXISTING_PIPELINE", "DUPLICATE_COMMAND_NAMES", "INVALID_PIPELINE", "COMMAND_DOES_NOT_EXIST", "DUPLICATE_ARTIFACTSTREAM_NAMES", "DUPLICATE_HOST_NAMES", "STATE_NOT_FOR_TYPE", "STATE_MACHINE_ISSUE", "STATE_DISCONTINUE_FAILED", "STATE_PAUSE_FAILED", "PAUSE_ALL_ALREADY", "RESUME_ALL_ALREADY", "ROLLBACK_ALREADY", "ABORT_ALL_ALREADY", "EXPIRE_ALL_ALREADY", "RETRY_FAILED", "UNKNOWN_ARTIFACT_TYPE", "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE", "INIT_TIMEOUT", "LICENSE_EXPIRED", "NOT_LICENSED", "REQUEST_TIMEOUT", "WORKFLOW_ALREADY_TRIGGERED", "JENKINS_ERROR", "INVALID_ARTIFACT_SOURCE", "INVALID_ARTIFACT_SERVER", "INVALID_CLOUD_PROVIDER", "UPDATE_NOT_ALLOWED", "DELETE_NOT_ALLOWED", "APPDYNAMICS_CONFIGURATION_ERROR", "APM_CONFIGURATION_ERROR", "SPLUNK_CONFIGURATION_ERROR", "ELK_CONFIGURATION_ERROR", "LOGZ_CONFIGURATION_ERROR", "SUMO_CONFIGURATION_ERROR", "INSTANA_CONFIGURATION_ERROR", "APPDYNAMICS_ERROR", "STACKDRIVER_ERROR", "STACKDRIVER_CONFIGURATION_ERROR", "NEWRELIC_CONFIGURATION_ERROR", "NEWRELIC_ERROR", "DYNA_TRACE_CONFIGURATION_ERROR", "DYNA_TRACE_ERROR", "CLOUDWATCH_ERROR", "CLOUDWATCH_CONFIGURATION_ERROR", "PROMETHEUS_CONFIGURATION_ERROR", "DATA_DOG_CONFIGURATION_ERROR", "SERVICE_GUARD_CONFIGURATION_ERROR", "ENCRYPTION_NOT_CONFIGURED", "UNAVAILABLE_DELEGATES", "WORKFLOW_EXECUTION_IN_PROGRESS", "PIPELINE_EXECUTION_IN_PROGRESS", "AWS_ACCESS_DENIED", "AWS_CLUSTER_NOT_FOUND", "AWS_SERVICE_NOT_FOUND", "IMAGE_NOT_FOUND", "ILLEGAL_ARGUMENT", "IMAGE_TAG_NOT_FOUND", "DELEGATE_NOT_AVAILABLE", "INVALID_YAML_PAYLOAD", "AUTHENTICATION_ERROR", "AUTHORIZATION_ERROR", "UNRECOGNIZED_YAML_FIELDS", "COULD_NOT_MAP_BEFORE_YAML", "MISSING_BEFORE_YAML", "MISSING_YAML", "NON_EMPTY_DELETIONS", "GENERAL_YAML_ERROR", "GENERAL_YAML_INFO", "YAML_GIT_SYNC_ERROR", "GIT_CONNECTION_ERROR", "GIT_ERROR", "ARTIFACT_SERVER_ERROR", "ENCRYPT_DECRYPT_ERROR", "SECRET_MANAGEMENT_ERROR", "SECRET_NOT_FOUND", "KMS_OPERATION_ERROR", "GCP_KMS_OPERATION_ERROR", "VAULT_OPERATION_ERROR", "AWS_SECRETS_MANAGER_OPERATION_ERROR", "AZURE_KEY_VAULT_OPERATION_ERROR", "CYBERARK_OPERATION_ERROR", "UNSUPPORTED_OPERATION_EXCEPTION", "FEATURE_UNAVAILABLE", "GENERAL_ERROR", "BASELINE_CONFIGURATION_ERROR", "SAML_IDP_CONFIGURATION_NOT_AVAILABLE", "INVALID_AUTHENTICATION_MECHANISM", "INVALID_SAML_CONFIGURATION", "INVALID_OAUTH_CONFIGURATION", "INVALID_LDAP_CONFIGURATION", "USER_GROUP_SYNC_FAILURE", "USER_GROUP_ALREADY_EXIST", "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION", "EXPLANATION", "HINT", "NOT_WHITELISTED_IP", "INVALID_TOTP_TOKEN", "EMAIL_FAILED", "SSL_HANDSHAKE_FAILED", "NO_APPS_ASSIGNED", "INVALID_INFRA_CONFIGURATION", "TEMPLATES_LINKED", "USER_HAS_NO_PERMISSIONS", "USER_NOT_AUTHORIZED", "USER_ALREADY_PRESENT", "INVALID_USAGE_RESTRICTION", "USAGE_RESTRICTION_ERROR", "STATE_EXECUTION_INSTANCE_NOT_FOUND", "DELEGATE_TASK_RETRY", "KUBERNETES_API_TASK_EXCEPTION", "KUBERNETES_TASK_EXCEPTION", "KUBERNETES_YAML_ERROR", "SAVE_FILE_INTO_GCP_STORAGE_FAILED", "READ_FILE_FROM_GCP_STORAGE_FAILED", "FILE_NOT_FOUND_ERROR", "USAGE_LIMITS_EXCEEDED", "EVENT_PUBLISH_FAILED", "JIRA_ERROR", "EXPRESSION_EVALUATION_FAILED", "KUBERNETES_VALUES_ERROR", "KUBERNETES_CLUSTER_ERROR", "INCORRECT_SIGN_IN_MECHANISM", "OAUTH_LOGIN_FAILED", "INVALID_TERRAFORM_TARGETS_REQUEST", "TERRAFORM_EXECUTION_ERROR", "FILE_READ_FAILED", "FILE_SIZE_EXCEEDS_LIMIT", "CLUSTER_NOT_FOUND", "MARKETPLACE_TOKEN_NOT_FOUND", "INVALID_MARKETPLACE_TOKEN", "INVALID_TICKETING_SERVER", "SERVICENOW_ERROR", "PASSWORD_EXPIRED", "USER_LOCKED", "PASSWORD_STRENGTH_CHECK_FAILED", "ACCOUNT_DISABLED", "INVALID_ACCOUNT_PERMISSION", "PAGERDUTY_ERROR", "HEALTH_ERROR", "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED", "DOMAIN_WHITELIST_FILTER_CHECK_FAILED", "INVALID_DASHBOARD_UPDATE_REQUEST", "DUPLICATE_FIELD", "INVALID_AZURE_VAULT_CONFIGURATION", "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS", "INVALID_ROLLBACK", "DATA_COLLECTION_ERROR", "SUMO_DATA_COLLECTION_ERROR", "DEPLOYMENT_GOVERNANCE_ERROR", "BATCH_PROCESSING_ERROR", "GRAPHQL_ERROR", "FILE_CREATE_ERROR", "ILLEGAL_STATE", "GIT_DIFF_COMMIT_NOT_IN_ORDER", "FAILED_TO_ACQUIRE_PERSISTENT_LOCK", "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK", "POD_NOT_FOUND_ERROR", "COMMAND_EXECUTION_ERROR", "REGISTRY_EXCEPTION", "ENGINE_INTERRUPT_PROCESSING_EXCEPTION", "ENGINE_IO_EXCEPTION", "ENGINE_OUTCOME_EXCEPTION", "ENGINE_SWEEPING_OUTPUT_EXCEPTION", "CACHE_NOT_FOUND_EXCEPTION", "ENGINE_ENTITY_UPDATE_EXCEPTION", "SHELL_EXECUTION_EXCEPTION", "TEMPLATE_NOT_FOUND", "AZURE_SERVICE_EXCEPTION", "AZURE_CLIENT_EXCEPTION", "GIT_UNSEEN_REMOTE_HEAD_COMMIT", "TIMEOUT_ENGINE_EXCEPTION", "NO_AVAILABLE_DELEGATES", "NO_INSTALLED_DELEGATES", "DUPLICATE_DELEGATE_EXCEPTION", "GCP_MARKETPLACE_EXCEPTION", "MISSING_DEFAULT_GOOGLE_CREDENTIALS", "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS", "OPTIMISTIC_LOCKING_EXCEPTION", "NG_PIPELINE_EXECUTION_EXCEPTION", "NG_PIPELINE_CREATE_EXCEPTION", "RESOURCE_NOT_FOUND_EXCEPTION", "PMS_INITIALIZE_SDK_EXCEPTION", "UNEXPECTED_SNIPPET_EXCEPTION", "UNEXPECTED_SCHEMA_EXCEPTION", "CONNECTOR_VALIDATION_EXCEPTION", "TIMESCALE_NOT_AVAILABLE", "MIGRATION_EXCEPTION", "REQUEST_PROCESSING_INTERRUPTED", "SECRET_MANAGER_ID_NOT_FOUND", "GCP_SECRET_MANAGER_OPERATION_ERROR", "GCP_SECRET_OPERATION_ERROR", "GIT_OPERATION_ERROR", "TASK_FAILURE_ERROR", "INSTANCE_STATS_PROCESS_ERROR", "INSTANCE_STATS_MIGRATION_ERROR", "DEPLOYMENT_MIGRATION_ERROR", "CG_LICENSE_USAGE_ERROR", "INSTANCE_STATS_AGGREGATION_ERROR", "UNRESOLVED_EXPRESSIONS_ERROR", "KRYO_HANDLER_NOT_FOUND_ERROR", "DELEGATE_ERROR_HANDLER_EXCEPTION", "UNEXPECTED_TYPE_ERROR", "EXCEPTION_HANDLER_NOT_FOUND", "CONNECTOR_NOT_FOUND_EXCEPTION", "GCP_SERVER_ERROR", "HTTP_RESPONSE_EXCEPTION", "SCM_NOT_FOUND_ERROR", "SCM_CONFLICT_ERROR", "SCM_UNPROCESSABLE_ENTITY", "PROCESS_EXECUTION_EXCEPTION", "SCM_UNAUTHORIZED", "SCM_INTERNAL_SERVER_ERROR", "DATA", "CONTEXT", "PR_CREATION_ERROR", "URL_NOT_REACHABLE", "URL_NOT_PROVIDED", "ENGINE_EXPRESSION_EVALUATION_ERROR", "ENGINE_FUNCTOR_ERROR", "JIRA_CLIENT_ERROR", "SCM_NOT_MODIFIED", "APPROVAL_STEP_NG_ERROR", "BUCKET_SERVER_ERROR", "GIT_SYNC_ERROR", "TEMPLATE_EXCEPTION", "ENTITY_REFERENCE_EXCEPTION", "INVALID_INPUT_SET", "INVALID_OVERLAY_INPUT_SET", "RESOURCE_ALREADY_EXISTS", "INVALID_JSON_PAYLOAD", "POLICY_EVALUATION_FAILURE", "POLICY_SET_ERROR", "INVALID_ARTIFACTORY_REGISTRY_REQUEST", "INVALID_NEXUS_REGISTRY_REQUEST", "ENTITY_NOT_FOUND", "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST", "AZURE_AUTHENTICATION_ERROR", "AZURE_CONFIG_ERROR", "DATA_PROCESSING_ERROR", "AWS_IAM_ERROR", "AWS_CF_ERROR", "INVALID_AZURE_AKS_REQUEST", "SERVERLESS_EXECUTION_ERROR" ]
          },
          "level" : {
            "type" : "string",
            "enum" : [ "INFO", "ERROR" ]
          },
          "message" : {
            "type" : "string"
          },
          "exception" : {
            "$ref" : "#/definitions/Throwable"
          },
          "failureTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EXPIRED", "DELEGATE_PROVISIONING", "CONNECTIVITY", "AUTHENTICATION", "VERIFICATION_FAILURE", "APPLICATION_ERROR", "AUTHORIZATION_ERROR", "TIMEOUT_ERROR", "POLICY_EVALUATION_FAILURE" ]
            }
          }
        }
      },
      "SampleErrorMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ErrorMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "sampleMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ScmErrorMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ErrorMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "conflictCommitId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "StackTraceElement" : {
        "type" : "object",
        "properties" : {
          "methodName" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "lineNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "className" : {
            "type" : "string"
          },
          "nativeMethod" : {
            "type" : "boolean"
          }
        }
      },
      "TemplateInputsErrorDTO" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "identifierOfErrorSource" : {
            "type" : "string"
          }
        }
      },
      "TemplateInputsErrorMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ErrorMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "errorYaml" : {
              "type" : "string"
            },
            "errorMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/TemplateInputsErrorDTO"
              }
            }
          }
        } ]
      },
      "Throwable" : {
        "type" : "object",
        "properties" : {
          "cause" : {
            "$ref" : "#/definitions/Throwable"
          },
          "stackTrace" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/StackTraceElement"
            }
          },
          "message" : {
            "type" : "string"
          },
          "localizedMessage" : {
            "type" : "string"
          },
          "suppressed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Throwable"
            }
          }
        }
      },
      "YamlSchemaErrorDTO" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "stageInfo" : {
            "$ref" : "#/definitions/NodeErrorInfo"
          },
          "stepInfo" : {
            "$ref" : "#/definitions/NodeErrorInfo"
          },
          "fqn" : {
            "type" : "string"
          },
          "hintMessage" : {
            "type" : "string"
          }
        }
      },
      "YamlSchemaErrorWrapperDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ErrorMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "schemaErrors" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/YamlSchemaErrorDTO"
              }
            }
          }
        } ]
      },
      "EntityGitDetails" : {
        "type" : "object",
        "properties" : {
          "objectId" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "repoIdentifier" : {
            "type" : "string"
          },
          "rootFolder" : {
            "type" : "string"
          },
          "filePath" : {
            "type" : "string"
          },
          "repoName" : {
            "type" : "string"
          }
        }
      },
      "EnvironmentGroupResponse" : {
        "type" : "object",
        "properties" : {
          "envGroup" : {
            "$ref" : "#/definitions/EnvironmentGroupResponseDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EnvironmentGroupResponseDTO" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          },
          "envIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "envResponse" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvironmentResponse"
            }
          },
          "gitDetails" : {
            "$ref" : "#/definitions/EntityGitDetails"
          }
        }
      },
      "EnvironmentResponse" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "$ref" : "#/definitions/EnvironmentResponseDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EnvironmentResponseDTO" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PreProduction", "Production" ]
          },
          "deleted" : {
            "type" : "boolean"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          },
          "yaml" : {
            "type" : "string"
          }
        }
      },
      "Page" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageEnvironmentGroupResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvironmentGroupResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageEnvironmentGroupResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageEnvironmentGroupResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AuditFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "scopes" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourceScopeDTO"
              }
            },
            "resources" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourceDTO"
              }
            },
            "modules" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
              }
            },
            "actions" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CREATE", "UPDATE", "RESTORE", "DELETE", "UPSERT", "INVITE", "RESEND_INVITE", "REVOKE_INVITE", "ADD_COLLABORATOR", "REMOVE_COLLABORATOR", "CREATE_TOKEN", "REVOKE_TOKEN", "LOGIN", "LOGIN2FA", "UNSUCCESSFUL_LOGIN", "ADD_MEMBERSHIP", "REMOVE_MEMBERSHIP" ]
              }
            },
            "environments" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Environment"
              }
            },
            "principals" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Principal"
              }
            },
            "staticFilter" : {
              "type" : "string",
              "enum" : [ "EXCLUDE_LOGIN_EVENTS", "EXCLUDE_SYSTEM_EVENTS" ]
            },
            "startTime" : {
              "type" : "integer",
              "format" : "int64"
            },
            "endTime" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "CcmConnectorFilter" : {
        "type" : "object",
        "properties" : {
          "featuresEnabled" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BILLING", "OPTIMIZATION", "VISIBILITY" ]
            }
          },
          "awsAccountId" : {
            "type" : "string"
          },
          "azureSubscriptionId" : {
            "type" : "string"
          },
          "azureTenantId" : {
            "type" : "string"
          },
          "gcpProjectId" : {
            "type" : "string"
          },
          "k8sConnectorRef" : {
            "type" : "string"
          }
        }
      },
      "ConnectorFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "connectorNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "connectorIdentifiers" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : {
              "type" : "string"
            },
            "types" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
              }
            },
            "categories" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
              }
            },
            "connectivityStatuses" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN" ]
              }
            },
            "inheritingCredentialsFromDelegate" : {
              "type" : "boolean"
            },
            "ccmConnectorFilter" : {
              "$ref" : "#/definitions/CcmConnectorFilter"
            }
          }
        } ]
      },
      "DelegateFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string",
              "enum" : [ "ENABLED", "WAITING_FOR_APPROVAL", "DISABLED", "DELETED" ]
            },
            "description" : {
              "type" : "string"
            },
            "hostName" : {
              "type" : "string"
            },
            "delegateName" : {
              "type" : "string"
            },
            "delegateType" : {
              "type" : "string"
            },
            "delegateGroupIdentifier" : {
              "type" : "string"
            }
          }
        } ]
      },
      "DelegateProfileFilterProperties" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "approvalRequired" : {
            "type" : "boolean"
          },
          "selectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "filterType" : {
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          }
        }
      },
      "Environment" : {
        "type" : "object",
        "required" : [ "identifier", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "PreProduction", "Production" ]
          },
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "EnvironmentGroupFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "type" : "string"
            },
            "envGroupName" : {
              "type" : "string"
            },
            "envIdentifiers" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "envGroupTags" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NGTag"
              }
            }
          }
        } ]
      },
      "FilesFilterProperties" : {
        "type" : "object",
        "properties" : {
          "fileUsage" : {
            "type" : "string",
            "enum" : [ "MANIFEST_FILE", "CONFIG", "SCRIPT" ]
          },
          "createdBy" : {
            "type" : "string"
          },
          "referencedBy" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "filterType" : {
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          }
        }
      },
      "FilterProperties" : {
        "type" : "object",
        "discriminator" : "filterType",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "filterType" : {
            "type" : "string",
            "enum" : [ "Connector", "DelegateProfile", "Delegate", "PipelineSetup", "PipelineExecution", "Deployment", "Audit", "Template", "EnvironmentGroup", "FileStore", "CCMRecommendation", "Anomaly" ]
          }
        }
      },
      "NGTag" : {
        "type" : "object",
        "required" : [ "key", "value" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PipelineFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "pipelineTags" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NGTag"
              }
            },
            "pipelineIdentifiers" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "name" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            },
            "moduleProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        } ]
      },
      "Principal" : {
        "type" : "object",
        "required" : [ "type" ],
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "USER", "SERVICE", "API_KEY", "SERVICE_ACCOUNT" ]
          },
          "name" : {
            "type" : "string"
          },
          "jwtclaims" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ResourceDTO" : {
        "type" : "object",
        "required" : [ "identifier", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ORGANIZATION", "PROJECT", "USER_GROUP", "SECRET", "RESOURCE_GROUP", "USER", "ROLE", "ROLE_ASSIGNMENT", "PIPELINE", "TRIGGER", "TEMPLATE", "INPUT_SET", "DELEGATE_CONFIGURATION", "DELEGATE_GROUPS", "SERVICE", "ENVIRONMENT", "DELEGATE", "SERVICE_ACCOUNT", "CONNECTOR", "API_KEY", "TOKEN", "DELEGATE_TOKEN", "GOVERNANCE_POLICY", "GOVERNANCE_POLICY_SET" ]
          },
          "identifier" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ResourceScopeDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "TemplateFilterProperties" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FilterProperties"
        }, {
          "type" : "object",
          "properties" : {
            "templateNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "templateIdentifiers" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : {
              "type" : "string"
            },
            "templateEntityTypes" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "Step", "Stage", "Pipeline", "MonitoredService" ]
              }
            },
            "childTypes" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ResponseEnvironmentGroupResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvironmentGroupResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EnvironmentGroupDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          },
          "accountId" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "ResponseEnvironmentGroupDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvironmentGroupDeleteResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseStepCategory" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/StepCategory"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "StepCategory" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "stepsData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/StepData"
            }
          },
          "stepCategories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/StepCategory"
            }
          }
        }
      },
      "StepData" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "APPLY", "SCALE", "STAGE_DEPLOYMENT", "K8sRollingDeploy", "K8sRollingRollback", "HelmDeploy", "HelmRollback", "K8sBGSwapServices", "K8sDelete", "K8sCanaryDelete", "K8sCanaryDeploy", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "CreateStack", "DeleteStack", "RollbackStack", "SHELL_SCRIPT_PROVISIONER", "JIRA", "SERVICENOW", "EMAIL", "BARRIERS", "NEW_RELIC_DEPLOYMENT_MAKER", "TEMPLATIZED_SECRET_MANAGER", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback" ]
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ResponseMapServiceDefinitionTypeListExecutionStrategyType" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "Basic", "Canary", "BlueGreen", "Rolling", "Default" ]
              }
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseString" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "string"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListServiceDefinitionType" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Kubernetes", "NativeHelm", "Ssh", "WinRm", "ServerlessAwsLambda" ]
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ConnectorValidationResult" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN" ]
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ErrorDetail"
            }
          },
          "errorSummary" : {
            "type" : "string"
          },
          "testedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "delegateId" : {
            "type" : "string"
          }
        }
      },
      "ErrorDetail" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "code" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseConnectorValidationResult" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ConnectorValidationResult"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseBoolean" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "boolean"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ConnectorCatalogueItem" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string",
            "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
          },
          "connectors" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
            }
          }
        }
      },
      "ConnectorCatalogueResponse" : {
        "type" : "object",
        "properties" : {
          "catalogue" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ConnectorCatalogueItem"
            }
          }
        }
      },
      "ResponseConnectorCatalogueResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ConnectorCatalogueResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ConnectorStatistics" : {
        "type" : "object",
        "properties" : {
          "typeStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ConnectorTypeStatistics"
            }
          },
          "statusStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ConnectorStatusStatistics"
            }
          }
        }
      },
      "ConnectorStatusStatistics" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN" ]
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ConnectorTypeStatistics" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseConnectorStatistics" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ConnectorStatistics"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AppDynamicsConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "accountname", "controllerUrl" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "accountname" : {
              "type" : "string"
            },
            "controllerUrl" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "passwordRef" : {
              "type" : "string"
            },
            "clientSecretRef" : {
              "type" : "string"
            },
            "clientId" : {
              "type" : "string"
            },
            "authType" : {
              "type" : "string",
              "enum" : [ "UsernamePassword", "ApiClientToken" ]
            }
          }
        } ]
      },
      "ArtifactoryAuthCredentials" : {
        "type" : "object"
      },
      "ArtifactoryAuthentication" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernamePassword", "Anonymous" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ArtifactoryAuthCredentials"
          }
        }
      },
      "ArtifactoryConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "artifactoryServerUrl" ],
          "properties" : {
            "artifactoryServerUrl" : {
              "type" : "string"
            },
            "auth" : {
              "$ref" : "#/definitions/ArtifactoryAuthentication"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ArtifactoryUsernamePasswordAuth" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactoryAuthCredentials"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AwsCodeCommitAuthenticationDTO" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "HTTPS" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AwsCodeCommitCredentialsDTO"
          }
        }
      },
      "AwsCodeCommitConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "authentication" : {
              "$ref" : "#/definitions/AwsCodeCommitAuthenticationDTO"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Repo", "Region" ]
            }
          }
        } ]
      },
      "AwsCodeCommitCredentialsDTO" : {
        "type" : "object"
      },
      "AwsCodeCommitHttpsCredentialsDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsCodeCommitCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "AWSCredentials" ]
            },
            "spec" : {
              "$ref" : "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
            }
          }
        } ]
      },
      "AwsCodeCommitHttpsCredentialsSpecDTO" : {
        "type" : "object"
      },
      "AwsCodeCommitSecretKeyAccessKeyDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "secretKeyRef" ],
          "properties" : {
            "accessKey" : {
              "type" : "string"
            },
            "accessKeyRef" : {
              "type" : "string"
            },
            "secretKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AwsConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credential" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/AwsCredential"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "AwsCredential" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "crossAccountAccess" : {
            "$ref" : "#/definitions/CrossAccountAccess"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "InheritFromDelegate", "ManualConfig", "Irsa" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AwsCredentialSpec"
          }
        }
      },
      "AwsCredentialSpec" : {
        "type" : "object"
      },
      "AwsCurAttributes" : {
        "type" : "object",
        "required" : [ "reportName", "s3BucketName" ],
        "properties" : {
          "reportName" : {
            "type" : "string"
          },
          "s3BucketName" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "s3Prefix" : {
            "type" : "string"
          }
        }
      },
      "AwsKmsConnectorCredential" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "AssumeIAMRole", "AssumeSTSRole", "ManualConfig" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AwsKmsCredentialSpec"
          }
        }
      },
      "AwsKmsConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credential", "kmsArn", "region" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/AwsKmsConnectorCredential"
            },
            "kmsArn" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "default" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "AwsKmsCredentialSpec" : {
        "type" : "object"
      },
      "AwsKmsCredentialSpecAssumeIAM" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsKmsCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "delegateSelectors" ],
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              },
              "maxItems" : 2147483647,
              "minItems" : 1
            }
          }
        } ]
      },
      "AwsKmsCredentialSpecAssumeSTS" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsKmsCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "delegateSelectors", "roleArn" ],
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              },
              "maxItems" : 2147483647,
              "minItems" : 1
            },
            "roleArn" : {
              "type" : "string"
            },
            "externalName" : {
              "type" : "string"
            },
            "assumeStsRoleDuration" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "AwsKmsCredentialSpecManualConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsKmsCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "accessKey", "secretKey" ],
          "properties" : {
            "accessKey" : {
              "type" : "string"
            },
            "secretKey" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AwsManualConfigSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "secretKeyRef" ],
          "properties" : {
            "accessKey" : {
              "type" : "string"
            },
            "accessKeyRef" : {
              "type" : "string"
            },
            "secretKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AwsSMCredentialSpecAssumeIAM" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsSecretManagerCredentialSpec"
        }, {
          "type" : "object"
        } ]
      },
      "AwsSMCredentialSpecAssumeSTS" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsSecretManagerCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "roleArn" ],
          "properties" : {
            "roleArn" : {
              "type" : "string"
            },
            "externalId" : {
              "type" : "string"
            },
            "assumeStsRoleDuration" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "AwsSMCredentialSpecManualConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AwsSecretManagerCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "accessKey", "secretKey" ],
          "properties" : {
            "accessKey" : {
              "type" : "string"
            },
            "secretKey" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AwsSecretManagerCredential" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "AssumeIAMRole", "AssumeSTSRole", "ManualConfig" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AwsSecretManagerCredentialSpec"
          }
        }
      },
      "AwsSecretManagerCredentialSpec" : {
        "type" : "object"
      },
      "AwsSecretManagerDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credential", "region" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/AwsSecretManagerCredential"
            },
            "region" : {
              "type" : "string"
            },
            "secretNamePrefix" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "default" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "AzureAuthCredentialDTO" : {
        "type" : "object"
      },
      "AzureAuthDTO" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Secret", "Certificate" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AzureAuthCredentialDTO"
          }
        }
      },
      "AzureClientKeyCertDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "certificateRef" ],
          "properties" : {
            "certificateRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureClientSecretKeyDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "secretRef" ],
          "properties" : {
            "secretRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "azureEnvironmentType", "credential" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/AzureCredential"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "azureEnvironmentType" : {
              "type" : "string",
              "enum" : [ "AZURE", "AZURE_US_GOVERNMENT" ]
            }
          }
        } ]
      },
      "AzureCredential" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "InheritFromDelegate", "ManualConfig" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AzureCredentialSpec"
          }
        }
      },
      "AzureCredentialSpec" : {
        "type" : "object"
      },
      "AzureInheritFromDelegateDetails" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "auth" ],
          "properties" : {
            "auth" : {
              "readOnly" : true,
              "$ref" : "#/definitions/AzureMSIAuth"
            }
          }
        } ]
      },
      "AzureKeyVaultConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "clientId", "secretKey", "subscription", "tenantId", "vaultName" ],
          "properties" : {
            "clientId" : {
              "type" : "string"
            },
            "secretKey" : {
              "type" : "string"
            },
            "tenantId" : {
              "type" : "string"
            },
            "vaultName" : {
              "type" : "string"
            },
            "subscription" : {
              "type" : "string"
            },
            "azureEnvironmentType" : {
              "type" : "string",
              "enum" : [ "AZURE", "AZURE_US_GOVERNMENT" ]
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "default" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "AzureMSIAuth" : {
        "type" : "object"
      },
      "AzureManualDetails" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "applicationId", "auth", "tenantId" ],
          "properties" : {
            "applicationId" : {
              "type" : "string",
              "readOnly" : true
            },
            "tenantId" : {
              "type" : "string"
            },
            "auth" : {
              "readOnly" : true,
              "$ref" : "#/definitions/AzureAuthDTO"
            }
          }
        } ]
      },
      "AzureRepoApiAccess" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Token" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AzureRepoApiAccessSpecDTO"
          }
        }
      },
      "AzureRepoApiAccessSpecDTO" : {
        "type" : "object"
      },
      "AzureRepoAuthentication" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Http", "Ssh" ]
          },
          "spec" : {
            "$ref" : "#/definitions/AzureRepoCredentialsDTO"
          }
        }
      },
      "AzureRepoConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "validationRepo" : {
              "type" : "string"
            },
            "authentication" : {
              "$ref" : "#/definitions/AzureRepoAuthentication"
            },
            "apiAccess" : {
              "$ref" : "#/definitions/AzureRepoApiAccess"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Account", "Repo" ]
            }
          }
        } ]
      },
      "AzureRepoCredentialsDTO" : {
        "type" : "object"
      },
      "AzureRepoHttpCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureRepoCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "UsernameToken" ]
            },
            "spec" : {
              "$ref" : "#/definitions/AzureRepoHttpCredentialsSpecDTO"
            }
          }
        } ]
      },
      "AzureRepoHttpCredentialsSpecDTO" : {
        "type" : "object"
      },
      "AzureRepoSshCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureRepoCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureRepoTokenSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureRepoApiAccessSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureRepoUsernameToken" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureRepoHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AzureSystemAssignedMSIAuth" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureAuthCredentialDTO"
        }, {
          "type" : "object"
        } ]
      },
      "AzureUserAssignedMSIAuth" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AzureAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "clientId" ],
          "properties" : {
            "clientId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BillingExportSpec" : {
        "type" : "object",
        "required" : [ "containerName", "directoryName", "reportName", "storageAccountName", "subscriptionId" ],
        "properties" : {
          "storageAccountName" : {
            "type" : "string"
          },
          "containerName" : {
            "type" : "string"
          },
          "directoryName" : {
            "type" : "string"
          },
          "reportName" : {
            "type" : "string"
          },
          "subscriptionId" : {
            "type" : "string"
          }
        }
      },
      "BitbucketApiAccess" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernameToken" ]
          },
          "spec" : {
            "$ref" : "#/definitions/BitbucketApiAccessSpecDTO"
          }
        }
      },
      "BitbucketApiAccessSpecDTO" : {
        "type" : "object"
      },
      "BitbucketAuthentication" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Http", "Ssh" ]
          },
          "spec" : {
            "$ref" : "#/definitions/BitbucketCredentialsDTO"
          }
        }
      },
      "BitbucketConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "validationRepo" : {
              "type" : "string"
            },
            "authentication" : {
              "$ref" : "#/definitions/BitbucketAuthentication"
            },
            "apiAccess" : {
              "$ref" : "#/definitions/BitbucketApiAccess"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Account", "Repo" ]
            }
          }
        } ]
      },
      "BitbucketCredentialsDTO" : {
        "type" : "object"
      },
      "BitbucketHttpCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BitbucketCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "UsernamePassword" ]
            },
            "spec" : {
              "$ref" : "#/definitions/BitbucketHttpCredentialsSpecDTO"
            }
          }
        } ]
      },
      "BitbucketHttpCredentialsSpecDTO" : {
        "type" : "object"
      },
      "BitbucketSshCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BitbucketCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BitbucketUsernamePassword" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BitbucketHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BitbucketUsernameTokenApiAccess" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BitbucketApiAccessSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CEAwsConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "crossAccountAccess" ],
          "properties" : {
            "crossAccountAccess" : {
              "$ref" : "#/definitions/CrossAccountAccess"
            },
            "curAttributes" : {
              "$ref" : "#/definitions/AwsCurAttributes"
            },
            "awsAccountId" : {
              "type" : "string"
            },
            "featuresEnabled" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "BILLING", "OPTIMIZATION", "VISIBILITY" ]
              }
            }
          }
        } ]
      },
      "CEAzureConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "subscriptionId", "tenantId" ],
          "properties" : {
            "featuresEnabled" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "BILLING", "OPTIMIZATION", "VISIBILITY" ]
              }
            },
            "tenantId" : {
              "type" : "string"
            },
            "subscriptionId" : {
              "type" : "string"
            },
            "billingExportSpec" : {
              "$ref" : "#/definitions/BillingExportSpec"
            }
          }
        } ]
      },
      "CEKubernetesClusterConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "connectorRef" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "featuresEnabled" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "BILLING", "OPTIMIZATION", "VISIBILITY" ]
              }
            }
          }
        } ]
      },
      "ConnectorActivityDetails" : {
        "type" : "object",
        "properties" : {
          "lastActivityTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ConnectorConfigDTO" : {
        "type" : "object"
      },
      "ConnectorConnectivityDetails" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN" ]
          },
          "errorSummary" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ErrorDetail"
            }
          },
          "testedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastTestedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastConnectedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ConnectorInfoDTO" : {
        "type" : "object",
        "required" : [ "identifier", "name", "spec", "type" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "K8sCluster", "Git", "Splunk", "AppDynamics", "Prometheus", "Dynatrace", "Vault", "AzureKeyVault", "DockerRegistry", "Local", "AwsKms", "GcpKms", "AwsSecretManager", "Gcp", "Aws", "Azure", "Artifactory", "Jira", "Nexus", "Github", "Gitlab", "Bitbucket", "Codecommit", "CEAws", "CEAzure", "GcpCloudCost", "CEK8sCluster", "HttpHelmRepo", "NewRelic", "Datadog", "SumoLogic", "PagerDuty", "CustomHealth", "ServiceNow", "ErrorTracking", "Pdc", "AzureRepo" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ConnectorConfigDTO"
          }
        }
      },
      "ConnectorResponse" : {
        "type" : "object",
        "properties" : {
          "connector" : {
            "$ref" : "#/definitions/ConnectorInfoDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "$ref" : "#/definitions/ConnectorConnectivityDetails"
          },
          "activityDetails" : {
            "$ref" : "#/definitions/ConnectorActivityDetails"
          },
          "harnessManaged" : {
            "type" : "boolean"
          },
          "gitDetails" : {
            "$ref" : "#/definitions/EntityGitDetails"
          },
          "entityValidityDetails" : {
            "$ref" : "#/definitions/EntityValidityDetails"
          }
        }
      },
      "CrossAccountAccess" : {
        "type" : "object",
        "required" : [ "crossAccountRoleArn" ],
        "properties" : {
          "crossAccountRoleArn" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "CustomHealthConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "baseURL", "method" ],
          "properties" : {
            "baseURL" : {
              "type" : "string"
            },
            "headers" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "params" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "method" : {
              "type" : "string",
              "enum" : [ "GET", "POST" ]
            },
            "validationBody" : {
              "type" : "string"
            },
            "validationPath" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CustomHealthKeyAndValue" : {
        "type" : "object",
        "required" : [ "key" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "encryptedValueRef" : {
            "$ref" : "#/definitions/SecretRefData"
          },
          "value" : {
            "type" : "string"
          },
          "valueEncrypted" : {
            "type" : "boolean"
          }
        }
      },
      "DatadogConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "apiKeyRef", "applicationKeyRef", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "applicationKeyRef" : {
              "type" : "string"
            },
            "apiKeyRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "DockerAuthCredentialsDTO" : {
        "type" : "object"
      },
      "DockerAuthenticationDTO" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernamePassword", "Anonymous" ]
          },
          "spec" : {
            "$ref" : "#/definitions/DockerAuthCredentialsDTO"
          }
        }
      },
      "DockerConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "dockerRegistryUrl", "providerType" ],
          "properties" : {
            "dockerRegistryUrl" : {
              "type" : "string"
            },
            "providerType" : {
              "type" : "string",
              "enum" : [ "DockerHub", "Harbor", "Quay", "Other" ]
            },
            "auth" : {
              "$ref" : "#/definitions/DockerAuthenticationDTO"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "DockerUserNamePasswordDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DockerAuthCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "DynatraceConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "apiTokenRef", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "apiTokenRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "EntityValidityDetails" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "invalidYaml" : {
            "type" : "string"
          }
        }
      },
      "ErrorTrackingConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "apiKeyRef", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "apiKeyRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "GcpBillingExportSpec" : {
        "type" : "object",
        "required" : [ "datasetId", "tableId" ],
        "properties" : {
          "datasetId" : {
            "type" : "string"
          },
          "tableId" : {
            "type" : "string"
          }
        }
      },
      "GcpCloudCostConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "projectId", "serviceAccountEmail" ],
          "properties" : {
            "featuresEnabled" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "BILLING", "OPTIMIZATION", "VISIBILITY" ]
              }
            },
            "projectId" : {
              "type" : "string"
            },
            "serviceAccountEmail" : {
              "type" : "string"
            },
            "billingExportSpec" : {
              "$ref" : "#/definitions/GcpBillingExportSpec"
            }
          }
        } ]
      },
      "GcpConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credential" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/GcpConnectorCredential"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "GcpConnectorCredential" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "InheritFromDelegate", "ManualConfig" ]
          },
          "spec" : {
            "$ref" : "#/definitions/GcpCredentialSpec"
          }
        }
      },
      "GcpCredentialSpec" : {
        "type" : "object"
      },
      "GcpKmsConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credentials", "keyName", "keyRing", "projectId", "region" ],
          "properties" : {
            "projectId" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "keyRing" : {
              "type" : "string"
            },
            "keyName" : {
              "type" : "string"
            },
            "credentials" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "default" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "GcpManualDetails" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GcpCredentialSpec"
        }, {
          "type" : "object",
          "required" : [ "secretKeyRef" ],
          "properties" : {
            "secretKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitAuthenticationDTO" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "GitConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "connectionType", "spec", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "validationRepo" : {
              "type" : "string"
            },
            "branchName" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "executeOnDelegate" : {
              "type" : "boolean"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Http", "Ssh" ]
            },
            "connectionType" : {
              "type" : "string",
              "enum" : [ "Account", "Repo" ]
            },
            "spec" : {
              "$ref" : "#/definitions/GitAuthenticationDTO"
            }
          }
        } ]
      },
      "GitHTTPAuthenticationDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitAuthenticationDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitSSHAuthenticationDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitAuthenticationDTO"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubApiAccess" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "GithubApp", "Token" ]
          },
          "spec" : {
            "$ref" : "#/definitions/GithubApiAccessSpecDTO"
          }
        }
      },
      "GithubApiAccessSpecDTO" : {
        "type" : "object"
      },
      "GithubAppSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubApiAccessSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "applicationId", "installationId", "privateKeyRef" ],
          "properties" : {
            "installationId" : {
              "type" : "string"
            },
            "applicationId" : {
              "type" : "string"
            },
            "privateKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubAuthentication" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Http", "Ssh" ]
          },
          "spec" : {
            "$ref" : "#/definitions/GithubCredentialsDTO"
          }
        }
      },
      "GithubConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "validationRepo" : {
              "type" : "string"
            },
            "authentication" : {
              "$ref" : "#/definitions/GithubAuthentication"
            },
            "apiAccess" : {
              "$ref" : "#/definitions/GithubApiAccess"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "executeOnDelegate" : {
              "type" : "boolean"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Account", "Repo" ]
            }
          }
        } ]
      },
      "GithubCredentialsDTO" : {
        "type" : "object"
      },
      "GithubHttpCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "UsernamePassword", "UsernameToken" ]
            },
            "spec" : {
              "$ref" : "#/definitions/GithubHttpCredentialsSpecDTO"
            }
          }
        } ]
      },
      "GithubHttpCredentialsSpecDTO" : {
        "type" : "object"
      },
      "GithubSshCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubTokenSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubApiAccessSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubUsernamePassword" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubUsernameToken" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GithubHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitlabApiAccess" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Token" ]
          },
          "spec" : {
            "$ref" : "#/definitions/GitlabApiAccessSpecDTO"
          }
        }
      },
      "GitlabApiAccessSpecDTO" : {
        "type" : "object"
      },
      "GitlabAuthentication" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Http", "Ssh" ]
          },
          "spec" : {
            "$ref" : "#/definitions/GitlabCredentialsDTO"
          }
        }
      },
      "GitlabConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication", "type", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "validationRepo" : {
              "type" : "string"
            },
            "authentication" : {
              "$ref" : "#/definitions/GitlabAuthentication"
            },
            "apiAccess" : {
              "$ref" : "#/definitions/GitlabApiAccess"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Account", "Repo" ]
            }
          }
        } ]
      },
      "GitlabCredentialsDTO" : {
        "type" : "object"
      },
      "GitlabHttpCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "UsernamePassword", "UsernameToken", "Kerberos" ]
            },
            "spec" : {
              "$ref" : "#/definitions/GitlabHttpCredentialsSpecDTO"
            }
          }
        } ]
      },
      "GitlabHttpCredentialsSpecDTO" : {
        "type" : "object"
      },
      "GitlabKerberos" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "kerberosKeyRef" ],
          "properties" : {
            "kerberosKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitlabSshCredentials" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitlabTokenSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabApiAccessSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitlabUsernamePassword" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitlabUsernameToken" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitlabHttpCredentialsSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "tokenRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "tokenRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HostDTO" : {
        "type" : "object",
        "required" : [ "hostname" ],
        "properties" : {
          "hostname" : {
            "type" : "string"
          },
          "hostAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "HttpHelmAuthCredentialsDTO" : {
        "type" : "object"
      },
      "HttpHelmAuthenticationDTO" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernamePassword", "Anonymous" ]
          },
          "spec" : {
            "$ref" : "#/definitions/HttpHelmAuthCredentialsDTO"
          }
        }
      },
      "HttpHelmConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "helmRepoUrl" ],
          "properties" : {
            "helmRepoUrl" : {
              "type" : "string"
            },
            "auth" : {
              "$ref" : "#/definitions/HttpHelmAuthenticationDTO"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "HttpHelmUsernamePasswordDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/HttpHelmAuthCredentialsDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "JiraConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "jiraUrl", "passwordRef" ],
          "properties" : {
            "jiraUrl" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "KubernetesAuthCredentialDTO" : {
        "type" : "object"
      },
      "KubernetesAuthDTO" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernamePassword", "ClientKeyCert", "ServiceAccount", "OpenIdConnect" ]
          },
          "spec" : {
            "$ref" : "#/definitions/KubernetesAuthCredentialDTO"
          }
        }
      },
      "KubernetesClientKeyCertDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/KubernetesAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "clientCertRef", "clientKeyRef" ],
          "properties" : {
            "caCertRef" : {
              "type" : "string"
            },
            "clientCertRef" : {
              "type" : "string"
            },
            "clientKeyRef" : {
              "type" : "string"
            },
            "clientKeyPassphraseRef" : {
              "type" : "string"
            },
            "clientKeyAlgo" : {
              "type" : "string"
            }
          }
        } ]
      },
      "KubernetesClusterConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "credential" ],
          "properties" : {
            "credential" : {
              "$ref" : "#/definitions/KubernetesCredentialDTO"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "KubernetesClusterDetailsDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/KubernetesCredentialSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "auth", "masterUrl" ],
          "properties" : {
            "masterUrl" : {
              "type" : "string"
            },
            "auth" : {
              "$ref" : "#/definitions/KubernetesAuthDTO"
            }
          }
        } ]
      },
      "KubernetesCredentialDTO" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "InheritFromDelegate", "ManualConfig" ]
          },
          "spec" : {
            "$ref" : "#/definitions/KubernetesCredentialSpecDTO"
          }
        }
      },
      "KubernetesCredentialSpecDTO" : {
        "type" : "object"
      },
      "KubernetesOpenIdConnectDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/KubernetesAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "oidcClientIdRef", "oidcPasswordRef" ],
          "properties" : {
            "oidcIssuerUrl" : {
              "type" : "string"
            },
            "oidcUsername" : {
              "type" : "string"
            },
            "oidcUsernameRef" : {
              "type" : "string"
            },
            "oidcClientIdRef" : {
              "type" : "string"
            },
            "oidcPasswordRef" : {
              "type" : "string"
            },
            "oidcSecretRef" : {
              "type" : "string"
            },
            "oidcScopes" : {
              "type" : "string"
            }
          }
        } ]
      },
      "KubernetesServiceAccountDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/KubernetesAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "serviceAccountTokenRef" ],
          "properties" : {
            "serviceAccountTokenRef" : {
              "type" : "string"
            },
            "caCertRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "KubernetesUserNamePasswordDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/KubernetesAuthCredentialDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "LocalConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "properties" : {
            "default" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "NewRelicConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "apiKeyRef", "newRelicAccountId", "url" ],
          "properties" : {
            "newRelicAccountId" : {
              "type" : "string"
            },
            "url" : {
              "type" : "string"
            },
            "apiKeyRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "NexusAuthCredentials" : {
        "type" : "object"
      },
      "NexusAuthentication" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "UsernamePassword", "Anonymous" ]
          },
          "spec" : {
            "$ref" : "#/definitions/NexusAuthCredentials"
          }
        }
      },
      "NexusConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "nexusServerUrl", "version" ],
          "properties" : {
            "nexusServerUrl" : {
              "type" : "string"
            },
            "version" : {
              "type" : "string"
            },
            "auth" : {
              "$ref" : "#/definitions/NexusAuthentication"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "NexusUsernamePasswordAuth" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NexusAuthCredentials"
        }, {
          "type" : "object",
          "required" : [ "passwordRef" ],
          "properties" : {
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PagerDutyConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "apiTokenRef" ],
          "properties" : {
            "apiTokenRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PhysicalDataCenterConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "properties" : {
            "hosts" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HostDTO"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PrometheusConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ResponseListConnectorResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ConnectorResponse"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SecretRefData" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "account", "org", "project", "unknown" ]
          },
          "decryptedValue" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "null" : {
            "type" : "boolean"
          }
        }
      },
      "ServiceNowConnector" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "passwordRef", "serviceNowUrl" ],
          "properties" : {
            "serviceNowUrl" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            },
            "usernameRef" : {
              "type" : "string"
            },
            "passwordRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "SplunkConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "accountId", "passwordRef", "splunkUrl" ],
          "properties" : {
            "splunkUrl" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            },
            "accountId" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "passwordRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SumoLogicConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "accessIdRef", "accessKeyRef", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "accessIdRef" : {
              "type" : "string"
            },
            "accessKeyRef" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "VaultConnectorDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ConnectorConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "renewalIntervalMinutes", "vaultUrl" ],
          "properties" : {
            "authToken" : {
              "type" : "string"
            },
            "basePath" : {
              "type" : "string"
            },
            "vaultUrl" : {
              "type" : "string"
            },
            "renewalIntervalMinutes" : {
              "type" : "integer",
              "format" : "int64"
            },
            "secretEngineManuallyConfigured" : {
              "type" : "boolean"
            },
            "secretEngineName" : {
              "type" : "string"
            },
            "appRoleId" : {
              "type" : "string"
            },
            "secretId" : {
              "type" : "string"
            },
            "secretEngineVersion" : {
              "type" : "integer",
              "format" : "int32"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "namespace" : {
              "type" : "string"
            },
            "sinkPath" : {
              "type" : "string"
            },
            "useVaultAgent" : {
              "type" : "boolean"
            },
            "useAwsIam" : {
              "type" : "boolean"
            },
            "awsRegion" : {
              "type" : "string"
            },
            "vaultAwsIamRole" : {
              "type" : "string"
            },
            "xvaultAwsIamServerId" : {
              "type" : "string"
            },
            "useK8sAuth" : {
              "type" : "boolean"
            },
            "vaultK8sAuthRole" : {
              "type" : "string"
            },
            "serviceAccountTokenPath" : {
              "type" : "string"
            },
            "default" : {
              "type" : "boolean"
            },
            "accessType" : {
              "type" : "string",
              "enum" : [ "APP_ROLE", "TOKEN", "VAULT_AGENT", "AWS_IAM", "K8s_AUTH" ]
            },
            "readOnly" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "FieldValues" : {
        "type" : "object",
        "properties" : {
          "fieldValues" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "ResponseFieldValues" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FieldValues"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseConnectorResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ConnectorResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Connector" : {
        "type" : "object",
        "properties" : {
          "connector" : {
            "$ref" : "#/definitions/ConnectorInfoDTO"
          }
        }
      },
      "PageConnectorResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ConnectorResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageConnectorResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageConnectorResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AvailabilityRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "CustomRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object"
        } ]
      },
      "DurationRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            }
          }
        } ]
      },
      "FeatureRestrictionDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "TEST1", "TEST2", "TEST3", "TEST4", "TEST5", "TEST6", "TEST7", "PERSPECTIVES", "CCM_K8S_CLUSTERS", "CCM_AUTOSTOPPING_RULES", "MULTIPLE_ORGANIZATIONS", "MULTIPLE_PROJECTS", "INTEGRATED_APPROVALS_WITH_HARNESS_UI", "INTEGRATED_APPROVALS_WITH_JIRA", "SECRET_MANAGERS", "DEPLOYMENTS", "INITIAL_DEPLOYMENTS", "DEPLOYMENTS_PER_MONTH", "SERVICES", "BUILDS", "SAML_SUPPORT", "OAUTH_SUPPORT", "LDAP_SUPPORT", "TWO_FACTOR_AUTH_SUPPORT", "CUSTOM_ROLES", "CUSTOM_RESOURCE_GROUPS", "MAX_TOTAL_BUILDS", "MAX_BUILDS_PER_MONTH", "ACTIVE_COMMITTERS", "TEST_INTELLIGENCE", "TEMPLATE_SERVICE", "K8S_BG_SWAP_SERVICES", "K8S_BLUE_GREEN_DEPLOY", "K8S_APPLY", "K8S_DELETE", "K8S_CANARY_DELETE", "K8S_ROLLING_DEPLOY", "K8S_CANARY_DEPLOY", "K8S_SCALE", "K8S_ROLLING_ROLLBACK", "TERRAFORM_APPLY", "TERRAFORM_PLAN", "TERRAFORM_DESTROY", "TERRAFORM_ROLLBACK", "INTEGRATED_APPROVALS_WITH_SERVICE_NOW", "CREATE_STACK", "DELETE_STACK", "ROLLBACK_STACK", "SECURITY", "DEVELOPERS", "MONTHLY_ACTIVE_USERS" ]
          },
          "description" : {
            "type" : "string"
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "allowed" : {
            "type" : "boolean"
          },
          "restrictionType" : {
            "type" : "string",
            "enum" : [ "AVAILABILITY", "STATIC_LIMIT", "RATE_LIMIT", "CUSTOM", "DURATION", "LICENSE_RATE_LIMIT", "LICENSE_STATIC_LIMIT" ]
          },
          "restriction" : {
            "$ref" : "#/definitions/RestrictionDTO"
          }
        }
      },
      "LicenseRateLimitRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "fieldName" : {
              "type" : "string"
            },
            "count" : {
              "type" : "integer",
              "format" : "int64"
            },
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            }
          }
        } ]
      },
      "LicenseStaticLimitRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "fieldName" : {
              "type" : "string"
            },
            "count" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "RateLimitRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "count" : {
              "type" : "integer",
              "format" : "int64"
            },
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            }
          }
        } ]
      },
      "ResponseFeatureRestrictionDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FeatureRestrictionDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RestrictionDTO" : {
        "type" : "object",
        "discriminator" : "restrictionType"
      },
      "StaticLimitRestrictionDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "count" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "TimeUnit" : {
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "string",
            "enum" : [ "NANOS", "MICROS", "MILLIS", "SECONDS", "MINUTES", "HOURS", "HALF_DAYS", "DAYS", "WEEKS", "MONTHS", "YEARS", "DECADES", "CENTURIES", "MILLENNIA", "ERAS", "FOREVER" ]
          },
          "numberOfUnits" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "FeatureRestrictionDetailRequestDTO" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "TEST1", "TEST2", "TEST3", "TEST4", "TEST5", "TEST6", "TEST7", "PERSPECTIVES", "CCM_K8S_CLUSTERS", "CCM_AUTOSTOPPING_RULES", "MULTIPLE_ORGANIZATIONS", "MULTIPLE_PROJECTS", "INTEGRATED_APPROVALS_WITH_HARNESS_UI", "INTEGRATED_APPROVALS_WITH_JIRA", "SECRET_MANAGERS", "DEPLOYMENTS", "INITIAL_DEPLOYMENTS", "DEPLOYMENTS_PER_MONTH", "SERVICES", "BUILDS", "SAML_SUPPORT", "OAUTH_SUPPORT", "LDAP_SUPPORT", "TWO_FACTOR_AUTH_SUPPORT", "CUSTOM_ROLES", "CUSTOM_RESOURCE_GROUPS", "MAX_TOTAL_BUILDS", "MAX_BUILDS_PER_MONTH", "ACTIVE_COMMITTERS", "TEST_INTELLIGENCE", "TEMPLATE_SERVICE", "K8S_BG_SWAP_SERVICES", "K8S_BLUE_GREEN_DEPLOY", "K8S_APPLY", "K8S_DELETE", "K8S_CANARY_DELETE", "K8S_ROLLING_DEPLOY", "K8S_CANARY_DEPLOY", "K8S_SCALE", "K8S_ROLLING_ROLLBACK", "TERRAFORM_APPLY", "TERRAFORM_PLAN", "TERRAFORM_DESTROY", "TERRAFORM_ROLLBACK", "INTEGRATED_APPROVALS_WITH_SERVICE_NOW", "CREATE_STACK", "DELETE_STACK", "ROLLBACK_STACK", "SECURITY", "DEVELOPERS", "MONTHLY_ACTIVE_USERS" ]
          }
        }
      },
      "ResponseListFeatureRestrictionDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FeatureRestrictionDetailsDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FeatureRestrictionDetailListRequestDTO" : {
        "type" : "object",
        "required" : [ "names" ],
        "properties" : {
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "TEST1", "TEST2", "TEST3", "TEST4", "TEST5", "TEST6", "TEST7", "PERSPECTIVES", "CCM_K8S_CLUSTERS", "CCM_AUTOSTOPPING_RULES", "MULTIPLE_ORGANIZATIONS", "MULTIPLE_PROJECTS", "INTEGRATED_APPROVALS_WITH_HARNESS_UI", "INTEGRATED_APPROVALS_WITH_JIRA", "SECRET_MANAGERS", "DEPLOYMENTS", "INITIAL_DEPLOYMENTS", "DEPLOYMENTS_PER_MONTH", "SERVICES", "BUILDS", "SAML_SUPPORT", "OAUTH_SUPPORT", "LDAP_SUPPORT", "TWO_FACTOR_AUTH_SUPPORT", "CUSTOM_ROLES", "CUSTOM_RESOURCE_GROUPS", "MAX_TOTAL_BUILDS", "MAX_BUILDS_PER_MONTH", "ACTIVE_COMMITTERS", "TEST_INTELLIGENCE", "TEMPLATE_SERVICE", "K8S_BG_SWAP_SERVICES", "K8S_BLUE_GREEN_DEPLOY", "K8S_APPLY", "K8S_DELETE", "K8S_CANARY_DELETE", "K8S_ROLLING_DEPLOY", "K8S_CANARY_DEPLOY", "K8S_SCALE", "K8S_ROLLING_ROLLBACK", "TERRAFORM_APPLY", "TERRAFORM_PLAN", "TERRAFORM_DESTROY", "TERRAFORM_ROLLBACK", "INTEGRATED_APPROVALS_WITH_SERVICE_NOW", "CREATE_STACK", "DELETE_STACK", "ROLLBACK_STACK", "SECURITY", "DEVELOPERS", "MONTHLY_ACTIVE_USERS" ]
            }
          }
        }
      },
      "AvailabilityRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "enabled" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "CustomRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "DurationRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            }
          }
        } ]
      },
      "FeatureRestrictionMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "enum" : [ "TEST1", "TEST2", "TEST3", "TEST4", "TEST5", "TEST6", "TEST7", "PERSPECTIVES", "CCM_K8S_CLUSTERS", "CCM_AUTOSTOPPING_RULES", "MULTIPLE_ORGANIZATIONS", "MULTIPLE_PROJECTS", "INTEGRATED_APPROVALS_WITH_HARNESS_UI", "INTEGRATED_APPROVALS_WITH_JIRA", "SECRET_MANAGERS", "DEPLOYMENTS", "INITIAL_DEPLOYMENTS", "DEPLOYMENTS_PER_MONTH", "SERVICES", "BUILDS", "SAML_SUPPORT", "OAUTH_SUPPORT", "LDAP_SUPPORT", "TWO_FACTOR_AUTH_SUPPORT", "CUSTOM_ROLES", "CUSTOM_RESOURCE_GROUPS", "MAX_TOTAL_BUILDS", "MAX_BUILDS_PER_MONTH", "ACTIVE_COMMITTERS", "TEST_INTELLIGENCE", "TEMPLATE_SERVICE", "K8S_BG_SWAP_SERVICES", "K8S_BLUE_GREEN_DEPLOY", "K8S_APPLY", "K8S_DELETE", "K8S_CANARY_DELETE", "K8S_ROLLING_DEPLOY", "K8S_CANARY_DEPLOY", "K8S_SCALE", "K8S_ROLLING_ROLLBACK", "TERRAFORM_APPLY", "TERRAFORM_PLAN", "TERRAFORM_DESTROY", "TERRAFORM_ROLLBACK", "INTEGRATED_APPROVALS_WITH_SERVICE_NOW", "CREATE_STACK", "DELETE_STACK", "ROLLBACK_STACK", "SECURITY", "DEVELOPERS", "MONTHLY_ACTIVE_USERS" ]
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "edition" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "FREE", "TEAM", "ENTERPRISE" ]
          },
          "restrictionMetadata" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/RestrictionMetadataDTO"
            }
          }
        }
      },
      "LicenseRateLimitRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "fieldName" : {
              "type" : "string"
            },
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            }
          }
        } ]
      },
      "LicenseStaticLimitRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "fieldName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RateLimitRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "timeUnit" : {
              "$ref" : "#/definitions/TimeUnit"
            },
            "allowedIfEqual" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ResponseListFeatureRestrictionMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FeatureRestrictionMetadataDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RestrictionMetadataDTO" : {
        "type" : "object",
        "discriminator" : "restrictionType",
        "properties" : {
          "restrictionType" : {
            "type" : "string",
            "enum" : [ "AVAILABILITY", "STATIC_LIMIT", "RATE_LIMIT", "CUSTOM", "DURATION", "LICENSE_RATE_LIMIT", "LICENSE_STATIC_LIMIT" ]
          }
        }
      },
      "StaticLimitRestrictionMetadataDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/RestrictionMetadataDTO"
        }, {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "integer",
              "format" : "int64"
            },
            "allowedIfEqual" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ResponseFeatureRestrictionMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FeatureRestrictionMetadataDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FilterDTO" : {
        "type" : "object",
        "required" : [ "filterProperties", "identifier", "name" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "filterProperties" : {
            "$ref" : "#/definitions/FilterProperties"
          },
          "filterVisibility" : {
            "type" : "string",
            "enum" : [ "EveryOne", "OnlyCreator" ]
          }
        }
      },
      "ResponseFilterDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FilterDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageFilterDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FilterDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageFilterDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageFilterDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ConnectedArgoGitOpsInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitOpsInfoDTO"
        }, {
          "type" : "object",
          "required" : [ "adapterUrl" ],
          "properties" : {
            "adapterUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitOpsInfoDTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "CONNECTED_ARGO_PROVIDER", "MANAGED_ARGO_PROVIDER" ]
          }
        }
      },
      "GitopsProviderResponse" : {
        "type" : "object",
        "required" : [ "identifier", "name", "spec" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "spec" : {
            "$ref" : "#/definitions/GitOpsInfoDTO"
          }
        }
      },
      "ManagedArgoGitOpsInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/GitOpsInfoDTO"
        }, {
          "type" : "object",
          "required" : [ "namespace" ],
          "properties" : {
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ResponseGitopsProviderResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitopsProviderResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitOpsProvider" : {
        "type" : "object",
        "required" : [ "identifier", "name", "spec" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "spec" : {
            "$ref" : "#/definitions/GitOpsInfoDTO"
          }
        }
      },
      "PageGitopsProviderResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitopsProviderResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageGitopsProviderResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageGitopsProviderResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitBranchDTO" : {
        "type" : "object",
        "properties" : {
          "branchName" : {
            "type" : "string"
          },
          "branchSyncStatus" : {
            "type" : "string",
            "enum" : [ "SYNCED", "SYNCING", "UNSYNCED" ]
          }
        }
      },
      "GitBranchListDTO" : {
        "type" : "object",
        "properties" : {
          "defaultBranch" : {
            "$ref" : "#/definitions/GitBranchDTO"
          },
          "branches" : {
            "$ref" : "#/definitions/PageGitBranchDTO"
          }
        }
      },
      "PageGitBranchDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitBranchDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseGitBranchListDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitBranchListDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EntityReference" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "repoIdentifier" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "default" : {
            "type" : "boolean"
          },
          "identifier" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          }
        }
      },
      "GitSyncEntityDTO" : {
        "type" : "object",
        "properties" : {
          "entityName" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          },
          "entityIdentifier" : {
            "type" : "string"
          },
          "gitConnectorId" : {
            "type" : "string"
          },
          "repoUrl" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "folderPath" : {
            "type" : "string"
          },
          "entityGitPath" : {
            "type" : "string"
          },
          "entityReference" : {
            "$ref" : "#/definitions/EntityReference"
          },
          "accountId" : {
            "type" : "string"
          },
          "lastCommitId" : {
            "type" : "string"
          },
          "entityUrl" : {
            "type" : "string"
          },
          "repoProvider" : {
            "type" : "string",
            "enum" : [ "github", "gitlab", "bitbucket", "azure", "unknown" ]
          }
        }
      },
      "GitSyncEntityListDTO" : {
        "type" : "object",
        "properties" : {
          "entityType" : {
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          },
          "count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "gitSyncEntities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncEntityDTO"
            }
          }
        }
      },
      "IdentifierRef" : {
        "allOf" : [ {
          "$ref" : "#/definitions/EntityReference"
        }, {
          "type" : "object",
          "properties" : {
            "scope" : {
              "type" : "string",
              "enum" : [ "account", "org", "project", "unknown" ]
            },
            "metadata" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "isDefault" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "InputSetReference" : {
        "allOf" : [ {
          "$ref" : "#/definitions/EntityReference"
        }, {
          "type" : "object",
          "properties" : {
            "pipelineIdentifier" : {
              "type" : "string"
            },
            "isDefault" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "PageGitSyncEntityListDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncEntityListDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageGitSyncEntityListDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageGitSyncEntityListDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitSyncRepoFiles" : {
        "type" : "object",
        "properties" : {
          "gitSyncConfigIdentifier" : {
            "type" : "string"
          },
          "gitSyncEntityLists" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncEntityListDTO"
            }
          }
        }
      },
      "GitSyncRepoFilesList" : {
        "type" : "object",
        "properties" : {
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "gitSyncRepoFilesList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncRepoFiles"
            }
          }
        }
      },
      "ResponseGitSyncRepoFilesList" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitSyncRepoFilesList"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitEntityFilterProperties" : {
        "type" : "object",
        "properties" : {
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "gitSyncConfigIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "entityTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
            }
          },
          "searchTerm" : {
            "type" : "string"
          }
        }
      },
      "ResponseListGitSyncEntityListDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncEntityListDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitEntityBranchFilterSummaryProperties" : {
        "type" : "object",
        "properties" : {
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "entityTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
            }
          },
          "searchTerm" : {
            "type" : "string"
          }
        }
      },
      "ResponseTriggerFullSyncResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/TriggerFullSyncResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TriggerFullSyncResponseDTO" : {
        "type" : "object",
        "properties" : {
          "isFullSyncTriggered" : {
            "type" : "boolean"
          }
        }
      },
      "GitFullSyncConfigDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "baseBranch" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "prTitle" : {
            "type" : "string"
          },
          "createPullRequest" : {
            "type" : "boolean"
          },
          "repoIdentifier" : {
            "type" : "string"
          },
          "targetBranch" : {
            "type" : "string"
          },
          "rootFolder" : {
            "type" : "string"
          },
          "newBranch" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseGitFullSyncConfigDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitFullSyncConfigDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitFullSyncConfigRequestDTO" : {
        "type" : "object",
        "required" : [ "branch", "repoIdentifier", "rootFolder" ],
        "properties" : {
          "branch" : {
            "type" : "string"
          },
          "repoIdentifier" : {
            "type" : "string"
          },
          "rootFolder" : {
            "type" : "string"
          },
          "baseBranch" : {
            "type" : "string"
          },
          "createPullRequest" : {
            "type" : "boolean"
          },
          "targetBranch" : {
            "type" : "string"
          },
          "prTitle" : {
            "type" : "string"
          },
          "newBranch" : {
            "type" : "boolean"
          }
        }
      },
      "GitFullSyncEntityInfoDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "filePath" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          },
          "syncStatus" : {
            "type" : "string",
            "enum" : [ "QUEUED", "SUCCESS", "FAILED", "OVERRIDDEN" ]
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "repoName" : {
            "type" : "string"
          },
          "repoUrl" : {
            "type" : "string"
          },
          "rootFolder" : {
            "type" : "string"
          },
          "retryCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      },
      "PageGitFullSyncEntityInfoDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitFullSyncEntityInfoDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageGitFullSyncEntityInfoDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageGitFullSyncEntityInfoDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitFullSyncEntityInfoFilterKeys" : {
        "type" : "object",
        "properties" : {
          "entityTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
            }
          },
          "syncStatus" : {
            "type" : "string",
            "enum" : [ "QUEUED", "SUCCESS", "FAILED", "OVERRIDDEN" ]
          }
        }
      },
      "GitSyncSettingsDTO" : {
        "type" : "object",
        "required" : [ "executeOnDelegate", "orgIdentifier", "projectIdentifier" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "executeOnDelegate" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseGitSyncSettingsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitSyncSettingsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "CreatePRDTO" : {
        "type" : "object",
        "properties" : {
          "prNumber" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseCreatePRDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/CreatePRDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitPRCreateRequest" : {
        "type" : "object",
        "required" : [ "sourceBranch", "targetBranch", "title", "yamlGitConfigRef" ],
        "properties" : {
          "sourceBranch" : {
            "type" : "string"
          },
          "targetBranch" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "yamlGitConfigRef" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "useUserFromToken" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseListString" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitFileContent" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          }
        }
      },
      "ResponseGitFileContent" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitFileContent"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseSaasGitDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/SaasGitDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SaasGitDTO" : {
        "type" : "object",
        "properties" : {
          "saasGit" : {
            "type" : "boolean"
          }
        }
      },
      "GitRepositoryResponseDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "ResponseListGitRepositoryResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitRepositoryResponseDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitBranchDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "GitBranchesResponseDTO" : {
        "type" : "object",
        "properties" : {
          "branches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitBranchDetailsDTO"
            }
          },
          "defaultBranch" : {
            "$ref" : "#/definitions/GitBranchDetailsDTO"
          }
        }
      },
      "ResponseGitBranchesResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitBranchesResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GetFileResponse" : {
        "type" : "object"
      },
      "ResponseGetFileResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GetFileResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitSyncConfig" : {
        "type" : "object",
        "required" : [ "gitConnectorType" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "gitConnectorRef" : {
            "type" : "string"
          },
          "repo" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "gitConnectorType" : {
            "type" : "string",
            "enum" : [ "Github", "Gitlab", "Bitbucket" ]
          },
          "gitSyncFolderConfigDTOs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncFolderConfigDTO"
            }
          }
        }
      },
      "GitSyncFolderConfigDTO" : {
        "type" : "object",
        "properties" : {
          "rootFolder" : {
            "type" : "string"
          },
          "isDefault" : {
            "type" : "boolean"
          }
        }
      },
      "GitEnabledDTO" : {
        "type" : "object",
        "properties" : {
          "connectivityMode" : {
            "type" : "string",
            "enum" : [ "MANAGER", "DELEGATE" ]
          },
          "gitSyncEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "GitSyncErrorAggregateByCommitDTO" : {
        "type" : "object",
        "properties" : {
          "gitCommitId" : {
            "type" : "string"
          },
          "failedCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "repoId" : {
            "type" : "string"
          },
          "branchName" : {
            "type" : "string"
          },
          "commitMessage" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "errorsForSummaryView" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncErrorDTO"
            }
          }
        }
      },
      "GitSyncErrorDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "repoUrl" : {
            "type" : "string"
          },
          "repoId" : {
            "type" : "string"
          },
          "branchName" : {
            "type" : "string"
          },
          "scopes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Scope"
            }
          },
          "changeType" : {
            "type" : "string",
            "enum" : [ "ADD", "RENAME", "MODIFY", "DELETE", "NONE" ]
          },
          "completeFilePath" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          },
          "failureReason" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DISCARDED", "EXPIRED", "RESOLVED", "OVERRIDDEN" ]
          },
          "errorType" : {
            "type" : "string",
            "enum" : [ "GIT_TO_HARNESS", "CONNECTIVITY_ISSUE", "FULL_SYNC" ]
          },
          "additionalErrorDetails" : {
            "$ref" : "#/definitions/GitSyncErrorDetailsDTO"
          },
          "repoProvider" : {
            "type" : "string",
            "enum" : [ "github", "gitlab", "bitbucket", "azure", "unknown" ]
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "GitSyncErrorDetailsDTO" : {
        "type" : "object"
      },
      "PageGitSyncErrorAggregateByCommitDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncErrorAggregateByCommitDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageGitSyncErrorAggregateByCommitDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageGitSyncErrorAggregateByCommitDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Scope" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          }
        }
      },
      "PageGitSyncErrorDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GitSyncErrorDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageGitSyncErrorDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageGitSyncErrorDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GitSyncErrorCountDTO" : {
        "type" : "object",
        "properties" : {
          "gitToHarnessErrorCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "connectivityErrorCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseGitSyncErrorCountDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GitSyncErrorCountDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "CDModuleLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ModuleLicenseDTO"
        }, {
          "type" : "object",
          "properties" : {
            "cdLicenseType" : {
              "type" : "string",
              "enum" : [ "SERVICES", "SERVICE_INSTANCES" ]
            },
            "workloads" : {
              "type" : "integer",
              "format" : "int32"
            },
            "serviceInstances" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "CEModuleLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ModuleLicenseDTO"
        }, {
          "type" : "object",
          "properties" : {
            "spendLimit" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "CFModuleLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ModuleLicenseDTO"
        }, {
          "type" : "object",
          "properties" : {
            "numberOfUsers" : {
              "type" : "integer",
              "format" : "int32"
            },
            "numberOfClientMAUs" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "CIModuleLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ModuleLicenseDTO"
        }, {
          "type" : "object",
          "properties" : {
            "numberOfCommitters" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "CVModuleLicenseDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ModuleLicenseDTO"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "ModuleLicenseDTO" : {
        "type" : "object",
        "discriminator" : "moduleType",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "edition" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "FREE", "TEAM", "ENTERPRISE" ]
          },
          "licenseType" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "DELETED", "EXPIRED" ]
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expiryTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "trialExtended" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseListModuleLicenseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ModuleLicenseDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "CDLicenseSummaryDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/LicensesWithSummaryDTO"
        }, {
          "type" : "object",
          "properties" : {
            "totalWorkload" : {
              "type" : "integer",
              "format" : "int32"
            },
            "totalServiceInstances" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "CELicenseSummaryDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/LicensesWithSummaryDTO"
        }, {
          "type" : "object",
          "properties" : {
            "totalSpendLimit" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ]
      },
      "CFLicenseSummaryDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/LicensesWithSummaryDTO"
        }, {
          "type" : "object",
          "properties" : {
            "totalClientMAUs" : {
              "type" : "integer",
              "format" : "int64"
            },
            "totalFeatureFlagUnits" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "CILicenseSummaryDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/LicensesWithSummaryDTO"
        }, {
          "type" : "object",
          "properties" : {
            "totalDevelopers" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "CVLicenseSummaryDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/LicensesWithSummaryDTO"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "LicensesWithSummaryDTO" : {
        "type" : "object",
        "discriminator" : "moduleType",
        "properties" : {
          "edition" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "FREE", "TEAM", "ENTERPRISE" ]
          },
          "licenseType" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID" ]
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "maxExpiryTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseLicensesWithSummaryDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/LicensesWithSummaryDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AccountLicenseDTO" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "moduleLicenses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/ModuleLicenseDTO"
            }
          },
          "allModuleLicenses" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ModuleLicenseDTO"
              }
            }
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseAccountLicenseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AccountLicenseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseModuleLicenseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ModuleLicenseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "StartTrialDTO" : {
        "type" : "object",
        "required" : [ "edition", "moduleType" ],
        "properties" : {
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "edition" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "FREE", "TEAM", "ENTERPRISE" ]
          }
        }
      },
      "EditionActionDTO" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "START_FREE", "START_TRIAL", "EXTEND_TRIAL", "SUBSCRIBE", "UPGRADE", "CONTACT_SALES", "CONTACT_SUPPORT", "MANAGE", "DISABLED_BY_TEAM", "DISABLED_BY_ENTERPRISE" ]
          },
          "reason" : {
            "type" : "string"
          }
        }
      },
      "ResponseMapEditionSetEditionActionDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/EditionActionDTO"
              }
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseMapModuleTypeLong" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "LicenseUsageDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "module" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseLicenseUsageDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/LicenseUsageDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ReferenceDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          }
        }
      },
      "ResponseServiceUsageDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceUsageDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceUsageDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "module" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "activeServices" : {
            "$ref" : "#/definitions/UsageDataDTO"
          },
          "activeServiceInstances" : {
            "$ref" : "#/definitions/UsageDataDTO"
          },
          "cdLicenseType" : {
            "type" : "string",
            "enum" : [ "SERVICES", "SERVICE_INSTANCES" ]
          },
          "serviceLicenses" : {
            "$ref" : "#/definitions/UsageDataDTO"
          }
        }
      },
      "UsageDataDTO" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "displayName" : {
            "type" : "string"
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ReferenceDTO"
            }
          }
        }
      },
      "ResponseServiceInstanceUsageDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceInstanceUsageDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceInstanceUsageDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "module" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "activeServices" : {
            "$ref" : "#/definitions/UsageDataDTO"
          },
          "activeServiceInstances" : {
            "$ref" : "#/definitions/UsageDataDTO"
          },
          "cdLicenseType" : {
            "type" : "string",
            "enum" : [ "SERVICES", "SERVICE_INSTANCES" ]
          }
        }
      },
      "ResourceGroup" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ResponseRoleAssignmentAggregateResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/RoleAssignmentAggregateResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Role" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "allowedScopeLevels" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "RoleAssignment" : {
        "type" : "object",
        "required" : [ "principal", "resourceGroupIdentifier", "roleIdentifier" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "resourceGroupIdentifier" : {
            "type" : "string"
          },
          "roleIdentifier" : {
            "type" : "string"
          },
          "principal" : {
            "$ref" : "#/definitions/Principal"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "managed" : {
            "type" : "boolean"
          }
        }
      },
      "RoleAssignmentAggregateResponse" : {
        "type" : "object",
        "properties" : {
          "roleAssignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignment"
            }
          },
          "scope" : {
            "$ref" : "#/definitions/Scope"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleResponse"
            }
          },
          "resourceGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResourceGroup"
            }
          }
        }
      },
      "RoleResponse" : {
        "type" : "object",
        "required" : [ "role", "scope" ],
        "properties" : {
          "role" : {
            "$ref" : "#/definitions/Role"
          },
          "scope" : {
            "$ref" : "#/definitions/Scope"
          },
          "harnessManaged" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "RoleAssignmentFilter" : {
        "type" : "object",
        "properties" : {
          "resourceGroupFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "roleFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "principalTypeFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "USER", "USER_GROUP", "SERVICE", "API_KEY", "SERVICE_ACCOUNT" ]
            }
          },
          "principalScopeLevelFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "principalFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/Principal"
            }
          },
          "harnessManagedFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "boolean"
            }
          },
          "disabledFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "boolean"
            }
          }
        }
      },
      "PageRoleAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignmentResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageRoleAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageRoleAssignmentResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RoleAssignmentResponse" : {
        "type" : "object",
        "required" : [ "roleAssignment", "scope" ],
        "properties" : {
          "roleAssignment" : {
            "$ref" : "#/definitions/RoleAssignment"
          },
          "scope" : {
            "$ref" : "#/definitions/Scope"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "harnessManaged" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseListRoleAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignmentResponse"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RoleAssignmentCreateRequest" : {
        "type" : "object",
        "properties" : {
          "roleAssignments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignment"
            }
          }
        }
      },
      "ResponseRoleAssignmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/RoleAssignmentResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "LoginTypeResponse" : {
        "type" : "object",
        "properties" : {
          "authenticationMechanism" : {
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          },
          "showCaptcha" : {
            "type" : "boolean"
          },
          "defaultExperience" : {
            "type" : "string",
            "enum" : [ "NG", "CG" ]
          },
          "ssorequest" : {
            "$ref" : "#/definitions/SSORequest"
          },
          "oauthEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "RestResponse" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "type" : "object"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "RestResponseLoginTypeResponse" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/LoginTypeResponse"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "SSORequest" : {
        "type" : "object",
        "properties" : {
          "oauthProviderType" : {
            "type" : "string",
            "enum" : [ "AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN" ]
          },
          "idpRedirectUrl" : {
            "type" : "string"
          },
          "oauthProviderTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN" ]
            }
          }
        }
      },
      "RestResponseBoolean" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "type" : "boolean"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "TwoFactorAdminOverrideSettings" : {
        "type" : "object",
        "properties" : {
          "adminOverrideTwoFactorEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "Account" : {
        "type" : "object",
        "required" : [ "accountName", "appId", "companyName", "lastUpdatedAt", "uuid" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "companyName" : {
            "type" : "string"
          },
          "nextGenEnabled" : {
            "type" : "boolean"
          },
          "accountName" : {
            "type" : "string"
          },
          "whitelistedDomains" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "licenseId" : {
            "type" : "string"
          },
          "dataRetentionDurationMs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "licenseInfo" : {
            "$ref" : "#/definitions/LicenseInfo"
          },
          "ceLicenseInfo" : {
            "$ref" : "#/definitions/CeLicenseInfo"
          },
          "accountEvents" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/AccountEvent"
            }
          },
          "subdomainUrl" : {
            "type" : "string"
          },
          "twoFactorAdminEnforced" : {
            "type" : "boolean"
          },
          "forImport" : {
            "type" : "boolean"
          },
          "migratedToClusterUrl" : {
            "type" : "string"
          },
          "defaultExperience" : {
            "type" : "string",
            "enum" : [ "NG", "CG" ]
          },
          "createdFromNG" : {
            "type" : "boolean"
          },
          "localEncryptionEnabled" : {
            "type" : "boolean"
          },
          "delegateConfiguration" : {
            "$ref" : "#/definitions/DelegateConfiguration"
          },
          "techStacks" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/TechStack"
            }
          },
          "oauthEnabled" : {
            "type" : "boolean"
          },
          "ringName" : {
            "type" : "string"
          },
          "accountPreferences" : {
            "$ref" : "#/definitions/AccountPreferences"
          },
          "cloudCostEnabled" : {
            "type" : "boolean"
          },
          "ceAutoCollectK8sEvents" : {
            "type" : "boolean"
          },
          "trialSignupOptions" : {
            "$ref" : "#/definitions/TrialSignupOptions"
          },
          "serviceGuardLimit" : {
            "type" : "integer",
            "format" : "int64"
          },
          "serviceAccountConfig" : {
            "$ref" : "#/definitions/ServiceAccountConfig"
          },
          "defaults" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "authenticationMechanism" : {
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          },
          "harnessSupportAccessAllowed" : {
            "type" : "boolean"
          },
          "povAccount" : {
            "type" : "boolean"
          }
        }
      },
      "AccountEvent" : {
        "type" : "object",
        "properties" : {
          "accountEventType" : {
            "type" : "string",
            "enum" : [ "APP_CREATED", "SERVICE_CREATED", "ENV_CREATED", "WORKFLOW_CREATED", "WORKFLOW_DEPLOYED", "PIPELINE_DEPLOYED", "DELEGATE_INSTALLED", "CLOUD_PROVIDER_CREATED", "ARTIFACT_REPO_CREATED", "PIPELINE_CREATED", "ARTIFACT_STREAM_ADDED", "INFRA_MAPPING_ADDED", "INFRA_DEFINITION_ADDED", "CUSTOM" ]
          },
          "customMsg" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AccountPermissions" : {
        "type" : "object",
        "properties" : {
          "permissions" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "ACCOUNT", "LOGGED_IN", "DELEGATE", "NONE", "APP", "ALL_APP_ENTITIES", "ENV", "SERVICE", "WORKFLOW", "PIPELINE", "DEPLOYMENT", "APPLICATION_CREATE_DELETE", "USER_PERMISSION_MANAGEMENT", "ACCOUNT_MANAGEMENT", "PROVISIONER", "TEMPLATE_MANAGEMENT", "APP_TEMPLATE", "USER_PERMISSION_READ", "AUDIT_VIEWER", "TAG_MANAGEMENT", "CE_ADMIN", "CE_VIEWER", "MANAGE_CLOUD_PROVIDERS", "MANAGE_CONNECTORS", "MANAGE_APPLICATIONS", "MANAGE_APPLICATION_STACKS", "MANAGE_DELEGATES", "MANAGE_ALERT_NOTIFICATION_RULES", "MANAGE_DELEGATE_PROFILES", "MANAGE_CONFIG_AS_CODE", "MANAGE_SECRETS", "MANAGE_SECRET_MANAGERS", "MANAGE_SSH_AND_WINRM", "MANAGE_AUTHENTICATION_SETTINGS", "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS", "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS", "MANAGE_IP_WHITELIST", "MANAGE_IP_WHITELISTING", "MANAGE_DEPLOYMENT_FREEZES", "ALLOW_DEPLOYMENTS_DURING_FREEZE", "MANAGE_PIPELINE_GOVERNANCE_STANDARDS", "MANAGE_API_KEYS", "MANAGE_TAGS", "MANAGE_ACCOUNT_DEFAULTS", "MANAGE_CUSTOM_DASHBOARDS", "CREATE_CUSTOM_DASHBOARDS", "MANAGE_RESTRICTED_ACCESS" ]
            }
          }
        }
      },
      "AccountPreferences" : {
        "type" : "object",
        "properties" : {
          "delegateSecretsCacheTTLInHours" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AppFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Filter"
        }, {
          "type" : "object",
          "properties" : {
            "filterType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AppPermission" : {
        "type" : "object",
        "properties" : {
          "permissionType" : {
            "type" : "string",
            "enum" : [ "ACCOUNT", "LOGGED_IN", "DELEGATE", "NONE", "APP", "ALL_APP_ENTITIES", "ENV", "SERVICE", "WORKFLOW", "PIPELINE", "DEPLOYMENT", "APPLICATION_CREATE_DELETE", "USER_PERMISSION_MANAGEMENT", "ACCOUNT_MANAGEMENT", "PROVISIONER", "TEMPLATE_MANAGEMENT", "APP_TEMPLATE", "USER_PERMISSION_READ", "AUDIT_VIEWER", "TAG_MANAGEMENT", "CE_ADMIN", "CE_VIEWER", "MANAGE_CLOUD_PROVIDERS", "MANAGE_CONNECTORS", "MANAGE_APPLICATIONS", "MANAGE_APPLICATION_STACKS", "MANAGE_DELEGATES", "MANAGE_ALERT_NOTIFICATION_RULES", "MANAGE_DELEGATE_PROFILES", "MANAGE_CONFIG_AS_CODE", "MANAGE_SECRETS", "MANAGE_SECRET_MANAGERS", "MANAGE_SSH_AND_WINRM", "MANAGE_AUTHENTICATION_SETTINGS", "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS", "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS", "MANAGE_IP_WHITELIST", "MANAGE_IP_WHITELISTING", "MANAGE_DEPLOYMENT_FREEZES", "ALLOW_DEPLOYMENTS_DURING_FREEZE", "MANAGE_PIPELINE_GOVERNANCE_STANDARDS", "MANAGE_API_KEYS", "MANAGE_TAGS", "MANAGE_ACCOUNT_DEFAULTS", "MANAGE_CUSTOM_DASHBOARDS", "CREATE_CUSTOM_DASHBOARDS", "MANAGE_RESTRICTED_ACCESS" ]
          },
          "appFilter" : {
            "$ref" : "#/definitions/AppFilter"
          },
          "entityFilter" : {
            "$ref" : "#/definitions/Filter"
          },
          "actions" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "ALL", "CREATE", "READ", "UPDATE", "DELETE", "EXECUTE", "EXECUTE_WORKFLOW", "EXECUTE_PIPELINE", "EXECUTE_WORKFLOW_ROLLBACK", "DEFAULT" ]
            }
          }
        }
      },
      "AuthenticationSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "ngAuthSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGAuthSettings"
            }
          },
          "whitelistedDomains" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "authenticationMechanism" : {
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          },
          "twoFactorEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "CeLicenseInfo" : {
        "type" : "object",
        "properties" : {
          "licenseType" : {
            "type" : "string",
            "enum" : [ "FULL_TRIAL", "LIMITED_TRIAL", "PAID" ]
          },
          "expiryTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DelegateConfiguration" : {
        "type" : "object",
        "properties" : {
          "delegateVersions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "action" : {
            "type" : "string",
            "enum" : [ "SELF_DESTRUCT" ]
          },
          "validUntil" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "EmbeddedUser" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "externalUserId" : {
            "type" : "string"
          }
        }
      },
      "EnvFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Filter"
        }, {
          "type" : "object",
          "properties" : {
            "filterTypes" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ExecutableElementsFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Filter"
        }, {
          "type" : "object",
          "properties" : {
            "filterTypes" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "executableElementFilterType" : {
              "type" : "string"
            },
            "filter" : {
              "$ref" : "#/definitions/GenericEntityFilter"
            }
          }
        } ]
      },
      "Filter" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "ids" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "GenericEntityFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Filter"
        }, {
          "type" : "object",
          "properties" : {
            "filterType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "LDAPSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGAuthSettings"
        }, {
          "type" : "object",
          "required" : [ "connectionSettings", "identifier" ],
          "properties" : {
            "connectionSettings" : {
              "$ref" : "#/definitions/LdapConnectionSettings"
            },
            "identifier" : {
              "type" : "string"
            },
            "userSettingsList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LdapUserSettings"
              }
            },
            "groupSettingsList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LdapGroupSettings"
              }
            }
          }
        } ]
      },
      "LdapConnectionSettings" : {
        "type" : "object",
        "required" : [ "host" ],
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sslEnabled" : {
            "type" : "boolean"
          },
          "referralsEnabled" : {
            "type" : "boolean"
          },
          "maxReferralHops" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 1
          },
          "bindDN" : {
            "type" : "string"
          },
          "bindPassword" : {
            "type" : "string"
          },
          "connectTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responseTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "useRecursiveGroupMembershipSearch" : {
            "type" : "boolean"
          }
        }
      },
      "LdapGroupSettings" : {
        "type" : "object",
        "properties" : {
          "baseDN" : {
            "type" : "string"
          },
          "searchFilter" : {
            "type" : "string"
          },
          "nameAttr" : {
            "type" : "string"
          },
          "descriptionAttr" : {
            "type" : "string"
          },
          "userMembershipAttr" : {
            "type" : "string"
          },
          "referencedUserAttr" : {
            "type" : "string"
          }
        }
      },
      "LdapUserSettings" : {
        "type" : "object",
        "properties" : {
          "baseDN" : {
            "type" : "string"
          },
          "searchFilter" : {
            "type" : "string"
          },
          "uidAttr" : {
            "type" : "string"
          },
          "samAccountNameAttr" : {
            "type" : "string"
          },
          "emailAttr" : {
            "type" : "string"
          },
          "displayNameAttr" : {
            "type" : "string"
          },
          "groupMembershipAttr" : {
            "type" : "string"
          }
        }
      },
      "LicenseInfo" : {
        "type" : "object",
        "properties" : {
          "accountType" : {
            "type" : "string"
          },
          "accountStatus" : {
            "type" : "string"
          },
          "expiryTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "licenseUnits" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "LoginSettings" : {
        "type" : "object",
        "required" : [ "accountId", "passwordExpirationPolicy", "passwordStrengthPolicy", "userLockoutPolicy", "uuid" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "userLockoutPolicy" : {
            "$ref" : "#/definitions/UserLockoutPolicy"
          },
          "passwordExpirationPolicy" : {
            "$ref" : "#/definitions/PasswordExpirationPolicy"
          },
          "passwordStrengthPolicy" : {
            "$ref" : "#/definitions/PasswordStrengthPolicy"
          }
        }
      },
      "NGAuthSettings" : {
        "type" : "object",
        "discriminator" : "settingsType",
        "properties" : {
          "settingsType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          }
        }
      },
      "NotificationSettings" : {
        "type" : "object",
        "required" : [ "emailAddresses", "slackConfig" ],
        "properties" : {
          "useIndividualEmails" : {
            "type" : "boolean"
          },
          "sendMailToNewMembers" : {
            "type" : "boolean"
          },
          "emailAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "slackConfig" : {
            "$ref" : "#/definitions/SlackNotificationSetting"
          },
          "pagerDutyIntegrationKey" : {
            "type" : "string"
          },
          "microsoftTeamsWebhookUrl" : {
            "type" : "string"
          }
        }
      },
      "OAuthSettings" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "string"
          },
          "allowedProviders" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN" ]
            }
          },
          "settingsType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          }
        }
      },
      "PasswordExpirationPolicy" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "daysBeforePasswordExpires" : {
            "type" : "integer",
            "format" : "int32"
          },
          "daysBeforeUserNotifiedOfPasswordExpiration" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PasswordStrengthPolicy" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "minNumberOfCharacters" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minNumberOfUppercaseCharacters" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minNumberOfLowercaseCharacters" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minNumberOfSpecialCharacters" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minNumberOfDigits" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RateLimitProtection" : {
        "type" : "object",
        "properties" : {
          "incorrectAttemptTimestamps" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "lastNotificationSentToUserAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastNotificationSentToSecOpsAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalIncorrectAttempts" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RestResponseAuthenticationSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/AuthenticationSettingsResponse"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "SAMLSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGAuthSettings"
        }, {
          "type" : "object",
          "required" : [ "identifier", "origin" ],
          "properties" : {
            "origin" : {
              "type" : "string"
            },
            "identifier" : {
              "type" : "string"
            },
            "logoutUrl" : {
              "type" : "string"
            },
            "groupMembershipAttr" : {
              "type" : "string"
            },
            "displayName" : {
              "type" : "string"
            },
            "authorizationEnabled" : {
              "type" : "boolean"
            },
            "entityIdentifier" : {
              "type" : "string"
            },
            "samlProviderType" : {
              "type" : "string"
            },
            "clientId" : {
              "type" : "string"
            },
            "clientSecret" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SlackNotificationSetting" : {
        "type" : "object",
        "required" : [ "outgoingWebhookUrl" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "outgoingWebhookUrl" : {
            "type" : "string"
          }
        }
      },
      "TechStack" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string"
          },
          "technology" : {
            "type" : "string"
          }
        }
      },
      "TrialSignupOptions" : {
        "type" : "object",
        "properties" : {
          "productsSelected" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CD", "CE", "CI" ]
            }
          },
          "assistedOption" : {
            "type" : "boolean"
          }
        }
      },
      "User" : {
        "type" : "object",
        "required" : [ "appId", "lastUpdatedAt", "uuid" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "externalUserId" : {
            "type" : "string"
          },
          "givenName" : {
            "type" : "string"
          },
          "familyName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "companyName" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "userGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroup"
            }
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "pendingAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "supportAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "lastLogin" : {
            "type" : "integer",
            "format" : "int64"
          },
          "firstLogin" : {
            "type" : "boolean"
          },
          "password" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "token" : {
            "type" : "string"
          },
          "twoFactorJwtToken" : {
            "type" : "string"
          },
          "emailVerified" : {
            "type" : "boolean"
          },
          "passwordExpired" : {
            "type" : "boolean"
          },
          "userLocked" : {
            "type" : "boolean"
          },
          "statsFetchedOn" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccountId" : {
            "type" : "string"
          },
          "defaultAccountId" : {
            "type" : "string"
          },
          "lastAppId" : {
            "type" : "string"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "imported" : {
            "type" : "boolean"
          },
          "userLockoutInfo" : {
            "$ref" : "#/definitions/UserLockoutInfo"
          },
          "rateLimitProtection" : {
            "$ref" : "#/definitions/RateLimitProtection"
          },
          "twoFactorAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "twoFactorAuthenticationMechanism" : {
            "type" : "string",
            "enum" : [ "TOTP" ]
          },
          "oauthProvider" : {
            "type" : "string"
          },
          "reportedSegmentTracks" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "utmInfo" : {
            "$ref" : "#/definitions/UtmInfo"
          },
          "accountIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "UserGroup" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "description", "notificationConfigs", "tags", "users" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "isSsoLinked" : {
            "type" : "boolean"
          },
          "externallyManaged" : {
            "type" : "boolean"
          },
          "linkedSsoType" : {
            "type" : "string",
            "enum" : [ "SAML", "LDAP", "OAUTH" ]
          },
          "linkedSsoId" : {
            "type" : "string"
          },
          "linkedSsoDisplayName" : {
            "type" : "string"
          },
          "ssoGroupId" : {
            "type" : "string"
          },
          "ssoGroupName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notificationConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NotificationSettingConfig"
            }
          },
          "harnessManaged" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGTag"
            },
            "maxItems" : 128,
            "minItems" : 0
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "UserGroupEntityReference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "entityType" : {
            "type" : "string"
          }
        }
      },
      "UserLockoutInfo" : {
        "type" : "object",
        "properties" : {
          "numberOfFailedLoginAttempts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userLockedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "UserLockoutPolicy" : {
        "type" : "object",
        "properties" : {
          "enableLockoutPolicy" : {
            "type" : "boolean"
          },
          "numberOfFailedAttemptsBeforeLockout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lockOutPeriod" : {
            "type" : "integer",
            "format" : "int32"
          },
          "notifyUser" : {
            "type" : "boolean"
          },
          "userGroupsToNotify" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroup"
            }
          }
        }
      },
      "UsernamePasswordSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGAuthSettings"
        }, {
          "type" : "object",
          "required" : [ "loginSettings" ],
          "properties" : {
            "loginSettings" : {
              "$ref" : "#/definitions/LoginSettings"
            }
          }
        } ]
      },
      "UtmInfo" : {
        "type" : "object",
        "properties" : {
          "utmSource" : {
            "type" : "string"
          },
          "utmContent" : {
            "type" : "string"
          },
          "utmMedium" : {
            "type" : "string"
          },
          "utmTerm" : {
            "type" : "string"
          },
          "utmCampaign" : {
            "type" : "string"
          }
        }
      },
      "WorkflowFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Filter"
        }, {
          "type" : "object",
          "properties" : {
            "filterTypes" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "RestResponsePasswordStrengthPolicy" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/PasswordStrengthPolicy"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "RestResponseLoginSettings" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/LoginSettings"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "LdapSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSOSettings"
        }, {
          "type" : "object",
          "required" : [ "connectionSettings" ],
          "properties" : {
            "connectionSettings" : {
              "$ref" : "#/definitions/LdapConnectionSettings"
            },
            "userSettingsList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LdapUserSettings"
              }
            },
            "groupSettingsList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LdapGroupSettings"
              }
            },
            "userSettings" : {
              "$ref" : "#/definitions/LdapUserSettings"
            },
            "groupSettings" : {
              "$ref" : "#/definitions/LdapGroupSettings"
            },
            "cronExpression" : {
              "type" : "string"
            }
          }
        } ]
      },
      "OauthSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSOSettings"
        }, {
          "type" : "object",
          "properties" : {
            "filter" : {
              "type" : "string"
            },
            "allowedProviders" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [ "AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN" ]
              }
            }
          }
        } ]
      },
      "RestResponseSSOConfig" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/SSOConfig"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "SSOConfig" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "ssoSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SSOSettings"
            }
          },
          "authenticationMechanism" : {
            "type" : "string",
            "enum" : [ "USER_PASSWORD", "SAML", "LDAP", "OAUTH" ]
          }
        }
      },
      "SSOSettings" : {
        "type" : "object",
        "required" : [ "appId", "lastUpdatedAt", "type", "uuid" ],
        "discriminator" : "type",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "appId" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SAML", "LDAP", "OAUTH" ]
          },
          "displayName" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "nextIteration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nextIterations" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "accountId" : {
            "type" : "string"
          }
        }
      },
      "SamlSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSOSettings"
        }, {
          "type" : "object",
          "required" : [ "accountId", "origin" ],
          "properties" : {
            "metaDataFile" : {
              "type" : "string"
            },
            "accountId" : {
              "type" : "string"
            },
            "origin" : {
              "type" : "string"
            },
            "groupMembershipAttr" : {
              "type" : "string"
            },
            "logoutUrl" : {
              "type" : "string"
            },
            "entityIdentifier" : {
              "type" : "string"
            },
            "clientId" : {
              "type" : "string"
            },
            "clientSecret" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "userIdAttr" : {
              "type" : "string"
            },
            "samlProviderType" : {
              "type" : "string",
              "enum" : [ "AZURE", "OKTA", "ONELOGIN", "OTHER" ]
            },
            "encryptedClientSecret" : {
              "type" : "string"
            },
            "authorizationEnabled" : {
              "type" : "boolean",
              "readOnly" : true
            },
            "settingType" : {
              "type" : "string",
              "enum" : [ "HOST_CONNECTION_ATTRIBUTES", "BASTION_HOST_CONNECTION_ATTRIBUTES", "SMTP", "SFTP", "JENKINS", "BAMBOO", "STRING", "SPLUNK", "ELK", "LOGZ", "SUMO", "DATA_DOG", "APM_VERIFICATION", "BUG_SNAG", "LOG_VERIFICATION", "APP_DYNAMICS", "NEW_RELIC", "DYNA_TRACE", "INSTANA", "DATA_DOG_LOG", "CLOUD_WATCH", "SCALYR", "ELB", "SLACK", "AWS", "GCS", "GCP", "AZURE", "PCF", "RANCHER", "DIRECT", "KUBERNETES_CLUSTER", "DOCKER", "ECR", "GCR", "ACR", "PHYSICAL_DATA_CENTER", "KUBERNETES", "NEXUS", "ARTIFACTORY", "SMB", "AMAZON_S3", "GIT", "SSH_SESSION_CONFIG", "SERVICE_VARIABLE", "CONFIG_FILE", "KMS", "GCP_KMS", "JIRA", "SERVICENOW", "SECRET_TEXT", "YAML_GIT_SYNC", "VAULT", "VAULT_SSH", "AWS_SECRETS_MANAGER", "CYBERARK", "WINRM_CONNECTION_ATTRIBUTES", "WINRM_SESSION_CONFIG", "PROMETHEUS", "INFRASTRUCTURE_MAPPING", "HTTP_HELM_REPO", "AMAZON_S3_HELM_REPO", "GCS_HELM_REPO", "SPOT_INST", "AZURE_ARTIFACTS_PAT", "CUSTOM", "CE_AWS", "CE_GCP", "CE_AZURE", "AZURE_VAULT", "KUBERNETES_CLUSTER_NG", "GIT_NG", "SSO_SAML", "GCP_SECRETS_MANAGER", "TRIGGER" ]
            }
          }
        } ]
      },
      "AccountSettingConfig" : {
        "type" : "object"
      },
      "AccountSettingResponse" : {
        "type" : "object",
        "properties" : {
          "accountSettings" : {
            "$ref" : "#/definitions/AccountSettings"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AccountSettings" : {
        "type" : "object",
        "required" : [ "config", "type" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "config" : {
            "$ref" : "#/definitions/AccountSettingConfig"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Connector" ]
          }
        }
      },
      "ConnectorSettings" : {
        "allOf" : [ {
          "$ref" : "#/definitions/AccountSettingConfig"
        }, {
          "type" : "object",
          "properties" : {
            "builtInSMDisabled" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "ResponseAccountSettingResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AccountSettingResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListAccountSettings" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AccountSettings"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ActivitySummary" : {
        "type" : "object",
        "properties" : {
          "get_id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "heartBeatFailuresCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "successfulActivitiesCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failedActivitiesCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageActivitySummary" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/definitions/Sort"
          },
          "first" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/definitions/Pageable"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ActivitySummary"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "Pageable" : {
        "type" : "object",
        "properties" : {
          "sort" : {
            "$ref" : "#/definitions/Sort"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponsePageActivitySummary" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageActivitySummary"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Sort" : {
        "type" : "object",
        "properties" : {
          "unsorted" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ConnectivityCheckSummary" : {
        "type" : "object",
        "properties" : {
          "successCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failureCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseConnectivityCheckSummary" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ConnectivityCheckSummary"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Activity" : {
        "type" : "object",
        "required" : [ "activityStatus", "activityTime", "type" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "referredEntity" : {
            "$ref" : "#/definitions/EntityDetail"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CONNECTIVITY_CHECK", "ENTITY_USAGE", "ENTITY_CREATION", "ENTITY_UPDATE" ]
          },
          "activityStatus" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED" ]
          },
          "detail" : {
            "$ref" : "#/definitions/ActivityDetail"
          },
          "activityTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ActivityDetail" : {
        "type" : "object"
      },
      "EntityDetail" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Projects", "Pipelines", "PipelineSteps", "Http", "JiraCreate", "JiraUpdate", "JiraApproval", "HarnessApproval", "Barrier", "FlagConfiguration", "ShellScript", "K8sCanaryDeploy", "K8sApply", "K8sBlueGreenDeploy", "K8sRollingDeploy", "K8sRollingRollback", "K8sScale", "K8sDelete", "K8sBGSwapServices", "K8sCanaryDelete", "TerraformApply", "TerraformPlan", "TerraformDestroy", "TerraformRollback", "HelmDeploy", "HelmRollback", "Connectors", "Secrets", "Files", "Service", "Environment", "EnvironmentGroup", "InputSets", "CvConfig", "Verify", "Delegates", "DelegateConfigurations", "CvVerificationJob", "IntegrationStage", "IntegrationSteps", "SecurityStage", "SecuritySteps", "CvKubernetesActivitySource", "DeploymentSteps", "DeploymentStage", "ApprovalStage", "FeatureFlagStage", "Template", "Triggers", "MonitoredService", "GitRepositories", "FeatureFlags", "ServiceNowApproval", "ServiceNowCreate", "ServiceNowUpdate", "GovernancePolicies", "POLICY_STEP", "Run", "RunTests", "Plugin", "RestoreCacheGCS", "RestoreCacheS3", "SaveCacheGCS", "SaveCacheS3", "Security", "ArtifactoryUpload", "GCSUpload", "S3Upload", "BuildAndPushGCR", "BuildAndPushECR", "BuildAndPushDockerRegistry", "CreateStack", "DeleteStack", "ServerlessAwsLambdaDeploy", "ServerlessAwsLambdaRollback", "RollbackStack" ]
          },
          "entityRef" : {
            "$ref" : "#/definitions/EntityReference"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PageActivity" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/definitions/Sort"
          },
          "first" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/definitions/Pageable"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Activity"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageActivity" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageActivity"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AcrBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "buildUrl" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "repository" : {
            "type" : "string"
          }
        }
      },
      "AcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AcrBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseAcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AcrResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AcrRegistriesDTO" : {
        "type" : "object",
        "properties" : {
          "registries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AcrRegistryDTO"
            }
          }
        }
      },
      "AcrRegistryDTO" : {
        "type" : "object",
        "required" : [ "registry" ],
        "properties" : {
          "registry" : {
            "type" : "string"
          }
        }
      },
      "ResponseAcrRegistriesDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AcrRegistriesDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AcrRepositoriesDTO" : {
        "type" : "object",
        "properties" : {
          "repositories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AcrRepositoryDTO"
            }
          }
        }
      },
      "AcrRepositoryDTO" : {
        "type" : "object",
        "required" : [ "repository" ],
        "properties" : {
          "repository" : {
            "type" : "string"
          }
        }
      },
      "ResponseAcrRepositoriesDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AcrRepositoriesDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ArtifactoryBuildDetailsDTO" : {
        "type" : "object"
      },
      "ArtifactoryResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ArtifactoryBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseArtifactoryResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ArtifactoryResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseArtifactoryBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ArtifactoryBuildDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ArtifactoryRequestDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "tagRegex" : {
            "type" : "string"
          }
        }
      },
      "ArtifactoryRepoDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "repositories" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseArtifactoryRepoDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ArtifactoryRepoDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ArtifactoryArtifactBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "artifactName" : {
            "type" : "string"
          },
          "artifactPath" : {
            "type" : "string"
          }
        }
      },
      "ResponseListArtifactoryArtifactBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ArtifactoryArtifactBuildDetailsDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "DockerBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "buildUrl" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "imagePath" : {
            "type" : "string"
          }
        }
      },
      "DockerResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DockerBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseDockerResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DockerResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "DockerRequestDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "tagRegex" : {
            "type" : "string"
          },
          "tagsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseDockerBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DockerBuildDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EcrBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "buildUrl" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "imagePath" : {
            "type" : "string"
          }
        }
      },
      "EcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EcrBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseEcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EcrResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseEcrBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EcrBuildDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EcrRequestDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "tagRegex" : {
            "type" : "string"
          },
          "tagsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "region" : {
            "type" : "string"
          }
        }
      },
      "EcrListImagesDTO" : {
        "type" : "object",
        "properties" : {
          "images" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseEcrListImagesDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EcrListImagesDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GcrBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "buildUrl" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "imagePath" : {
            "type" : "string"
          }
        }
      },
      "ResponseGcrBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GcrBuildDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "GcrRequestDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "tagRegex" : {
            "type" : "string"
          },
          "tagsList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "registryHostname" : {
            "type" : "string"
          }
        }
      },
      "GcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GcrBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseGcrResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GcrResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "NexusBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "buildUrl" : {
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "imagePath" : {
            "type" : "string"
          }
        }
      },
      "NexusResponseDTO" : {
        "type" : "object",
        "properties" : {
          "buildDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NexusBuildDetailsDTO"
            }
          }
        }
      },
      "ResponseNexusResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/NexusResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseNexusBuildDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/NexusBuildDetailsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "NexusRequestDTO" : {
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string"
          },
          "tagRegex" : {
            "type" : "string"
          }
        }
      },
      "ResponseMapStringString" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AwsCFTemplateParamsData" : {
        "type" : "object",
        "properties" : {
          "paramKey" : {
            "type" : "string"
          },
          "paramType" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "string"
          }
        }
      },
      "ResponseListAwsCFTemplateParamsData" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AwsCFTemplateParamsData"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseSetString" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "DelegateEntityOwner" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "DelegateGroup" : {
        "type" : "object",
        "required" : [ "uuid" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "delegateType" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "owner" : {
            "$ref" : "#/definitions/DelegateEntityOwner"
          },
          "ng" : {
            "type" : "boolean"
          },
          "delegateConfigurationId" : {
            "type" : "string"
          },
          "sizeDetails" : {
            "$ref" : "#/definitions/DelegateSizeDetails"
          },
          "k8sConfigDetails" : {
            "$ref" : "#/definitions/K8sConfigDetails"
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ENABLED", "DELETED" ]
          },
          "validUntil" : {
            "type" : "string",
            "format" : "date-time"
          },
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "DelegateSizeDetails" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "string",
            "enum" : [ "EXTRA_SMALL", "LAPTOP", "SMALL", "MEDIUM", "LARGE" ]
          },
          "label" : {
            "type" : "string"
          },
          "replicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ram" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cpu" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "K8sConfigDetails" : {
        "type" : "object",
        "properties" : {
          "k8sPermissionType" : {
            "type" : "string",
            "enum" : [ "CLUSTER_ADMIN", "CLUSTER_VIEWER", "NAMESPACE_ADMIN" ]
          },
          "namespace" : {
            "type" : "string"
          }
        }
      },
      "RestResponseDelegateGroup" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateGroup"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "DelegateGroupTags" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DelegateProfileDetailsNg" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "primary" : {
            "type" : "boolean"
          },
          "approvalRequired" : {
            "type" : "boolean"
          },
          "startupScript" : {
            "type" : "string"
          },
          "scopingRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ScopingRuleDetailsNg"
            }
          },
          "selectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createdBy" : {
            "$ref" : "#/definitions/EmbeddedUserDetails"
          },
          "lastUpdatedBy" : {
            "$ref" : "#/definitions/EmbeddedUserDetails"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastUpdatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "identifier" : {
            "type" : "string"
          },
          "numberOfDelegates" : {
            "type" : "integer",
            "format" : "int64"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          }
        }
      },
      "EmbeddedUserDetails" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "RestResponseDelegateProfileDetailsNg" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateProfileDetailsNg"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "ScopingRuleDetailsNg" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "environmentTypeId" : {
            "type" : "string"
          },
          "environmentIds" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RestResponsePageResponseDelegateProfileDetailsNg" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateProfileDetailsNg"
            }
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "DelegateGroupDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RestResponseDelegateGroupDTO" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateGroupDTO"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "DelegateMtlsEndpointDetails" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "fqdn" : {
            "type" : "string"
          },
          "caCertificates" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "LOOSE", "STRICT" ]
          }
        }
      },
      "RestResponseDelegateMtlsEndpointDetails" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateMtlsEndpointDetails"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "DelegateMtlsEndpointRequest" : {
        "type" : "object",
        "properties" : {
          "domainPrefix" : {
            "type" : "string"
          },
          "caCertificates" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "LOOSE", "STRICT" ]
          }
        }
      },
      "RestResponseVoid" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/Void"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "Void" : {
        "type" : "object"
      },
      "ApiKeyPrincipal" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Principal"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "DelegateTokenDetails" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "createdBy" : {
            "$ref" : "#/definitions/EmbeddedUser"
          },
          "createdByNgUser" : {
            "$ref" : "#/definitions/Principal"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "REVOKED" ]
          },
          "value" : {
            "type" : "string"
          },
          "ownerIdentifier" : {
            "type" : "string"
          }
        }
      },
      "RestResponseListDelegateTokenDetails" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateTokenDetails"
            }
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "ServiceAccountPrincipal" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Principal"
        }, {
          "type" : "object",
          "properties" : {
            "email" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ServicePrincipal" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Principal"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "UserPrincipal" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Principal"
        }, {
          "type" : "object",
          "properties" : {
            "email" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            },
            "accountId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestResponseDelegateTokenDetails" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateTokenDetails"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "DelegateConnectionDetails" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "lastHeartbeat" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastGrpcHeartbeat" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DelegateGroupDetails" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "delegateGroupIdentifier" : {
            "type" : "string"
          },
          "delegateType" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "delegateDescription" : {
            "type" : "string"
          },
          "delegateConfigurationId" : {
            "type" : "string"
          },
          "groupImplicitSelectors" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "enum" : [ "PROFILE_NAME", "DELEGATE_NAME", "HOST_NAME", "GROUP_NAME", "GROUP_SELECTORS", "PROFILE_SELECTORS" ]
            }
          },
          "groupCustomSelectors" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "delegateInsightsDetails" : {
            "$ref" : "#/definitions/DelegateInsightsDetails"
          },
          "lastHeartBeat" : {
            "type" : "integer",
            "format" : "int64"
          },
          "connectivityStatus" : {
            "type" : "string"
          },
          "activelyConnected" : {
            "type" : "boolean"
          },
          "grpcActive" : {
            "type" : "boolean"
          },
          "delegateInstanceDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateInner"
            }
          },
          "tokenActive" : {
            "type" : "boolean"
          }
        }
      },
      "DelegateGroupListing" : {
        "type" : "object",
        "properties" : {
          "delegateGroupDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateGroupDetails"
            }
          }
        }
      },
      "DelegateInner" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "lastHeartbeat" : {
            "type" : "integer",
            "format" : "int64"
          },
          "activelyConnected" : {
            "type" : "boolean"
          },
          "hostName" : {
            "type" : "string"
          },
          "tokenActive" : {
            "type" : "boolean"
          },
          "connections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateConnectionDetails"
            }
          }
        }
      },
      "DelegateInsightsBarDetails" : {
        "type" : "object",
        "properties" : {
          "timeStamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "counts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PairDelegateInsightsTypeLong"
            }
          }
        }
      },
      "DelegateInsightsDetails" : {
        "type" : "object",
        "properties" : {
          "insights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DelegateInsightsBarDetails"
            }
          }
        }
      },
      "Pair" : {
        "type" : "object",
        "properties" : {
          "right" : {
            "type" : "object"
          },
          "left" : {
            "type" : "object"
          },
          "value" : {
            "type" : "object"
          },
          "key" : {
            "type" : "object"
          }
        }
      },
      "PairDelegateInsightsTypeLong" : {
        "type" : "object",
        "properties" : {
          "right" : {
            "type" : "integer",
            "format" : "int64"
          },
          "left" : {
            "type" : "string",
            "enum" : [ "SUCCESSFUL", "FAILED", "IN_PROGRESS", "PERPETUAL_TASK_ASSIGNED" ]
          },
          "value" : {
            "type" : "integer",
            "format" : "int64"
          },
          "key" : {
            "type" : "string",
            "enum" : [ "SUCCESSFUL", "FAILED", "IN_PROGRESS", "PERPETUAL_TASK_ASSIGNED" ]
          }
        }
      },
      "RestResponseDelegateGroupListing" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/DelegateGroupListing"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "EntityReferredByPipelineSetupUsageDetail" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SetupUsageDetail"
        }, {
          "type" : "object",
          "properties" : {
            "identifier" : {
              "type" : "string"
            },
            "referenceType" : {
              "type" : "string"
            }
          }
        } ]
      },
      "EntitySetupUsageDTO" : {
        "type" : "object",
        "required" : [ "referredByEntity" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "referredEntity" : {
            "$ref" : "#/definitions/EntityDetail"
          },
          "referredByEntity" : {
            "$ref" : "#/definitions/EntityDetail"
          },
          "detail" : {
            "$ref" : "#/definitions/SetupUsageDetail"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PageEntitySetupUsageDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/definitions/Sort"
          },
          "first" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/definitions/Pageable"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntitySetupUsageDTO"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageEntitySetupUsageDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageEntitySetupUsageDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SecretReferredByConnectorSetupUsageDetail" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SetupUsageDetail"
        }, {
          "type" : "object",
          "properties" : {
            "fieldName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SetupUsageDetail" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "ResponseEnvironmentResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvironmentResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EnvironmentRequestDTO" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PreProduction", "Production" ]
          }
        }
      },
      "PageEnvironmentResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvironmentResponseDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageEnvironmentResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageEnvironmentResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseEnvironmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvironmentResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListEnvironmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvironmentResponse"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageEnvironmentResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvironmentResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageEnvironmentResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageEnvironmentResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListInviteOperationResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACCOUNT_INVITE_ACCEPTED_NEED_PASSWORD", "ACCOUNT_INVITE_ACCEPTED", "USER_INVITED_SUCCESSFULLY", "USER_ALREADY_ADDED", "USER_ALREADY_INVITED", "FAIL", "INVITE_EXPIRED", "INVITE_INVALID" ]
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "CreateInvite" : {
        "type" : "object",
        "required" : [ "inviteType", "users" ],
        "properties" : {
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 100,
            "minItems" : 0
          },
          "roleBindings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleBinding"
            }
          },
          "inviteType" : {
            "type" : "string",
            "enum" : [ "USER_INITIATED_INVITE", "ADMIN_INITIATED_INVITE", "SCIM_INITIATED_INVITE" ]
          },
          "userGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RoleBinding" : {
        "type" : "object",
        "required" : [ "managedRole", "roleIdentifier", "roleName" ],
        "properties" : {
          "roleIdentifier" : {
            "type" : "string"
          },
          "roleName" : {
            "type" : "string"
          },
          "resourceGroupIdentifier" : {
            "type" : "string"
          },
          "resourceGroupName" : {
            "type" : "string"
          },
          "managedRole" : {
            "type" : "boolean"
          }
        }
      },
      "Invite" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "email", "id", "inviteType", "name" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "roleBindings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleBinding"
            }
          },
          "userGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "inviteType" : {
            "type" : "string",
            "enum" : [ "USER_INITIATED_INVITE", "ADMIN_INITIATED_INVITE", "SCIM_INITIATED_INVITE" ]
          },
          "approved" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseOptionalInvite" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/Invite"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseInvite" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/Invite"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageInvite" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Invite"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageInvite" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageInvite"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ACLAggregateFilter" : {
        "type" : "object",
        "properties" : {
          "resourceGroupIdentifiers" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "roleIdentifiers" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "GcpResponseDTO" : {
        "type" : "object",
        "properties" : {
          "clusterNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseGcpResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/GcpResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ApiKeyDTO" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "apiKeyType", "identifier", "name", "parentIdentifier" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "apiKeyType" : {
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          },
          "parentIdentifier" : {
            "type" : "string"
          },
          "defaultTimeToExpireToken" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          }
        }
      },
      "ResponseApiKeyDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ApiKeyDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListApiKeyDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApiKeyDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ApiKeyAggregateDTO" : {
        "type" : "object",
        "required" : [ "apiKey", "createdAt", "lastModifiedAt" ],
        "properties" : {
          "apiKey" : {
            "$ref" : "#/definitions/ApiKeyDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tokensCount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PageApiKeyAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApiKeyAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageApiKeyAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageApiKeyAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseApiKeyAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ApiKeyAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FileDTO" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "identifier", "name", "parentIdentifier", "type" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "fileUsage" : {
            "type" : "string",
            "enum" : [ "MANIFEST_FILE", "CONFIG", "SCRIPT" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FILE", "FOLDER" ]
          },
          "parentIdentifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGTag"
            }
          },
          "mimeType" : {
            "type" : "string"
          },
          "draft" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "createdBy" : {
            "type" : "string"
          }
        }
      },
      "ResponseFileDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FileDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FileDtoYamlWrapper" : {
        "type" : "object",
        "required" : [ "file" ],
        "properties" : {
          "file" : {
            "$ref" : "#/definitions/FileDTO"
          }
        }
      },
      "PageFileDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/definitions/Sort"
          },
          "first" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/definitions/Pageable"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FileDTO"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageFileDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageFileDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FileNodeDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FileStoreNodeDTO"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "FileStoreNodeDTO" : {
        "type" : "object",
        "required" : [ "identifier", "name", "type" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FILE", "FOLDER" ]
          }
        }
      },
      "FolderNodeDTO" : {
        "type" : "object",
        "required" : [ "identifier", "name", "type" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FILE", "FOLDER" ]
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FileStoreNodeDTO"
            }
          }
        }
      },
      "ResponseFolderNodeDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/FolderNodeDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "HostValidationDTO" : {
        "type" : "object",
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED" ]
          },
          "error" : {
            "$ref" : "#/definitions/ErrorDetail"
          }
        }
      },
      "ResponseListHostValidationDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/HostValidationDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "HostValidationParams" : {
        "type" : "object",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AccountResourcesDTO" : {
        "type" : "object",
        "properties" : {
          "connectorsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "secretsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "delegatesCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "templatesCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseAccountResourcesDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AccountResourcesDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Organization" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Project" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "orgIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "modules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
            },
            "maxItems" : 1024,
            "minItems" : 0
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ProjectAggregateDTO" : {
        "type" : "object",
        "required" : [ "projectResponse" ],
        "properties" : {
          "projectResponse" : {
            "$ref" : "#/definitions/ProjectResponse"
          },
          "organization" : {
            "$ref" : "#/definitions/Organization"
          },
          "harnessManagedOrg" : {
            "type" : "boolean"
          },
          "admins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          },
          "collaborators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          }
        }
      },
      "ProjectResponse" : {
        "type" : "object",
        "required" : [ "project" ],
        "properties" : {
          "project" : {
            "$ref" : "#/definitions/Project"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseProjectAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ProjectAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "UserMetadataDTO" : {
        "type" : "object",
        "required" : [ "email", "uuid" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "uuid" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "externallyManaged" : {
            "type" : "boolean"
          }
        }
      },
      "OrganizationAggregateDTO" : {
        "type" : "object",
        "required" : [ "organizationResponse" ],
        "properties" : {
          "organizationResponse" : {
            "$ref" : "#/definitions/OrganizationResponse"
          },
          "projectsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "connectorsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "secretsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "delegatesCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "templatesCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "admins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          },
          "collaborators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          }
        }
      },
      "OrganizationResponse" : {
        "type" : "object",
        "required" : [ "organization" ],
        "properties" : {
          "organization" : {
            "$ref" : "#/definitions/Organization"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "harnessManaged" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseOrganizationAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/OrganizationAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EmailConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "groupEmail" ],
          "properties" : {
            "groupEmail" : {
              "type" : "string"
            }
          }
        } ]
      },
      "MicrosoftTeamsConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "microsoftTeamsWebhookUrl" ],
          "properties" : {
            "microsoftTeamsWebhookUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "NotificationSettingConfigDTO" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SLACK", "PAGERDUTY", "MSTEAMS" ]
          }
        }
      },
      "PagerDutyConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "pagerDutyKey" ],
          "properties" : {
            "pagerDutyKey" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ResponseUserGroupAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/UserGroupAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RoleAssignmentMetadataDTO" : {
        "type" : "object",
        "required" : [ "identifier", "managedRole", "managedRoleAssignment", "resourceGroupIdentifier", "resourceGroupName", "roleIdentifier", "roleName" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "roleIdentifier" : {
            "type" : "string"
          },
          "roleName" : {
            "type" : "string"
          },
          "resourceGroupIdentifier" : {
            "type" : "string"
          },
          "resourceGroupName" : {
            "type" : "string"
          },
          "managedRole" : {
            "type" : "boolean"
          },
          "managedRoleAssignment" : {
            "type" : "boolean"
          }
        }
      },
      "SlackConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfigDTO"
        }, {
          "type" : "object",
          "required" : [ "slackWebhookUrl" ],
          "properties" : {
            "slackWebhookUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "UserGroupAggregateDTO" : {
        "type" : "object",
        "required" : [ "userGroupDTO" ],
        "properties" : {
          "userGroupDTO" : {
            "$ref" : "#/definitions/UserGroupDTO"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          },
          "roleAssignmentsMetadataDTO" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignmentMetadataDTO"
            }
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "UserGroupDTO" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "notificationConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NotificationSettingConfigDTO"
            }
          },
          "linkedSsoId" : {
            "type" : "string"
          },
          "linkedSsoDisplayName" : {
            "type" : "string"
          },
          "ssoGroupId" : {
            "type" : "string"
          },
          "ssoGroupName" : {
            "type" : "string"
          },
          "externallyManaged" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "ssoLinked" : {
            "type" : "boolean"
          }
        }
      },
      "PageProjectAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ProjectAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageProjectAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageProjectAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageUserGroupAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroupAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageUserGroupAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageUserGroupAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListUserGroupAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroupAggregateDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AggregateACLRequest" : {
        "type" : "object",
        "properties" : {
          "searchTerm" : {
            "type" : "string"
          },
          "resourceGroupFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "roleFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PageOrganizationAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OrganizationAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageOrganizationAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageOrganizationAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageHostDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/HostDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageHostDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageHostDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "HostFilterDTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "HOST_NAMES", "HOST_ATTRIBUTES" ]
          },
          "filter" : {
            "type" : "string"
          }
        }
      },
      "AzureKeyVaultMetadataSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretManagerMetadataSpecDTO"
        }, {
          "type" : "object",
          "properties" : {
            "vaultNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ResponseSecretManagerMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/SecretManagerMetadataDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SecretManagerMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "encryptionType" : {
            "type" : "string",
            "enum" : [ "LOCAL", "KMS", "GCP_KMS", "AWS_SECRETS_MANAGER", "AZURE_VAULT", "CYBERARK", "VAULT", "GCP_SECRETS_MANAGER", "CUSTOM", "VAULT_SSH" ]
          },
          "spec" : {
            "$ref" : "#/definitions/SecretManagerMetadataSpecDTO"
          }
        }
      },
      "SecretManagerMetadataSpecDTO" : {
        "type" : "object",
        "discriminator" : "encryptionType"
      },
      "VaultMetadataSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretManagerMetadataSpecDTO"
        }, {
          "type" : "object",
          "properties" : {
            "secretEngines" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VaultSecretEngineDTO"
              }
            }
          }
        } ]
      },
      "VaultSecretEngineDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AzureKeyVaultMetadataRequestSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretManagerMetadataRequestSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "clientId", "secretKey", "subscription", "tenantId" ],
          "properties" : {
            "clientId" : {
              "type" : "string"
            },
            "tenantId" : {
              "type" : "string"
            },
            "secretKey" : {
              "type" : "string"
            },
            "subscription" : {
              "type" : "string"
            },
            "azureEnvironmentType" : {
              "type" : "string",
              "enum" : [ "AZURE", "AZURE_US_GOVERNMENT" ]
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "SecretManagerMetadataRequestDTO" : {
        "type" : "object",
        "required" : [ "encryptionType", "identifier", "spec" ],
        "properties" : {
          "encryptionType" : {
            "type" : "string",
            "enum" : [ "LOCAL", "KMS", "GCP_KMS", "AWS_SECRETS_MANAGER", "AZURE_VAULT", "CYBERARK", "VAULT", "GCP_SECRETS_MANAGER", "CUSTOM", "VAULT_SSH" ]
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/SecretManagerMetadataRequestSpecDTO"
          }
        }
      },
      "SecretManagerMetadataRequestSpecDTO" : {
        "type" : "object",
        "discriminator" : "encryptionType"
      },
      "VaultAgentCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/VaultCredentialDTO"
        }, {
          "type" : "object",
          "properties" : {
            "sinkPath" : {
              "type" : "string"
            }
          }
        } ]
      },
      "VaultAppRoleCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/VaultCredentialDTO"
        }, {
          "type" : "object",
          "properties" : {
            "appRoleId" : {
              "type" : "string"
            },
            "secretId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "VaultAuthTokenCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/VaultCredentialDTO"
        }, {
          "type" : "object",
          "properties" : {
            "authToken" : {
              "type" : "string"
            }
          }
        } ]
      },
      "VaultAwsIamRoleCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/VaultCredentialDTO"
        }, {
          "type" : "object",
          "properties" : {
            "awsRegion" : {
              "type" : "string"
            },
            "vaultAwsIamRole" : {
              "type" : "string"
            },
            "xvaultAwsIamServerId" : {
              "$ref" : "#/definitions/SecretRefData"
            }
          }
        } ]
      },
      "VaultCredentialDTO" : {
        "type" : "object",
        "discriminator" : "accessType"
      },
      "VaultK8sCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/VaultCredentialDTO"
        }, {
          "type" : "object",
          "properties" : {
            "vaultK8sAuthRole" : {
              "type" : "string"
            },
            "serviceAccountTokenPath" : {
              "type" : "string"
            }
          }
        } ]
      },
      "VaultMetadataRequestSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretManagerMetadataRequestSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "accessType", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "accessType" : {
              "type" : "string",
              "enum" : [ "APP_ROLE", "TOKEN", "VAULT_AGENT", "AWS_IAM", "K8s_AUTH" ]
            },
            "spec" : {
              "$ref" : "#/definitions/VaultCredentialDTO"
            },
            "delegateSelectors" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string"
              }
            },
            "namespace" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BaseSSHSpecDTO" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "BaseWinRmSpecDTO" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "KerberosConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseSSHSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "principal", "realm" ],
          "properties" : {
            "principal" : {
              "type" : "string"
            },
            "realm" : {
              "type" : "string"
            },
            "tgtGenerationMethod" : {
              "type" : "string",
              "enum" : [ "KeyTabFilePath", "Password" ]
            },
            "spec" : {
              "$ref" : "#/definitions/TGTGenerationSpecDTO"
            }
          }
        } ]
      },
      "KerberosWinRmConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseWinRmSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "principal", "realm" ],
          "properties" : {
            "principal" : {
              "type" : "string"
            },
            "realm" : {
              "type" : "string"
            },
            "tgtGenerationMethod" : {
              "type" : "string",
              "enum" : [ "KeyTabFilePath", "Password" ]
            },
            "spec" : {
              "$ref" : "#/definitions/TGTGenerationSpecDTO"
            },
            "useSSL" : {
              "type" : "boolean"
            },
            "skipCertChecks" : {
              "type" : "boolean"
            },
            "useNoProfile" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "NTLMConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseWinRmSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "domain", "password", "username" ],
          "properties" : {
            "domain" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            },
            "useSSL" : {
              "type" : "boolean"
            },
            "skipCertChecks" : {
              "type" : "boolean"
            },
            "useNoProfile" : {
              "type" : "boolean"
            },
            "password" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PageSecretResponseWrapper" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SecretResponseWrapper"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageSecretResponseWrapper" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageSecretResponseWrapper"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SSHAuthDTO" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "spec" : {
            "$ref" : "#/definitions/BaseSSHSpecDTO"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "SSH", "Kerberos" ]
          }
        }
      },
      "SSHConfigDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseSSHSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "credentialType", "spec" ],
          "properties" : {
            "credentialType" : {
              "type" : "string",
              "enum" : [ "Password", "KeyPath", "KeyReference" ]
            },
            "spec" : {
              "$ref" : "#/definitions/SSHCredentialSpecDTO"
            }
          }
        } ]
      },
      "SSHCredentialSpecDTO" : {
        "type" : "object",
        "discriminator" : "credentialType"
      },
      "SSHKeyPathCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSHCredentialSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "keyPath", "userName" ],
          "properties" : {
            "userName" : {
              "type" : "string"
            },
            "keyPath" : {
              "type" : "string"
            },
            "encryptedPassphrase" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SSHKeyReferenceCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSHCredentialSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "userName" ],
          "properties" : {
            "userName" : {
              "type" : "string"
            },
            "key" : {
              "type" : "string"
            },
            "encryptedPassphrase" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SSHKeySpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "auth" ],
          "properties" : {
            "port" : {
              "type" : "integer",
              "format" : "int32"
            },
            "auth" : {
              "$ref" : "#/definitions/SSHAuthDTO"
            }
          }
        } ]
      },
      "SSHPasswordCredentialDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SSHCredentialSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "password", "userName" ],
          "properties" : {
            "userName" : {
              "type" : "string"
            },
            "password" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SecretDTOV2" : {
        "type" : "object",
        "required" : [ "identifier", "name", "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SecretFile", "SecretText", "SSHKey", "WinRmCredentials" ]
          },
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/SecretSpecDTO"
          }
        }
      },
      "SecretFileSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "secretManagerIdentifier" ],
          "properties" : {
            "secretManagerIdentifier" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SecretResponseWrapper" : {
        "type" : "object",
        "required" : [ "secret" ],
        "properties" : {
          "secret" : {
            "$ref" : "#/definitions/SecretDTOV2"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "updatedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "draft" : {
            "type" : "boolean"
          }
        }
      },
      "SecretSpecDTO" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "errorMessageForInvalidYaml" : {
            "type" : "string"
          }
        }
      },
      "SecretTextSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "secretManagerIdentifier", "valueType" ],
          "properties" : {
            "secretManagerIdentifier" : {
              "type" : "string"
            },
            "valueType" : {
              "type" : "string",
              "enum" : [ "Inline", "Reference" ]
            },
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "TGTGenerationSpecDTO" : {
        "type" : "object",
        "discriminator" : "tgtGenerationMethod"
      },
      "TGTKeyTabFilePathSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/TGTGenerationSpecDTO"
        }, {
          "type" : "object",
          "properties" : {
            "keyPath" : {
              "type" : "string"
            }
          }
        } ]
      },
      "TGTPasswordSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/TGTGenerationSpecDTO"
        }, {
          "type" : "object",
          "properties" : {
            "password" : {
              "type" : "string"
            }
          }
        } ]
      },
      "WinRmAuthDTO" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "spec" : {
            "$ref" : "#/definitions/BaseWinRmSpecDTO"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NTLM", "Kerberos" ]
          }
        }
      },
      "WinRmCredentialsSpecDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretSpecDTO"
        }, {
          "type" : "object",
          "required" : [ "auth" ],
          "properties" : {
            "port" : {
              "type" : "integer",
              "format" : "int32"
            },
            "auth" : {
              "$ref" : "#/definitions/WinRmAuthDTO"
            }
          }
        } ]
      },
      "SecretResourceFilterDTO" : {
        "type" : "object",
        "properties" : {
          "identifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "searchTerm" : {
            "type" : "string"
          },
          "secretTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SecretFile", "SecretText", "SSHKey", "WinRmCredentials" ]
            }
          },
          "sourceCategory" : {
            "type" : "string",
            "enum" : [ "CLOUD_PROVIDER", "SECRET_MANAGER", "CLOUD_COST", "ARTIFACTORY", "CODE_REPO", "MONITORING", "TICKETING" ]
          },
          "includeSecretsFromEverySubScope" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseSecretResponseWrapper" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/SecretResponseWrapper"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SecretRequestWrapper" : {
        "type" : "object",
        "required" : [ "secret" ],
        "properties" : {
          "secret" : {
            "$ref" : "#/definitions/SecretDTOV2"
          }
        }
      },
      "ResponseSecretValidationResultDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/SecretValidationResultDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SecretValidationResultDTO" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "SSHKeyValidationMetadata" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretValidationMetaData"
        }, {
          "type" : "object",
          "required" : [ "host" ],
          "properties" : {
            "host" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SecretValidationMetaData" : {
        "type" : "object",
        "required" : [ "type" ],
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SecretFile", "SecretText", "SSHKey", "WinRmCredentials" ]
          }
        }
      },
      "WinRmCredentialsValidationMetadata" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SecretValidationMetaData"
        }, {
          "type" : "object",
          "required" : [ "host" ],
          "properties" : {
            "host" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ResponseOrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/OrganizationResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "OrganizationRequest" : {
        "type" : "object",
        "required" : [ "organization" ],
        "properties" : {
          "organization" : {
            "$ref" : "#/definitions/Organization"
          }
        }
      },
      "PageOrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OrganizationResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageOrganizationResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageOrganizationResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageProjectResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ProjectResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageProjectResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageProjectResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseProjectResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ProjectResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ProjectRequest" : {
        "type" : "object",
        "required" : [ "project" ],
        "properties" : {
          "project" : {
            "$ref" : "#/definitions/Project"
          }
        }
      },
      "ResponseTokenDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/TokenDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TokenDTO" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "apiKeyIdentifier", "apiKeyType", "identifier", "name", "parentIdentifier" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "validFrom" : {
            "type" : "integer",
            "format" : "int64"
          },
          "validTo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "scheduledExpireTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "valid" : {
            "type" : "boolean"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "apiKeyIdentifier" : {
            "type" : "string"
          },
          "parentIdentifier" : {
            "type" : "string"
          },
          "apiKeyType" : {
            "type" : "string",
            "enum" : [ "USER", "SERVICE_ACCOUNT" ]
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "encodedPassword" : {
            "type" : "string"
          }
        }
      },
      "PageTokenAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TokenAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageTokenAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageTokenAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TokenAggregateDTO" : {
        "type" : "object",
        "required" : [ "createdAt", "expiryAt", "lastModifiedAt", "token" ],
        "properties" : {
          "token" : {
            "$ref" : "#/definitions/TokenDTO"
          },
          "expiryAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AccessControlCheckError" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "code" : {
            "type" : "string",
            "enum" : [ "DEFAULT_ERROR_CODE", "INVALID_ARGUMENT", "INVALID_EMAIL", "DOMAIN_NOT_ALLOWED_TO_REGISTER", "COMMNITY_EDITION_NOT_FOUND", "DEPLOY_MODE_IS_NOT_ON_PREM", "USER_ALREADY_REGISTERED", "USER_INVITATION_DOES_NOT_EXIST", "USER_DOES_NOT_EXIST", "USER_INVITE_OPERATION_FAILED", "USER_DISABLED", "ACCOUNT_DOES_NOT_EXIST", "INACTIVE_ACCOUNT", "ACCOUNT_MIGRATED", "USER_DOMAIN_NOT_ALLOWED", "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED", "RESOURCE_NOT_FOUND", "INVALID_FORMAT", "ROLE_DOES_NOT_EXIST", "EMAIL_NOT_VERIFIED", "EMAIL_VERIFICATION_TOKEN_NOT_FOUND", "INVALID_TOKEN", "REVOKED_TOKEN", "INVALID_CAPTCHA_TOKEN", "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS", "EXPIRED_TOKEN", "TOKEN_ALREADY_REFRESHED_ONCE", "ACCESS_DENIED", "NG_ACCESS_DENIED", "INVALID_CREDENTIAL", "INVALID_CREDENTIALS_THIRD_PARTY", "INVALID_KEY", "INVALID_CONNECTOR_TYPE", "INVALID_KEYPATH", "INVALID_VARIABLE", "UNKNOWN_HOST", "UNREACHABLE_HOST", "INVALID_PORT", "SSH_SESSION_TIMEOUT", "SOCKET_CONNECTION_ERROR", "CONNECTION_ERROR", "SOCKET_CONNECTION_TIMEOUT", "CONNECTION_TIMEOUT", "SSH_CONNECTION_ERROR", "USER_GROUP_ERROR", "INVALID_EXECUTION_ID", "ERROR_IN_GETTING_CHANNEL_STREAMS", "UNEXPECTED", "UNKNOWN_ERROR", "UNKNOWN_EXECUTOR_TYPE_ERROR", "DUPLICATE_STATE_NAMES", "TRANSITION_NOT_LINKED", "TRANSITION_TO_INCORRECT_STATE", "TRANSITION_TYPE_NULL", "STATES_WITH_DUP_TRANSITIONS", "BARRIERS_NOT_RUNNING_CONCURRENTLY", "NON_FORK_STATES", "NON_REPEAT_STATES", "INITIAL_STATE_NOT_DEFINED", "FILE_INTEGRITY_CHECK_FAILED", "INVALID_URL", "FILE_DOWNLOAD_FAILED", "PLATFORM_SOFTWARE_DELETE_ERROR", "INVALID_CSV_FILE", "INVALID_REQUEST", "SCHEMA_VALIDATION_FAILED", "FILTER_CREATION_ERROR", "INVALID_YAML_ERROR", "PLAN_CREATION_ERROR", "INVALID_INFRA_STATE", "PIPELINE_ALREADY_TRIGGERED", "NON_EXISTING_PIPELINE", "DUPLICATE_COMMAND_NAMES", "INVALID_PIPELINE", "COMMAND_DOES_NOT_EXIST", "DUPLICATE_ARTIFACTSTREAM_NAMES", "DUPLICATE_HOST_NAMES", "STATE_NOT_FOR_TYPE", "STATE_MACHINE_ISSUE", "STATE_DISCONTINUE_FAILED", "STATE_PAUSE_FAILED", "PAUSE_ALL_ALREADY", "RESUME_ALL_ALREADY", "ROLLBACK_ALREADY", "ABORT_ALL_ALREADY", "EXPIRE_ALL_ALREADY", "RETRY_FAILED", "UNKNOWN_ARTIFACT_TYPE", "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE", "INIT_TIMEOUT", "LICENSE_EXPIRED", "NOT_LICENSED", "REQUEST_TIMEOUT", "WORKFLOW_ALREADY_TRIGGERED", "JENKINS_ERROR", "INVALID_ARTIFACT_SOURCE", "INVALID_ARTIFACT_SERVER", "INVALID_CLOUD_PROVIDER", "UPDATE_NOT_ALLOWED", "DELETE_NOT_ALLOWED", "APPDYNAMICS_CONFIGURATION_ERROR", "APM_CONFIGURATION_ERROR", "SPLUNK_CONFIGURATION_ERROR", "ELK_CONFIGURATION_ERROR", "LOGZ_CONFIGURATION_ERROR", "SUMO_CONFIGURATION_ERROR", "INSTANA_CONFIGURATION_ERROR", "APPDYNAMICS_ERROR", "STACKDRIVER_ERROR", "STACKDRIVER_CONFIGURATION_ERROR", "NEWRELIC_CONFIGURATION_ERROR", "NEWRELIC_ERROR", "DYNA_TRACE_CONFIGURATION_ERROR", "DYNA_TRACE_ERROR", "CLOUDWATCH_ERROR", "CLOUDWATCH_CONFIGURATION_ERROR", "PROMETHEUS_CONFIGURATION_ERROR", "DATA_DOG_CONFIGURATION_ERROR", "SERVICE_GUARD_CONFIGURATION_ERROR", "ENCRYPTION_NOT_CONFIGURED", "UNAVAILABLE_DELEGATES", "WORKFLOW_EXECUTION_IN_PROGRESS", "PIPELINE_EXECUTION_IN_PROGRESS", "AWS_ACCESS_DENIED", "AWS_CLUSTER_NOT_FOUND", "AWS_SERVICE_NOT_FOUND", "IMAGE_NOT_FOUND", "ILLEGAL_ARGUMENT", "IMAGE_TAG_NOT_FOUND", "DELEGATE_NOT_AVAILABLE", "INVALID_YAML_PAYLOAD", "AUTHENTICATION_ERROR", "AUTHORIZATION_ERROR", "UNRECOGNIZED_YAML_FIELDS", "COULD_NOT_MAP_BEFORE_YAML", "MISSING_BEFORE_YAML", "MISSING_YAML", "NON_EMPTY_DELETIONS", "GENERAL_YAML_ERROR", "GENERAL_YAML_INFO", "YAML_GIT_SYNC_ERROR", "GIT_CONNECTION_ERROR", "GIT_ERROR", "ARTIFACT_SERVER_ERROR", "ENCRYPT_DECRYPT_ERROR", "SECRET_MANAGEMENT_ERROR", "SECRET_NOT_FOUND", "KMS_OPERATION_ERROR", "GCP_KMS_OPERATION_ERROR", "VAULT_OPERATION_ERROR", "AWS_SECRETS_MANAGER_OPERATION_ERROR", "AZURE_KEY_VAULT_OPERATION_ERROR", "CYBERARK_OPERATION_ERROR", "UNSUPPORTED_OPERATION_EXCEPTION", "FEATURE_UNAVAILABLE", "GENERAL_ERROR", "BASELINE_CONFIGURATION_ERROR", "SAML_IDP_CONFIGURATION_NOT_AVAILABLE", "INVALID_AUTHENTICATION_MECHANISM", "INVALID_SAML_CONFIGURATION", "INVALID_OAUTH_CONFIGURATION", "INVALID_LDAP_CONFIGURATION", "USER_GROUP_SYNC_FAILURE", "USER_GROUP_ALREADY_EXIST", "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION", "EXPLANATION", "HINT", "NOT_WHITELISTED_IP", "INVALID_TOTP_TOKEN", "EMAIL_FAILED", "SSL_HANDSHAKE_FAILED", "NO_APPS_ASSIGNED", "INVALID_INFRA_CONFIGURATION", "TEMPLATES_LINKED", "USER_HAS_NO_PERMISSIONS", "USER_NOT_AUTHORIZED", "USER_ALREADY_PRESENT", "INVALID_USAGE_RESTRICTION", "USAGE_RESTRICTION_ERROR", "STATE_EXECUTION_INSTANCE_NOT_FOUND", "DELEGATE_TASK_RETRY", "KUBERNETES_API_TASK_EXCEPTION", "KUBERNETES_TASK_EXCEPTION", "KUBERNETES_YAML_ERROR", "SAVE_FILE_INTO_GCP_STORAGE_FAILED", "READ_FILE_FROM_GCP_STORAGE_FAILED", "FILE_NOT_FOUND_ERROR", "USAGE_LIMITS_EXCEEDED", "EVENT_PUBLISH_FAILED", "JIRA_ERROR", "EXPRESSION_EVALUATION_FAILED", "KUBERNETES_VALUES_ERROR", "KUBERNETES_CLUSTER_ERROR", "INCORRECT_SIGN_IN_MECHANISM", "OAUTH_LOGIN_FAILED", "INVALID_TERRAFORM_TARGETS_REQUEST", "TERRAFORM_EXECUTION_ERROR", "FILE_READ_FAILED", "FILE_SIZE_EXCEEDS_LIMIT", "CLUSTER_NOT_FOUND", "MARKETPLACE_TOKEN_NOT_FOUND", "INVALID_MARKETPLACE_TOKEN", "INVALID_TICKETING_SERVER", "SERVICENOW_ERROR", "PASSWORD_EXPIRED", "USER_LOCKED", "PASSWORD_STRENGTH_CHECK_FAILED", "ACCOUNT_DISABLED", "INVALID_ACCOUNT_PERMISSION", "PAGERDUTY_ERROR", "HEALTH_ERROR", "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED", "DOMAIN_WHITELIST_FILTER_CHECK_FAILED", "INVALID_DASHBOARD_UPDATE_REQUEST", "DUPLICATE_FIELD", "INVALID_AZURE_VAULT_CONFIGURATION", "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS", "INVALID_ROLLBACK", "DATA_COLLECTION_ERROR", "SUMO_DATA_COLLECTION_ERROR", "DEPLOYMENT_GOVERNANCE_ERROR", "BATCH_PROCESSING_ERROR", "GRAPHQL_ERROR", "FILE_CREATE_ERROR", "ILLEGAL_STATE", "GIT_DIFF_COMMIT_NOT_IN_ORDER", "FAILED_TO_ACQUIRE_PERSISTENT_LOCK", "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK", "POD_NOT_FOUND_ERROR", "COMMAND_EXECUTION_ERROR", "REGISTRY_EXCEPTION", "ENGINE_INTERRUPT_PROCESSING_EXCEPTION", "ENGINE_IO_EXCEPTION", "ENGINE_OUTCOME_EXCEPTION", "ENGINE_SWEEPING_OUTPUT_EXCEPTION", "CACHE_NOT_FOUND_EXCEPTION", "ENGINE_ENTITY_UPDATE_EXCEPTION", "SHELL_EXECUTION_EXCEPTION", "TEMPLATE_NOT_FOUND", "AZURE_SERVICE_EXCEPTION", "AZURE_CLIENT_EXCEPTION", "GIT_UNSEEN_REMOTE_HEAD_COMMIT", "TIMEOUT_ENGINE_EXCEPTION", "NO_AVAILABLE_DELEGATES", "NO_INSTALLED_DELEGATES", "DUPLICATE_DELEGATE_EXCEPTION", "GCP_MARKETPLACE_EXCEPTION", "MISSING_DEFAULT_GOOGLE_CREDENTIALS", "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS", "OPTIMISTIC_LOCKING_EXCEPTION", "NG_PIPELINE_EXECUTION_EXCEPTION", "NG_PIPELINE_CREATE_EXCEPTION", "RESOURCE_NOT_FOUND_EXCEPTION", "PMS_INITIALIZE_SDK_EXCEPTION", "UNEXPECTED_SNIPPET_EXCEPTION", "UNEXPECTED_SCHEMA_EXCEPTION", "CONNECTOR_VALIDATION_EXCEPTION", "TIMESCALE_NOT_AVAILABLE", "MIGRATION_EXCEPTION", "REQUEST_PROCESSING_INTERRUPTED", "SECRET_MANAGER_ID_NOT_FOUND", "GCP_SECRET_MANAGER_OPERATION_ERROR", "GCP_SECRET_OPERATION_ERROR", "GIT_OPERATION_ERROR", "TASK_FAILURE_ERROR", "INSTANCE_STATS_PROCESS_ERROR", "INSTANCE_STATS_MIGRATION_ERROR", "DEPLOYMENT_MIGRATION_ERROR", "CG_LICENSE_USAGE_ERROR", "INSTANCE_STATS_AGGREGATION_ERROR", "UNRESOLVED_EXPRESSIONS_ERROR", "KRYO_HANDLER_NOT_FOUND_ERROR", "DELEGATE_ERROR_HANDLER_EXCEPTION", "UNEXPECTED_TYPE_ERROR", "EXCEPTION_HANDLER_NOT_FOUND", "CONNECTOR_NOT_FOUND_EXCEPTION", "GCP_SERVER_ERROR", "HTTP_RESPONSE_EXCEPTION", "SCM_NOT_FOUND_ERROR", "SCM_CONFLICT_ERROR", "SCM_UNPROCESSABLE_ENTITY", "PROCESS_EXECUTION_EXCEPTION", "SCM_UNAUTHORIZED", "SCM_INTERNAL_SERVER_ERROR", "DATA", "CONTEXT", "PR_CREATION_ERROR", "URL_NOT_REACHABLE", "URL_NOT_PROVIDED", "ENGINE_EXPRESSION_EVALUATION_ERROR", "ENGINE_FUNCTOR_ERROR", "JIRA_CLIENT_ERROR", "SCM_NOT_MODIFIED", "APPROVAL_STEP_NG_ERROR", "BUCKET_SERVER_ERROR", "GIT_SYNC_ERROR", "TEMPLATE_EXCEPTION", "ENTITY_REFERENCE_EXCEPTION", "INVALID_INPUT_SET", "INVALID_OVERLAY_INPUT_SET", "RESOURCE_ALREADY_EXISTS", "INVALID_JSON_PAYLOAD", "POLICY_EVALUATION_FAILURE", "POLICY_SET_ERROR", "INVALID_ARTIFACTORY_REGISTRY_REQUEST", "INVALID_NEXUS_REGISTRY_REQUEST", "ENTITY_NOT_FOUND", "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST", "AZURE_AUTHENTICATION_ERROR", "AZURE_CONFIG_ERROR", "DATA_PROCESSING_ERROR", "AWS_IAM_ERROR", "AWS_CF_ERROR", "INVALID_AZURE_AKS_REQUEST", "SERVERLESS_EXECUTION_ERROR" ]
          },
          "message" : {
            "type" : "string"
          },
          "correlationId" : {
            "type" : "string"
          },
          "detailedMessage" : {
            "type" : "string"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          },
          "metadata" : {
            "$ref" : "#/definitions/ErrorMetadataDTO"
          },
          "failedPermissionChecks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PermissionCheck"
            }
          }
        }
      },
      "PermissionCheck" : {
        "type" : "object",
        "properties" : {
          "resourceScope" : {
            "$ref" : "#/definitions/ResourceScope"
          },
          "resourceType" : {
            "type" : "string"
          },
          "resourceIdentifier" : {
            "type" : "string"
          },
          "permission" : {
            "type" : "string"
          }
        }
      },
      "ResourceScope" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          }
        }
      },
      "ResponseUserGroupDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/UserGroupDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EmailConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfig"
        }, {
          "type" : "object",
          "properties" : {
            "groupEmail" : {
              "type" : "string"
            }
          }
        } ]
      },
      "MicrosoftTeamsConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfig"
        }, {
          "type" : "object",
          "properties" : {
            "microsoftTeamsWebhookUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "NotificationSettingConfig" : {
        "type" : "object",
        "required" : [ "type" ],
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SLACK", "PAGERDUTY", "MSTEAMS" ]
          }
        }
      },
      "PagerDutyConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfig"
        }, {
          "type" : "object",
          "properties" : {
            "pagerDutyKey" : {
              "type" : "string"
            }
          }
        } ]
      },
      "RestResponseUserGroup" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/UserGroup"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "SlackConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NotificationSettingConfig"
        }, {
          "type" : "object",
          "properties" : {
            "slackWebhookUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SamlLinkGroupRequest" : {
        "type" : "object",
        "properties" : {
          "samlGroupName" : {
            "type" : "string"
          }
        }
      },
      "PageUserMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserMetadataDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageUserMetadataDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageUserMetadataDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "UserFilter" : {
        "type" : "object",
        "properties" : {
          "searchTerm" : {
            "type" : "string"
          },
          "identifiers" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "parentFilter" : {
            "type" : "string",
            "enum" : [ "NO_PARENT_SCOPES", "INCLUDE_PARENT_SCOPES", "STRICTLY_PARENT_SCOPES" ]
          }
        }
      },
      "ResponseListUserGroupDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroupDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "UserGroupFilterDTO" : {
        "type" : "object",
        "properties" : {
          "databaseIdFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "identifierFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "userIdentifierFilter" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "searchTerm" : {
            "type" : "string"
          }
        }
      },
      "PageUserGroupDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserGroupDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageUserGroupDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageUserGroupDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AzureSubscriptionDTO" : {
        "type" : "object",
        "required" : [ "subscriptionId", "subscriptionName" ],
        "properties" : {
          "subscriptionName" : {
            "type" : "string"
          },
          "subscriptionId" : {
            "type" : "string"
          }
        }
      },
      "AzureSubscriptionsDTO" : {
        "type" : "object",
        "properties" : {
          "subscriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AzureSubscriptionDTO"
            }
          }
        }
      },
      "ResponseAzureSubscriptionsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AzureSubscriptionsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AzureResourceGroupDTO" : {
        "type" : "object",
        "required" : [ "resourceGroup" ],
        "properties" : {
          "resourceGroup" : {
            "type" : "string"
          }
        }
      },
      "AzureResourceGroupsDTO" : {
        "type" : "object",
        "properties" : {
          "resourceGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AzureResourceGroupDTO"
            }
          }
        }
      },
      "ResponseAzureResourceGroupsDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AzureResourceGroupsDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AzureClusterDTO" : {
        "type" : "object",
        "required" : [ "cluster" ],
        "properties" : {
          "cluster" : {
            "type" : "string"
          }
        }
      },
      "AzureClustersDTO" : {
        "type" : "object",
        "properties" : {
          "clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AzureClusterDTO"
            }
          }
        }
      },
      "ResponseAzureClustersDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AzureClustersDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageServiceResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceResponseDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageServiceResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageServiceResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceResponseDTO" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "deleted" : {
            "type" : "boolean"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          },
          "yaml" : {
            "type" : "string"
          }
        }
      },
      "ServiceRequestDTO" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseServiceResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseSetHelmCommandFlagType" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "Fetch", "Template", "Pull", "Install", "Upgrade", "Rollback", "History", "Delete", "Uninstall", "List" ]
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageServiceResponse" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceResponse"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageServiceResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageServiceResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceResponse" : {
        "type" : "object",
        "properties" : {
          "service" : {
            "$ref" : "#/definitions/ServiceResponseDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseServiceResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListServiceResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceResponse"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseValidationResultDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ValidationResultDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ValidationResultDTO" : {
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      },
      "NgSmtpDTO" : {
        "type" : "object",
        "required" : [ "name", "value" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/definitions/SmtpConfigDTO"
          }
        }
      },
      "ResponseNgSmtpDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/NgSmtpDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SmtpConfigDTO" : {
        "type" : "object",
        "required" : [ "host", "port" ],
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fromAddress" : {
            "type" : "string"
          },
          "useSSL" : {
            "type" : "boolean"
          },
          "startTLS" : {
            "type" : "boolean"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "GatewayAccountRequestDTO" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "accountName" : {
            "type" : "string"
          },
          "companyName" : {
            "type" : "string"
          },
          "defaultExperience" : {
            "type" : "string",
            "enum" : [ "NG", "CG" ]
          },
          "createdFromNG" : {
            "type" : "boolean"
          },
          "nextGenEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "ResponseUserInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/UserInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "UserInfo" : {
        "type" : "object",
        "required" : [ "uuid" ],
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "defaultAccountId" : {
            "type" : "string"
          },
          "intent" : {
            "type" : "string"
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/GatewayAccountRequestDTO"
            }
          },
          "admin" : {
            "type" : "boolean"
          },
          "twoFactorAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "emailVerified" : {
            "type" : "boolean"
          },
          "locked" : {
            "type" : "boolean"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "signupAction" : {
            "type" : "string"
          },
          "edition" : {
            "type" : "string"
          },
          "billingFrequency" : {
            "type" : "string"
          },
          "utmInfo" : {
            "$ref" : "#/definitions/UtmInfo"
          },
          "externallyManaged" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePasswordChangeResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "string",
            "enum" : [ "PASSWORD_CHANGED", "INCORRECT_CURRENT_PASSWORD", "PASSWORD_STRENGTH_VIOLATED" ]
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PasswordChangeDTO" : {
        "type" : "object",
        "properties" : {
          "currentPassword" : {
            "type" : "string"
          },
          "newPassword" : {
            "type" : "string"
          }
        }
      },
      "PageProject" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Project"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageProject" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageProject"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListProject" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Project"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ActiveProjectsCountDTO" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseActiveProjectsCountDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ActiveProjectsCountDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseUserAggregate" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/UserAggregate"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "UserAggregate" : {
        "type" : "object",
        "required" : [ "roleAssignmentMetadata", "user" ],
        "properties" : {
          "user" : {
            "$ref" : "#/definitions/UserMetadataDTO"
          },
          "roleAssignmentMetadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignmentMetadataDTO"
            }
          }
        }
      },
      "PageUserAggregate" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserAggregate"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageUserAggregate" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageUserAggregate"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TwoFactorAuthSettingsInfo" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "twoFactorAuthenticationEnabled" : {
            "type" : "boolean"
          },
          "mechanism" : {
            "type" : "string",
            "enum" : [ "TOTP" ]
          },
          "totpSecretKey" : {
            "type" : "string"
          },
          "totpqrurl" : {
            "type" : "string"
          }
        }
      },
      "ResponseTwoFactorAuthSettingsInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/TwoFactorAuthSettingsInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AddUsersResponse" : {
        "type" : "object",
        "properties" : {
          "addUserResponseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "enum" : [ "USER_INVITED_SUCCESSFULLY", "USER_ADDED_SUCCESSFULLY", "USER_ALREADY_ADDED", "USER_ALREADY_INVITED", "FAIL" ]
            }
          }
        }
      },
      "ResponseAddUsersResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/AddUsersResponse"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AddUsers" : {
        "type" : "object",
        "required" : [ "emails" ],
        "properties" : {
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 100,
            "minItems" : 0
          },
          "roleBindings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleBinding"
            }
          },
          "userGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseListExecutionStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Running", "AsyncWaiting", "TaskWaiting", "TimedWaiting", "Failed", "Errored", "IgnoreFailed", "NotStarted", "Expired", "Aborted", "Discontinuing", "Queued", "Paused", "ResourceWaiting", "InterventionWaiting", "ApprovalWaiting", "Success", "Suspended", "Skipped", "Pausing", "ApprovalRejected", "NOT_STARTED", "INTERVENTION_WAITING", "APPROVAL_WAITING", "APPROVAL_REJECTED", "WAITING" ]
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ArtifactSummary" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ArtifactsSummary" : {
        "type" : "object",
        "properties" : {
          "primary" : {
            "$ref" : "#/definitions/ArtifactSummary"
          },
          "sidecars" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ArtifactSummary"
            }
          }
        }
      },
      "CDStageModuleInfo" : {
        "type" : "object",
        "properties" : {
          "serviceInfo" : {
            "$ref" : "#/definitions/ServiceExecutionSummary"
          },
          "infraExecutionSummary" : {
            "$ref" : "#/definitions/InfraExecutionSummary"
          },
          "nodeExecutionId" : {
            "type" : "string"
          }
        }
      },
      "InfraExecutionSummary" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ResponseCDStageModuleInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/CDStageModuleInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceExecutionSummary" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "deploymentType" : {
            "type" : "string"
          },
          "artifacts" : {
            "$ref" : "#/definitions/ArtifactsSummary"
          }
        }
      },
      "AbortFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "Abort" ]
            }
          }
        } ]
      },
      "AcrArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "registry", "repository", "subscriptionId" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "subscriptionId" : {
              "type" : "string"
            },
            "registry" : {
              "type" : "string"
            },
            "repository" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            }
          }
        } ]
      },
      "AddRuleYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "AddRule" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/AddRuleYamlSpec"
            }
          }
        } ]
      },
      "AddRuleYamlSpec" : {
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "integer",
            "format" : "int32"
          },
          "distribution" : {
            "$ref" : "#/definitions/DistributionYamlSpec"
          },
          "serve" : {
            "$ref" : "#/definitions/Serve"
          },
          "clauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Clause"
            }
          }
        }
      },
      "AddSegmentToVariationTargetMapYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "AddSegmentToVariationTargetMap" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/AddSegmentToVariationTargetMapYamlSpec"
            }
          }
        } ]
      },
      "AddSegmentToVariationTargetMapYamlSpec" : {
        "type" : "object",
        "required" : [ "segments", "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "AddTargetsToVariationTargetMapYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "AddTargetsToVariationTargetMap" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/AddTargetsToVariationTargetMapYamlSpec"
            }
          }
        } ]
      },
      "AddTargetsToVariationTargetMapYamlSpec" : {
        "type" : "object",
        "required" : [ "targets", "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ApprovalStageConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StageInfoConfig"
        }, {
          "type" : "object",
          "required" : [ "execution" ],
          "properties" : {
            "execution" : {
              "$ref" : "#/definitions/ExecutionElementConfig"
            }
          }
        } ]
      },
      "ApproverInputInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "defaultValue" : {
            "type" : "string"
          }
        }
      },
      "Approvers" : {
        "type" : "object",
        "required" : [ "disallowPipelineExecutor", "minimumCount" ],
        "properties" : {
          "userGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "minimumCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disallowPipelineExecutor" : {
            "type" : "boolean"
          }
        }
      },
      "ArtifactConfig" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "ArtifactListConfig" : {
        "type" : "object",
        "properties" : {
          "primary" : {
            "$ref" : "#/definitions/PrimaryArtifact"
          },
          "sidecars" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SidecarArtifactWrapper"
            }
          }
        }
      },
      "ArtifactOverrideSetWrapper" : {
        "type" : "object",
        "properties" : {
          "overrideSet" : {
            "$ref" : "#/definitions/ArtifactOverrideSets"
          }
        }
      },
      "ArtifactOverrideSets" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "artifacts" : {
            "$ref" : "#/definitions/ArtifactListConfig"
          }
        }
      },
      "ArtifactoryRegistryArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "repository", "repositoryFormat" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "repository" : {
              "type" : "string"
            },
            "artifactPath" : {
              "type" : "string"
            },
            "artifactPathFilter" : {
              "type" : "string"
            },
            "artifactDirectory" : {
              "type" : "string"
            },
            "repositoryFormat" : {
              "type" : "string",
              "enum" : [ "docker", "generic" ]
            },
            "repositoryUrl" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ArtifactoryStoreConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "repositoryName" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "repositoryName" : {
              "type" : "string"
            },
            "artifactPaths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BarrierInfoConfig" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "BarrierStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "barrierRef" ],
          "properties" : {
            "barrierRef" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BitbucketStore" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "gitFetchType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "gitFetchType" : {
              "type" : "string",
              "enum" : [ "Branch", "Commit" ]
            },
            "branch" : {
              "type" : "string"
            },
            "commitId" : {
              "type" : "string"
            },
            "paths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "folderPath" : {
              "type" : "string"
            },
            "repoName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "BranchBuildSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BuildSpec"
        }, {
          "type" : "object",
          "required" : [ "branch" ],
          "properties" : {
            "branch" : {
              "type" : "string"
            }
          }
        } ]
      },
      "Build" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "branch", "tag", "PR" ]
          },
          "spec" : {
            "$ref" : "#/definitions/BuildSpec"
          }
        }
      },
      "BuildSpec" : {
        "type" : "object"
      },
      "CIProperties" : {
        "type" : "object",
        "properties" : {
          "codebase" : {
            "$ref" : "#/definitions/CodeBase"
          }
        }
      },
      "Clause" : {
        "type" : "object",
        "required" : [ "attribute", "id", "negate", "op", "values" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "attribute" : {
            "type" : "string"
          },
          "op" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "negate" : {
            "type" : "boolean"
          }
        }
      },
      "ClauseYamlSpec" : {
        "type" : "object",
        "required" : [ "op", "values" ],
        "properties" : {
          "attribute" : {
            "type" : "string"
          },
          "op" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CloudformationCreateStackStepConfiguration" : {
        "type" : "object",
        "required" : [ "connectorRef", "region", "stackName", "templateFile" ],
        "properties" : {
          "stackName" : {
            "type" : "string"
          },
          "templateFile" : {
            "$ref" : "#/definitions/CloudformationTemplateFile"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CloudformationParametersFileSpec"
            }
          },
          "connectorRef" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "roleArn" : {
            "type" : "string"
          },
          "capabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "$ref" : "#/definitions/CloudformationTags"
          },
          "skipOnStackStatuses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "parameterOverrides" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          }
        }
      },
      "CloudformationCreateStackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration", "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            },
            "configuration" : {
              "$ref" : "#/definitions/CloudformationCreateStackStepConfiguration"
            }
          }
        } ]
      },
      "CloudformationDeleteStackStepConfiguration" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/CloudformationDeleteStackStepConfigurationSpec"
          }
        }
      },
      "CloudformationDeleteStackStepConfigurationSpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "CloudformationDeleteStackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration" ],
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            },
            "configuration" : {
              "$ref" : "#/definitions/CloudformationDeleteStackStepConfiguration"
            }
          }
        } ]
      },
      "CloudformationParametersFileSpec" : {
        "type" : "object",
        "required" : [ "identifier", "store" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "store" : {
            "$ref" : "#/definitions/StoreConfigWrapper"
          }
        }
      },
      "CloudformationRollbackStepConfiguration" : {
        "type" : "object",
        "required" : [ "provisionerIdentifier" ],
        "properties" : {
          "provisionerIdentifier" : {
            "type" : "string"
          }
        }
      },
      "CloudformationRollbackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration" ],
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "configuration" : {
              "$ref" : "#/definitions/CloudformationRollbackStepConfiguration"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "CloudformationTags" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/CloudformationTagsFileSpec"
          }
        }
      },
      "CloudformationTagsFileSpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "CloudformationTemplateFile" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/CloudformationTemplateFileSpec"
          }
        }
      },
      "CloudformationTemplateFileSpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "CodeBase" : {
        "type" : "object",
        "required" : [ "build", "connectorRef" ],
        "properties" : {
          "connectorRef" : {
            "type" : "string"
          },
          "repoName" : {
            "type" : "string"
          },
          "build" : {
            "$ref" : "#/definitions/Build"
          },
          "depth" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sslVerify" : {
            "type" : "boolean"
          },
          "prCloneStrategy" : {
            "type" : "string",
            "enum" : [ "MergeCommit", "SourceBranch" ]
          },
          "resources" : {
            "$ref" : "#/definitions/ContainerResource"
          }
        }
      },
      "Condition" : {
        "type" : "object",
        "required" : [ "key", "operator" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "equals", "not equals", "in", "not in" ]
          }
        }
      },
      "ContainerResource" : {
        "type" : "object",
        "required" : [ "limits" ],
        "properties" : {
          "limits" : {
            "$ref" : "#/definitions/Limits"
          }
        }
      },
      "CountInstanceSelection" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InstanceSelectionBase"
        }, {
          "type" : "object",
          "properties" : {
            "count" : {
              "$ref" : "#/definitions/ParameterFieldString"
            }
          }
        } ]
      },
      "CriteriaSpec" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "CriteriaSpecWrapper" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Jexl", "KeyValues" ]
          },
          "spec" : {
            "$ref" : "#/definitions/CriteriaSpec"
          }
        }
      },
      "CustomArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "version" ],
          "properties" : {
            "version" : {
              "$ref" : "#/definitions/ParameterFieldString"
            }
          }
        } ]
      },
      "CustomPolicyStepSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PolicySpec"
        }, {
          "type" : "object",
          "required" : [ "payload" ],
          "properties" : {
            "payload" : {
              "type" : "string"
            }
          }
        } ]
      },
      "DeleteManifestPathSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DeleteResourcesBaseSpec"
        }, {
          "type" : "object",
          "properties" : {
            "manifestPaths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "allManifestPaths" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "DeleteReleaseNameSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DeleteResourcesBaseSpec"
        }, {
          "type" : "object",
          "properties" : {
            "deleteNamespace" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "DeleteResourceNameSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DeleteResourcesBaseSpec"
        }, {
          "type" : "object",
          "required" : [ "resourceNames" ],
          "properties" : {
            "resourceNames" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "DeleteResourcesBaseSpec" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "DeleteResourcesWrapper" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ResourceName", "ReleaseName", "ManifestPath" ]
          },
          "spec" : {
            "$ref" : "#/definitions/DeleteResourcesBaseSpec"
          }
        }
      },
      "DeploymentStageConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StageInfoConfig"
        }, {
          "type" : "object",
          "required" : [ "execution", "infrastructure", "serviceConfig" ],
          "properties" : {
            "serviceConfig" : {
              "$ref" : "#/definitions/ServiceConfig"
            },
            "infrastructure" : {
              "$ref" : "#/definitions/PipelineInfrastructure"
            },
            "execution" : {
              "$ref" : "#/definitions/ExecutionElementConfig"
            }
          }
        } ]
      },
      "Distribution" : {
        "type" : "object",
        "required" : [ "bucketBy", "variations" ],
        "properties" : {
          "bucketBy" : {
            "type" : "string"
          },
          "variations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/WeightedVariation"
            }
          }
        }
      },
      "DistributionYamlSpec" : {
        "type" : "object",
        "required" : [ "bucketBy" ],
        "properties" : {
          "bucketBy" : {
            "type" : "string"
          },
          "variations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/VariationYamlSpec"
            }
          },
          "clauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ClauseYamlSpec"
            }
          }
        }
      },
      "DockerHubArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "imagePath" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "imagePath" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            }
          }
        } ]
      },
      "EcrArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "imagePath", "region" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "imagePath" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "EnvironmentYaml" : {
        "type" : "object",
        "required" : [ "identifier", "name", "type" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PreProduction", "Production" ]
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExecutionElementConfig" : {
        "type" : "object",
        "required" : [ "steps" ],
        "properties" : {
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionWrapperConfig"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "rollbackSteps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionWrapperConfig"
            }
          }
        }
      },
      "ExecutionTarget" : {
        "type" : "object",
        "properties" : {
          "host" : {
            "type" : "string"
          },
          "connectorRef" : {
            "type" : "string"
          },
          "workingDirectory" : {
            "type" : "string"
          }
        }
      },
      "ExecutionWrapperConfig" : {
        "type" : "object",
        "properties" : {
          "step" : {
            "$ref" : "#/definitions/StepElementConfig"
          },
          "parallel" : {
            "$ref" : "#/definitions/ParallelStepElementConfig"
          },
          "stepGroup" : {
            "$ref" : "#/definitions/StepGroupElementConfig"
          }
        }
      },
      "FailureStrategyActionConfig" : {
        "type" : "object",
        "required" : [ "type" ],
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Ignore", "Retry", "MarkAsSuccess", "Abort", "StageRollback", "StepGroupRollback", "ManualIntervention" ]
          }
        }
      },
      "FailureStrategyConfig" : {
        "type" : "object",
        "required" : [ "onFailure" ],
        "properties" : {
          "onFailure" : {
            "$ref" : "#/definitions/OnFailureConfig"
          }
        }
      },
      "FeatureFlagStageConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StageInfoConfig"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "FlagConfigurationStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "environment", "feature", "instructions" ],
          "properties" : {
            "feature" : {
              "type" : "string"
            },
            "environment" : {
              "type" : "string"
            },
            "instructions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PatchInstruction"
              }
            }
          }
        } ]
      },
      "FlowControlConfig" : {
        "type" : "object",
        "properties" : {
          "barriers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/BarrierInfoConfig"
            }
          }
        }
      },
      "GcrArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "imagePath", "registryHostname" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "registryHostname" : {
              "type" : "string"
            },
            "imagePath" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GcsStoreConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "bucketName" : {
              "type" : "string"
            },
            "folderPath" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitLabStore" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "gitFetchType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "gitFetchType" : {
              "type" : "string",
              "enum" : [ "Branch", "Commit" ]
            },
            "branch" : {
              "type" : "string"
            },
            "commitId" : {
              "type" : "string"
            },
            "paths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "folderPath" : {
              "type" : "string"
            },
            "repoName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GitStore" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "gitFetchType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "gitFetchType" : {
              "type" : "string",
              "enum" : [ "Branch", "Commit" ]
            },
            "branch" : {
              "type" : "string"
            },
            "commitId" : {
              "type" : "string"
            },
            "paths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "folderPath" : {
              "type" : "string"
            },
            "repoName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "GithubStore" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "gitFetchType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "gitFetchType" : {
              "type" : "string",
              "enum" : [ "Branch", "Commit" ]
            },
            "branch" : {
              "type" : "string"
            },
            "commitId" : {
              "type" : "string"
            },
            "paths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "folderPath" : {
              "type" : "string"
            },
            "repoName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HarnessApprovalStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "approvalMessage", "approvers", "includePipelineExecutionHistory" ],
          "properties" : {
            "approvalMessage" : {
              "type" : "string"
            },
            "includePipelineExecutionHistory" : {
              "type" : "boolean"
            },
            "approvers" : {
              "$ref" : "#/definitions/Approvers"
            },
            "approverInputs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApproverInputInfo"
              }
            }
          }
        } ]
      },
      "HelmChartManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "chartName" : {
              "type" : "string"
            },
            "chartVersion" : {
              "type" : "string"
            },
            "helmVersion" : {
              "type" : "string",
              "enum" : [ "V2", "V3", "V380" ]
            },
            "skipResourceVersioning" : {
              "type" : "boolean"
            },
            "commandFlags" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HelmManifestCommandFlag"
              }
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "HelmDeployStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "HelmManifestCommandFlag" : {
        "type" : "object",
        "required" : [ "commandType" ],
        "properties" : {
          "commandType" : {
            "type" : "string",
            "enum" : [ "Fetch", "Template", "Pull", "Install", "Upgrade", "Rollback", "History", "Delete", "Uninstall", "List" ]
          },
          "flag" : {
            "type" : "string"
          }
        }
      },
      "HelmRollbackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "HoldingScope" : {
        "type" : "object",
        "required" : [ "nodeSetupId", "scope" ],
        "properties" : {
          "scope" : {
            "type" : "string"
          },
          "nodeSetupId" : {
            "type" : "string"
          }
        }
      },
      "HttpHeaderConfig" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "HttpStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "method", "url" ],
          "properties" : {
            "url" : {
              "type" : "string"
            },
            "method" : {
              "type" : "string"
            },
            "requestBody" : {
              "type" : "string"
            },
            "assertion" : {
              "type" : "string"
            },
            "outputVariables" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NGVariable"
              }
            },
            "headers" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HttpHeaderConfig"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "HttpStoreConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "IgnoreFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "Ignore" ]
            }
          }
        } ]
      },
      "InfraOverrides" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "$ref" : "#/definitions/EnvironmentYaml"
          },
          "infrastructureDefinition" : {
            "$ref" : "#/definitions/InfrastructureDef"
          }
        }
      },
      "InfraUseFromStage" : {
        "type" : "object",
        "required" : [ "stage" ],
        "properties" : {
          "stage" : {
            "type" : "string"
          },
          "overrides" : {
            "$ref" : "#/definitions/InfraOverrides"
          }
        }
      },
      "Infrastructure" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "InfrastructureDef" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "KubernetesDirect", "KubernetesGcp", "KubernetesAzure", "Pdc", "ServerlessAwsLambda" ]
          },
          "spec" : {
            "$ref" : "#/definitions/Infrastructure"
          },
          "provisioner" : {
            "$ref" : "#/definitions/ExecutionElementConfig"
          }
        }
      },
      "InheritedCloudformationDeleteStackStepConfiguration" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationDeleteStackStepConfigurationSpec"
        }, {
          "type" : "object",
          "required" : [ "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InlineCloudformationDeleteStackStepConfiguration" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationDeleteStackStepConfigurationSpec"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "region", "stackName" ],
          "properties" : {
            "stackName" : {
              "type" : "string"
            },
            "connectorRef" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "roleArn" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InlineCloudformationTagsFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationTagsFileSpec"
        }, {
          "type" : "object",
          "required" : [ "content" ],
          "properties" : {
            "content" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InlineCloudformationTemplateFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationTemplateFileSpec"
        }, {
          "type" : "object",
          "required" : [ "templateBody" ],
          "properties" : {
            "templateBody" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InlineTerraformBackendConfigSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/TerraformBackendConfigSpec"
        }, {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InlineTerraformVarFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/TerraformVarFileSpec"
        }, {
          "type" : "object",
          "properties" : {
            "content" : {
              "type" : "string"
            }
          }
        } ]
      },
      "InputSetValidator" : {
        "type" : "object",
        "properties" : {
          "validatorType" : {
            "type" : "string",
            "enum" : [ "ALLOWED_VALUES", "REGEX" ]
          },
          "parameters" : {
            "type" : "string"
          }
        }
      },
      "InstanceSelectionBase" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "InstanceSelectionWrapper" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Count", "Percentage" ]
          },
          "spec" : {
            "$ref" : "#/definitions/InstanceSelectionBase"
          }
        }
      },
      "JexlCriteriaSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CriteriaSpec"
        }, {
          "type" : "object",
          "required" : [ "expression" ],
          "properties" : {
            "expression" : {
              "type" : "string"
            }
          }
        } ]
      },
      "JiraApprovalStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "approvalCriteria", "connectorRef", "issueKey" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "issueKey" : {
              "type" : "string"
            },
            "approvalCriteria" : {
              "$ref" : "#/definitions/CriteriaSpecWrapper"
            },
            "rejectionCriteria" : {
              "$ref" : "#/definitions/CriteriaSpecWrapper"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "JiraCreateStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "issueType", "projectKey" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "projectKey" : {
              "type" : "string"
            },
            "issueType" : {
              "type" : "string"
            },
            "fields" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JiraField"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "JiraField" : {
        "type" : "object",
        "required" : [ "value" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "JiraUpdateStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "issueKey" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "issueKey" : {
              "type" : "string"
            },
            "transitionTo" : {
              "$ref" : "#/definitions/TransitionTo"
            },
            "fields" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JiraField"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "JsonNode" : {
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "boolean"
          },
          "valueNode" : {
            "type" : "boolean"
          },
          "containerNode" : {
            "type" : "boolean"
          },
          "missingNode" : {
            "type" : "boolean"
          },
          "nodeType" : {
            "type" : "string",
            "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
          },
          "pojo" : {
            "type" : "boolean"
          },
          "number" : {
            "type" : "boolean"
          },
          "integralNumber" : {
            "type" : "boolean"
          },
          "floatingPointNumber" : {
            "type" : "boolean"
          },
          "short" : {
            "type" : "boolean"
          },
          "int" : {
            "type" : "boolean"
          },
          "long" : {
            "type" : "boolean"
          },
          "float" : {
            "type" : "boolean"
          },
          "double" : {
            "type" : "boolean"
          },
          "bigDecimal" : {
            "type" : "boolean"
          },
          "bigInteger" : {
            "type" : "boolean"
          },
          "textual" : {
            "type" : "boolean"
          },
          "boolean" : {
            "type" : "boolean"
          },
          "binary" : {
            "type" : "boolean"
          },
          "array" : {
            "type" : "boolean"
          },
          "null" : {
            "type" : "boolean"
          }
        }
      },
      "K8SDirectInfrastructure" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Infrastructure"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "namespace", "releaseName" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "K8sApplyStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "skipSteadyStateCheck" : {
              "type" : "boolean"
            },
            "filePaths" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sAzureInfrastructure" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Infrastructure"
        }, {
          "type" : "object",
          "required" : [ "cluster", "connectorRef", "namespace", "releaseName", "resourceGroup", "subscription" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            },
            "cluster" : {
              "type" : "string"
            },
            "subscription" : {
              "type" : "string"
            },
            "resourceGroup" : {
              "type" : "string"
            }
          }
        } ]
      },
      "K8sBGSwapServicesStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sBlueGreenStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sCanaryDeleteStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sCanaryStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "instanceSelection" ],
          "properties" : {
            "instanceSelection" : {
              "$ref" : "#/definitions/InstanceSelectionWrapper"
            },
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sDeleteStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "deleteResources" ],
          "properties" : {
            "deleteResources" : {
              "$ref" : "#/definitions/DeleteResourcesWrapper"
            },
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sGcpInfrastructure" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Infrastructure"
        }, {
          "type" : "object",
          "required" : [ "cluster", "connectorRef", "namespace", "releaseName" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            },
            "cluster" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "K8sManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "skipResourceVersioning" : {
              "$ref" : "#/definitions/ParameterFieldBoolean"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "K8sRollingRollbackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sRollingStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "skipDryRun" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "K8sScaleStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "instanceSelection", "workload" ],
          "properties" : {
            "instanceSelection" : {
              "$ref" : "#/definitions/InstanceSelectionWrapper"
            },
            "workload" : {
              "type" : "string"
            },
            "skipDryRun" : {
              "type" : "boolean"
            },
            "skipSteadyStateCheck" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "KeyValuesCriteriaSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CriteriaSpec"
        }, {
          "type" : "object",
          "required" : [ "conditions" ],
          "properties" : {
            "matchAnyCondition" : {
              "type" : "boolean"
            },
            "conditions" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Condition"
              }
            }
          }
        } ]
      },
      "KubernetesServiceSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ServiceSpec"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "KustomizeManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "skipResourceVersioning" : {
              "$ref" : "#/definitions/ParameterFieldBoolean"
            },
            "pluginPath" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "KustomizePatchesManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "Limits" : {
        "type" : "object",
        "properties" : {
          "memory" : {
            "type" : "string",
            "pattern" : "^(([0-9]*[.])?[0-9]+)([GM]i?)|<\\+input>$"
          },
          "cpu" : {
            "type" : "string"
          }
        }
      },
      "ManifestAttributes" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "ManifestConfig" : {
        "type" : "object",
        "required" : [ "identifier", "spec", "type" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "HelmChart", "K8sManifest", "Kustomize", "KustomizePatches", "OpenshiftParam", "OpenshiftTemplate", "Values", "ServerlessAwsLambda" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ManifestAttributes"
          }
        }
      },
      "ManifestConfigWrapper" : {
        "type" : "object",
        "properties" : {
          "manifest" : {
            "$ref" : "#/definitions/ManifestConfig"
          }
        }
      },
      "ManifestOverrideSetWrapper" : {
        "type" : "object",
        "properties" : {
          "overrideSet" : {
            "$ref" : "#/definitions/ManifestOverrideSets"
          }
        }
      },
      "ManifestOverrideSets" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "manifests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManifestConfigWrapper"
            }
          }
        }
      },
      "ManualFailureSpecConfig" : {
        "type" : "object",
        "required" : [ "onTimeout", "timeout" ],
        "properties" : {
          "timeout" : {
            "type" : "string"
          },
          "onTimeout" : {
            "$ref" : "#/definitions/OnTimeoutConfig"
          }
        }
      },
      "ManualInterventionFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "spec" : {
              "readOnly" : true,
              "$ref" : "#/definitions/ManualFailureSpecConfig"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "ManualIntervention" ]
            }
          }
        } ]
      },
      "MarkAsSuccessFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "MarkAsSuccess" ]
            }
          }
        } ]
      },
      "NGProperties" : {
        "type" : "object",
        "properties" : {
          "ci" : {
            "$ref" : "#/definitions/CIProperties"
          }
        }
      },
      "NGVariable" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "String", "Number", "Secret" ]
          },
          "metadata" : {
            "type" : "string"
          }
        }
      },
      "NGVariableOverrideSetWrapper" : {
        "type" : "object",
        "properties" : {
          "overrideSet" : {
            "$ref" : "#/definitions/NGVariableOverrideSets"
          }
        }
      },
      "NGVariableOverrideSets" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          }
        }
      },
      "NativeHelmServiceSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ServiceSpec"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "NexusRegistryArtifactConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ArtifactConfig"
        }, {
          "type" : "object",
          "required" : [ "artifactPath", "connectorRef", "repository", "repositoryFormat" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "repository" : {
              "type" : "string"
            },
            "artifactPath" : {
              "type" : "string"
            },
            "repositoryFormat" : {
              "type" : "string",
              "enum" : [ "docker" ]
            },
            "repositoryPort" : {
              "type" : "string"
            },
            "repositoryUrl" : {
              "type" : "string"
            },
            "tag" : {
              "type" : "string"
            },
            "tagRegex" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "NotificationChannelWrapper" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/PmsNotificationChannel"
          }
        }
      },
      "NotificationRules" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "pipelineEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PipelineEvent"
            }
          },
          "notificationMethod" : {
            "$ref" : "#/definitions/NotificationChannelWrapper"
          }
        }
      },
      "NumberNGVariable" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGVariable"
        }, {
          "type" : "object",
          "required" : [ "value" ],
          "properties" : {
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Number" ]
            },
            "value" : {
              "type" : "number",
              "format" : "double"
            },
            "default" : {
              "type" : "number",
              "format" : "double"
            }
          }
        } ]
      },
      "OnFailureConfig" : {
        "type" : "object",
        "required" : [ "action", "errors" ],
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "Unknown", "AllErrors", "Authentication", "Connectivity", "Timeout", "Authorization", "Verification", "DelegateProvisioning", "PolicyEvaluationFailure" ]
            }
          },
          "action" : {
            "$ref" : "#/definitions/FailureStrategyActionConfig"
          }
        }
      },
      "OnRetryFailureConfig" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/definitions/FailureStrategyActionConfig"
          }
        }
      },
      "OnTimeoutConfig" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/definitions/FailureStrategyActionConfig"
          }
        }
      },
      "OpenshiftManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "skipResourceVersioning" : {
              "$ref" : "#/definitions/ParameterFieldBoolean"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "OpenshiftParamManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PRBuildSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BuildSpec"
        }, {
          "type" : "object",
          "required" : [ "number" ],
          "properties" : {
            "number" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ParallelStageElementConfig" : {
        "type" : "object",
        "required" : [ "sections" ],
        "properties" : {
          "sections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/StageElementWrapperConfig"
            }
          }
        }
      },
      "ParallelStepElementConfig" : {
        "type" : "object",
        "required" : [ "sections" ],
        "properties" : {
          "sections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionWrapperConfig"
            }
          }
        }
      },
      "ParameterField" : {
        "type" : "object",
        "properties" : {
          "expressionValue" : {
            "type" : "string"
          },
          "expression" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "object"
          },
          "typeString" : {
            "type" : "boolean"
          },
          "inputSetValidator" : {
            "$ref" : "#/definitions/InputSetValidator"
          },
          "jsonResponseField" : {
            "type" : "boolean"
          },
          "responseField" : {
            "type" : "string"
          }
        }
      },
      "ParameterFieldBoolean" : {
        "type" : "object",
        "properties" : {
          "expressionValue" : {
            "type" : "string"
          },
          "expression" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "boolean"
          },
          "typeString" : {
            "type" : "boolean"
          },
          "inputSetValidator" : {
            "$ref" : "#/definitions/InputSetValidator"
          },
          "jsonResponseField" : {
            "type" : "boolean"
          },
          "responseField" : {
            "type" : "string"
          }
        }
      },
      "ParameterFieldString" : {
        "type" : "object",
        "properties" : {
          "expressionValue" : {
            "type" : "string"
          },
          "expression" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string"
          },
          "typeString" : {
            "type" : "boolean"
          },
          "inputSetValidator" : {
            "$ref" : "#/definitions/InputSetValidator"
          },
          "jsonResponseField" : {
            "type" : "boolean"
          },
          "responseField" : {
            "type" : "string"
          }
        }
      },
      "PatchInstruction" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "SetFeatureFlagState", "SetOnVariation", "SetOffVariation", "SetDefaultVariations", "AddRule", "UpdateRule", "AddTargetsToVariationTargetMap", "RemoveTargetsToVariationTargetMap", "AddSegmentToVariationTargetMap", "RemoveSegmentsToVariationTargetMap" ]
          }
        }
      },
      "PdcInfrastructure" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Infrastructure"
        }, {
          "type" : "object",
          "required" : [ "sshKeyRef" ],
          "properties" : {
            "sshKeyRef" : {
              "type" : "string"
            },
            "hosts" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "connectorRef" : {
              "type" : "string"
            },
            "attributeFilters" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "hostFilters" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PercentageInstanceSelection" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InstanceSelectionBase"
        }, {
          "type" : "object",
          "properties" : {
            "percentage" : {
              "$ref" : "#/definitions/ParameterFieldString"
            }
          }
        } ]
      },
      "PipelineConfig" : {
        "type" : "object",
        "properties" : {
          "pipeline" : {
            "readOnly" : true,
            "$ref" : "#/definitions/PipelineInfoConfig"
          }
        }
      },
      "PipelineEvent" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "AllEvents", "PipelineStart", "PipelineSuccess", "PipelineFailed", "PipelineEnd", "PipelinePaused", "StageSuccess", "StageFailed", "StageStart", "StepFailed" ]
          },
          "forStages" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PipelineInfoConfig" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "identifier" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "flowControl" : {
            "$ref" : "#/definitions/FlowControlConfig"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "properties" : {
            "$ref" : "#/definitions/NGProperties"
          },
          "stages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/StageElementWrapperConfig"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "notificationRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NotificationRules"
            }
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "timeout" : {
            "type" : "string",
            "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
          },
          "template" : {
            "$ref" : "#/definitions/TemplateLinkConfig"
          },
          "allowStageExecutions" : {
            "type" : "boolean"
          },
          "delegateSelectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PipelineInfrastructure" : {
        "type" : "object",
        "properties" : {
          "infrastructureDefinition" : {
            "$ref" : "#/definitions/InfrastructureDef"
          },
          "useFromStage" : {
            "$ref" : "#/definitions/InfraUseFromStage"
          },
          "environment" : {
            "$ref" : "#/definitions/EnvironmentYaml"
          },
          "allowSimultaneousDeployments" : {
            "type" : "boolean"
          },
          "infrastructureKey" : {
            "type" : "string"
          },
          "environmentRef" : {
            "type" : "string"
          }
        }
      },
      "PmsEmailChannel" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PmsNotificationChannel"
        }, {
          "type" : "object",
          "properties" : {
            "userGroups" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "recipients" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PmsMSTeamChannel" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PmsNotificationChannel"
        }, {
          "type" : "object",
          "properties" : {
            "msTeamKeys" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "userGroups" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "PmsNotificationChannel" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "PmsPagerDutyChannel" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PmsNotificationChannel"
        }, {
          "type" : "object",
          "properties" : {
            "userGroups" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "integrationKey" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PmsSlackChannel" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PmsNotificationChannel"
        }, {
          "type" : "object",
          "properties" : {
            "userGroups" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "webhookUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicySpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "PolicyStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "policySets" ],
          "properties" : {
            "policySets" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "type" : {
              "type" : "string"
            },
            "policySpec" : {
              "$ref" : "#/definitions/PolicySpec"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PrimaryArtifact" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ArtifactConfig"
          }
        }
      },
      "RemoteCloudformationTagsFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationTagsFileSpec"
        }, {
          "type" : "object",
          "required" : [ "store" ],
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            }
          }
        } ]
      },
      "RemoteCloudformationTemplateFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationTemplateFileSpec"
        }, {
          "type" : "object",
          "required" : [ "store" ],
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            }
          }
        } ]
      },
      "RemoteTerraformVarFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/TerraformVarFileSpec"
        }, {
          "type" : "object",
          "required" : [ "store" ],
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            }
          }
        } ]
      },
      "RemoveSegmentToVariationTargetMapYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "RemoveSegmentToVariationTargetMap" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/RemoveSegmentToVariationTargetMapYamlSpec"
            }
          }
        } ]
      },
      "RemoveSegmentToVariationTargetMapYamlSpec" : {
        "type" : "object",
        "required" : [ "segments", "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "segments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RemoveTargetsToVariationTargetMapYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "RemoveTargetsToVariationTargetMap" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/RemoveTargetsToVariationTargetMapYamlSpec"
            }
          }
        } ]
      },
      "RemoveTargetsToVariationTargetMapYamlSpec" : {
        "type" : "object",
        "required" : [ "targets", "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResourceConstraintStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "acquireMode", "holdingScope", "name", "permits", "resourceUnit" ],
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "resourceUnit" : {
              "type" : "string"
            },
            "acquireMode" : {
              "type" : "string",
              "enum" : [ "ENSURE", "ACCUMULATE" ]
            },
            "permits" : {
              "type" : "integer",
              "format" : "int32"
            },
            "holdingScope" : {
              "$ref" : "#/definitions/HoldingScope"
            }
          }
        } ]
      },
      "ResponsePipelineConfig" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PipelineConfig"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "RetryFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "spec" : {
              "readOnly" : true,
              "$ref" : "#/definitions/RetryFailureSpecConfig"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Retry" ]
            }
          }
        } ]
      },
      "RetryFailureSpecConfig" : {
        "type" : "object",
        "required" : [ "onRetryFailure", "retryCount", "retryIntervals" ],
        "properties" : {
          "retryCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "retryIntervals" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "onRetryFailure" : {
            "$ref" : "#/definitions/OnRetryFailureConfig"
          }
        }
      },
      "S3StoreConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "bucketName" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "folderPath" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "S3UrlCloudformationTemplateFileSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/CloudformationTemplateFileSpec"
        }, {
          "type" : "object",
          "required" : [ "templateUrl" ],
          "properties" : {
            "templateUrl" : {
              "type" : "string"
            }
          }
        } ]
      },
      "S3UrlStoreConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StoreConfig"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "region", "urls" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "urls" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SecretNGVariable" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGVariable"
        }, {
          "type" : "object",
          "required" : [ "value" ],
          "properties" : {
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "Secret" ]
            },
            "value" : {
              "type" : "string"
            },
            "default" : {
              "type" : "string"
            }
          }
        } ]
      },
      "Serve" : {
        "type" : "object",
        "properties" : {
          "distribution" : {
            "$ref" : "#/definitions/Distribution"
          },
          "variation" : {
            "type" : "string"
          }
        }
      },
      "ServerlessAwsLambdaDeployStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "commandOptions" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ServerlessAwsLambdaInfrastructure" : {
        "allOf" : [ {
          "$ref" : "#/definitions/Infrastructure"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "region", "stage" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "region" : {
              "type" : "string"
            },
            "stage" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ServerlessAwsLambdaManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "configOverridePath" : {
              "type" : "string"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ServerlessAwsLambdaRollbackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "properties" : {
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ServerlessAwsLambdaServiceSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ServiceSpec"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "ServiceConfig" : {
        "type" : "object",
        "properties" : {
          "useFromStage" : {
            "$ref" : "#/definitions/ServiceUseFromStage"
          },
          "service" : {
            "$ref" : "#/definitions/ServiceYaml"
          },
          "serviceRef" : {
            "type" : "string"
          },
          "serviceDefinition" : {
            "$ref" : "#/definitions/ServiceDefinition"
          },
          "stageOverrides" : {
            "$ref" : "#/definitions/StageOverridesConfig"
          }
        }
      },
      "ServiceDefinition" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Kubernetes", "NativeHelm", "Ssh", "WinRm", "ServerlessAwsLambda" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ServiceSpec"
          }
        }
      },
      "ServiceNowApprovalStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "approvalCriteria", "connectorRef", "ticketNumber", "ticketType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "ticketNumber" : {
              "type" : "string"
            },
            "ticketType" : {
              "type" : "string"
            },
            "approvalCriteria" : {
              "$ref" : "#/definitions/CriteriaSpecWrapper"
            },
            "rejectionCriteria" : {
              "$ref" : "#/definitions/CriteriaSpecWrapper"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ServiceNowCreateStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "ticketType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "ticketType" : {
              "type" : "string"
            },
            "useServiceNowTemplate" : {
              "type" : "boolean"
            },
            "templateName" : {
              "type" : "string"
            },
            "fields" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceNowField"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ServiceNowField" : {
        "type" : "object",
        "required" : [ "value" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "ServiceNowUpdateStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "connectorRef", "ticketNumber", "ticketType" ],
          "properties" : {
            "connectorRef" : {
              "type" : "string"
            },
            "ticketType" : {
              "type" : "string"
            },
            "ticketNumber" : {
              "type" : "string"
            },
            "useServiceNowTemplate" : {
              "type" : "boolean"
            },
            "templateName" : {
              "type" : "string"
            },
            "fields" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceNowField"
              }
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "ServiceOverrides" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ServiceSpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "artifacts" : {
            "$ref" : "#/definitions/ArtifactListConfig"
          },
          "manifests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManifestConfigWrapper"
            }
          },
          "artifactOverrideSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ArtifactOverrideSetWrapper"
            }
          },
          "variableOverrideSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariableOverrideSetWrapper"
            }
          },
          "manifestOverrideSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManifestOverrideSetWrapper"
            }
          }
        }
      },
      "ServiceUseFromStage" : {
        "type" : "object",
        "required" : [ "stage" ],
        "properties" : {
          "stage" : {
            "type" : "string"
          },
          "overrides" : {
            "$ref" : "#/definitions/ServiceOverrides"
          },
          "metadata" : {
            "type" : "string"
          }
        }
      },
      "ServiceYaml" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "SetDefaultVariationsYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SetDefaultVariations" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/SetDefaultVariationsYamlSpec"
            }
          }
        } ]
      },
      "SetDefaultVariationsYamlSpec" : {
        "type" : "object",
        "required" : [ "off", "on" ],
        "properties" : {
          "on" : {
            "type" : "string"
          },
          "off" : {
            "type" : "string"
          }
        }
      },
      "SetFeatureFlagStateYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SetFeatureFlagState" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/SetFeatureFlagStateYamlSpec"
            }
          }
        } ]
      },
      "SetFeatureFlagStateYamlSpec" : {
        "type" : "object",
        "required" : [ "state" ],
        "properties" : {
          "state" : {
            "type" : "string"
          }
        }
      },
      "SetOffVariationYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SetOffVariation" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/SetOffVariationYamlSpec"
            }
          }
        } ]
      },
      "SetOffVariationYamlSpec" : {
        "type" : "object",
        "required" : [ "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          }
        }
      },
      "SetOnVariationYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SetOnVariation" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/SetOnVariationYamlSpec"
            }
          }
        } ]
      },
      "SetOnVariationYamlSpec" : {
        "type" : "object",
        "required" : [ "variation" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          }
        }
      },
      "ShellScriptBaseSource" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "ShellScriptInlineSource" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ShellScriptBaseSource"
        }, {
          "type" : "object",
          "properties" : {
            "script" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ShellScriptSourceWrapper" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/ShellScriptBaseSource"
          }
        }
      },
      "ShellScriptStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "onDelegate", "shell", "source" ],
          "properties" : {
            "shell" : {
              "type" : "string",
              "enum" : [ "Bash", "PowerShell" ]
            },
            "source" : {
              "$ref" : "#/definitions/ShellScriptSourceWrapper"
            },
            "executionTarget" : {
              "$ref" : "#/definitions/ExecutionTarget"
            },
            "onDelegate" : {
              "type" : "boolean"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "outputVariables" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NGVariable"
              }
            },
            "environmentVariables" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NGVariable"
              }
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "SidecarArtifact" : {
        "type" : "object",
        "required" : [ "identifier", "spec", "type" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr" ]
          },
          "spec" : {
            "$ref" : "#/definitions/ArtifactConfig"
          }
        }
      },
      "SidecarArtifactWrapper" : {
        "type" : "object",
        "properties" : {
          "sidecar" : {
            "$ref" : "#/definitions/SidecarArtifact"
          }
        }
      },
      "SshServiceSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ServiceSpec"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "StageElementConfig" : {
        "type" : "object",
        "required" : [ "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "name" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "description" : {
            "type" : "string"
          },
          "when" : {
            "$ref" : "#/definitions/StageWhenCondition"
          },
          "failureStrategies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FailureStrategyConfig"
            }
          },
          "delegateSelectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string"
          },
          "template" : {
            "$ref" : "#/definitions/TemplateLinkConfig"
          },
          "spec" : {
            "$ref" : "#/definitions/StageInfoConfig"
          }
        }
      },
      "StageElementWrapperConfig" : {
        "type" : "object",
        "properties" : {
          "stage" : {
            "$ref" : "#/definitions/StageElementConfig"
          },
          "parallel" : {
            "$ref" : "#/definitions/ParallelStageElementConfig"
          }
        }
      },
      "StageInfoConfig" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "execution" : {
            "$ref" : "#/definitions/ExecutionElementConfig"
          }
        }
      },
      "StageOverridesConfig" : {
        "type" : "object",
        "properties" : {
          "variables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "useVariableOverrideSets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "useArtifactOverrideSets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "artifacts" : {
            "$ref" : "#/definitions/ArtifactListConfig"
          },
          "useManifestOverrideSets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "manifests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManifestConfigWrapper"
            }
          }
        }
      },
      "StageRollbackFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "StageRollback" ]
            }
          }
        } ]
      },
      "StageWhenCondition" : {
        "type" : "object",
        "required" : [ "pipelineStatus" ],
        "properties" : {
          "pipelineStatus" : {
            "type" : "string",
            "enum" : [ "Success", "Failure", "All" ]
          },
          "condition" : {
            "type" : "string"
          }
        }
      },
      "StepElementConfig" : {
        "type" : "object",
        "required" : [ "identifier", "name", "type" ],
        "properties" : {
          "identifier" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "name" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "description" : {
            "type" : "string"
          },
          "timeout" : {
            "type" : "string",
            "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*))$"
          },
          "failureStrategies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FailureStrategyConfig"
            }
          },
          "when" : {
            "$ref" : "#/definitions/StepWhenCondition"
          },
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/StepSpecType"
          }
        }
      },
      "StepGroupElementConfig" : {
        "type" : "object",
        "required" : [ "identifier", "steps" ],
        "properties" : {
          "identifier" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "name" : {
            "type" : "string",
            "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "when" : {
            "$ref" : "#/definitions/StepWhenCondition"
          },
          "failureStrategies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FailureStrategyConfig"
            }
          },
          "steps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionWrapperConfig"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "delegateSelectors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "StepGroupFailureActionConfig" : {
        "allOf" : [ {
          "$ref" : "#/definitions/FailureStrategyActionConfig"
        }, {
          "type" : "object",
          "required" : [ "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "StepGroupRollback" ]
            }
          }
        } ]
      },
      "StepSpecType" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "StepWhenCondition" : {
        "type" : "object",
        "required" : [ "stageStatus" ],
        "properties" : {
          "stageStatus" : {
            "type" : "string",
            "enum" : [ "Success", "Failure", "All" ]
          },
          "condition" : {
            "type" : "string"
          }
        }
      },
      "StoreConfig" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "StoreConfigWrapper" : {
        "type" : "object",
        "required" : [ "spec", "type" ],
        "properties" : {
          "spec" : {
            "$ref" : "#/definitions/StoreConfig"
          },
          "metadata" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Git", "Github", "Bitbucket", "GitLab", "Http", "S3", "Gcs", "Artifactory", "S3Url" ]
          }
        }
      },
      "StringNGVariable" : {
        "allOf" : [ {
          "$ref" : "#/definitions/NGVariable"
        }, {
          "type" : "object",
          "required" : [ "value" ],
          "properties" : {
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "String" ]
            },
            "value" : {
              "type" : "string"
            },
            "default" : {
              "type" : "string"
            }
          }
        } ]
      },
      "TagBuildSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BuildSpec"
        }, {
          "type" : "object",
          "required" : [ "tag" ],
          "properties" : {
            "tag" : {
              "type" : "string"
            }
          }
        } ]
      },
      "TemplateLinkConfig" : {
        "type" : "object",
        "required" : [ "templateRef" ],
        "properties" : {
          "templateRef" : {
            "type" : "string"
          },
          "versionLabel" : {
            "type" : "string",
            "pattern" : "^[0-9a-zA-Z][^\\s]{0,63}$"
          },
          "templateInputs" : {
            "$ref" : "#/definitions/JsonNode"
          }
        }
      },
      "TerraformApplyStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration", "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            },
            "configuration" : {
              "$ref" : "#/definitions/TerraformStepConfiguration"
            }
          }
        } ]
      },
      "TerraformBackendConfig" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/TerraformBackendConfigSpec"
          }
        }
      },
      "TerraformBackendConfigSpec" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "TerraformConfigFilesWrapper" : {
        "type" : "object",
        "required" : [ "store" ],
        "properties" : {
          "store" : {
            "$ref" : "#/definitions/StoreConfigWrapper"
          }
        }
      },
      "TerraformDestroyStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration", "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "metadata" : {
              "type" : "string"
            },
            "configuration" : {
              "$ref" : "#/definitions/TerraformStepConfiguration"
            }
          }
        } ]
      },
      "TerraformExecutionData" : {
        "type" : "object",
        "required" : [ "configFiles" ],
        "properties" : {
          "workspace" : {
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "environmentVariables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "configFiles" : {
            "$ref" : "#/definitions/TerraformConfigFilesWrapper"
          },
          "varFiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TerraformVarFileWrapper"
            }
          },
          "backendConfig" : {
            "$ref" : "#/definitions/TerraformBackendConfig"
          }
        }
      },
      "TerraformPlanExecutionData" : {
        "type" : "object",
        "required" : [ "command", "configFiles", "secretManagerRef" ],
        "properties" : {
          "workspace" : {
            "type" : "string"
          },
          "configFiles" : {
            "$ref" : "#/definitions/TerraformConfigFilesWrapper"
          },
          "varFiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TerraformVarFileWrapper"
            }
          },
          "backendConfig" : {
            "$ref" : "#/definitions/TerraformBackendConfig"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "environmentVariables" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/NGVariable"
            }
          },
          "command" : {
            "type" : "string",
            "enum" : [ "Apply", "Destroy" ]
          },
          "secretManagerRef" : {
            "type" : "string"
          }
        }
      },
      "TerraformPlanStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "configuration", "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "configuration" : {
              "$ref" : "#/definitions/TerraformPlanExecutionData"
            }
          }
        } ]
      },
      "TerraformRollbackStepInfo" : {
        "allOf" : [ {
          "$ref" : "#/definitions/StepSpecType"
        }, {
          "type" : "object",
          "required" : [ "provisionerIdentifier" ],
          "properties" : {
            "provisionerIdentifier" : {
              "type" : "string"
            },
            "delegateSelectors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "TerraformStepConfiguration" : {
        "type" : "object",
        "required" : [ "type" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Inline", "InheritFromPlan", "InheritFromApply" ]
          },
          "spec" : {
            "$ref" : "#/definitions/TerraformExecutionData"
          }
        }
      },
      "TerraformVarFile" : {
        "type" : "object",
        "required" : [ "identifier", "spec", "type" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "spec" : {
            "$ref" : "#/definitions/TerraformVarFileSpec"
          }
        }
      },
      "TerraformVarFileSpec" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "TerraformVarFileWrapper" : {
        "type" : "object",
        "required" : [ "varFile" ],
        "properties" : {
          "varFile" : {
            "$ref" : "#/definitions/TerraformVarFile"
          }
        }
      },
      "TransitionTo" : {
        "type" : "object",
        "required" : [ "status" ],
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "transitionName" : {
            "type" : "string"
          }
        }
      },
      "UpdateRuleYaml" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchInstruction"
        }, {
          "type" : "object",
          "required" : [ "identifier", "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "UpdateRule" ]
            },
            "identifier" : {
              "type" : "string"
            },
            "spec" : {
              "$ref" : "#/definitions/UpdateRuleYamlSpec"
            }
          }
        } ]
      },
      "UpdateRuleYamlSpec" : {
        "type" : "object",
        "required" : [ "bucketBy", "ruleID" ],
        "properties" : {
          "ruleID" : {
            "type" : "string"
          },
          "bucketBy" : {
            "type" : "string"
          },
          "variations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/VariationYamlSpec"
            }
          },
          "serve" : {
            "$ref" : "#/definitions/Serve"
          }
        }
      },
      "ValuesManifest" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ManifestAttributes"
        }, {
          "type" : "object",
          "properties" : {
            "store" : {
              "$ref" : "#/definitions/StoreConfigWrapper"
            },
            "metadata" : {
              "type" : "string"
            }
          }
        } ]
      },
      "VariationYamlSpec" : {
        "type" : "object",
        "required" : [ "variation", "weight" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WeightedVariation" : {
        "type" : "object",
        "required" : [ "variation", "weight" ],
        "properties" : {
          "variation" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "WinRmServiceSpec" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ServiceSpec"
        }, {
          "type" : "object",
          "properties" : { }
        } ]
      },
      "CDPipelineModuleInfo" : {
        "type" : "object",
        "properties" : {
          "serviceIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "envIdentifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "serviceDefinitionTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "environmentTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PreProduction", "Production" ]
            }
          },
          "infrastructureTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResponseCDPipelineModuleInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/CDPipelineModuleInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "FeedbackFormDTO" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "suggestion" : {
            "type" : "string"
          }
        }
      },
      "HarnessServiceInfoNG" : {
        "type" : "object",
        "properties" : {
          "serviceId" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "envId" : {
            "type" : "string"
          },
          "infraMappingId" : {
            "type" : "string"
          }
        }
      },
      "ResponseOptionalHarnessServiceInfoNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/HarnessServiceInfoNG"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ContextElement" : {
        "type" : "object",
        "properties" : {
          "elementType" : {
            "type" : "string",
            "enum" : [ "SERVICE", "INFRAMAPPING", "SERVICE_TEMPLATE", "TAG", "SHELL", "HOST", "INSTANCE", "STANDARD", "PARAM", "PARTITION", "OTHER", "FORK", "CONTAINER_SERVICE", "CLUSTER", "AWS_LAMBDA_FUNCTION", "AMI_SERVICE_SETUP", "AMI_SERVICE_DEPLOY", "ECS_SERVICE_SETUP", "AMI_SWITCH_ROUTES", "PCF_SERVICE_SETUP", "PCF_SERVICE_DEPLOY", "PCF_ROUTE_SWAP_ROLLBACK", "PCF_INSTANCE", "SPOTINST_SERVICE_SETUP", "SPOTINST_SERVICE_DEPLOY", "ARTIFACT", "ARTIFACT_VARIABLE", "HELM_DEPLOY", "CLOUD_FORMATION_PROVISION", "CLOUD_FORMATION_ROLLBACK", "CLOUD_FORMATION_DEPROVISION", "TERRAFORM_PROVISION", "SHELL_SCRIPT_PROVISION", "K8S", "TERRAFORM_INHERIT_PLAN", "TERRAGRUNT_INHERIT_PLAN", "AZURE_VMSS_SETUP", "AZURE_WEBAPP_SETUP", "HELM_CHART", "MANIFEST_VARIABLE", "RANCHER_K8S_CLUSTER_CRITERIA" ]
          },
          "uuid" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "DOMConfiguration" : {
        "type" : "object",
        "properties" : {
          "parameterNames" : {
            "$ref" : "#/definitions/DOMStringList"
          }
        }
      },
      "DOMImplementation" : {
        "type" : "object"
      },
      "DOMStringList" : {
        "type" : "object",
        "properties" : {
          "length" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DelegateMetaInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "hostName" : {
            "type" : "string"
          }
        }
      },
      "DelegateResponseData" : {
        "type" : "object",
        "discriminator" : "@class"
      },
      "Document" : {
        "type" : "object",
        "properties" : {
          "doctype" : {
            "$ref" : "#/definitions/DocumentType"
          },
          "documentElement" : {
            "$ref" : "#/definitions/Element"
          },
          "inputEncoding" : {
            "type" : "string"
          },
          "xmlEncoding" : {
            "type" : "string"
          },
          "xmlStandalone" : {
            "type" : "boolean"
          },
          "xmlVersion" : {
            "type" : "string"
          },
          "strictErrorChecking" : {
            "type" : "boolean"
          },
          "documentURI" : {
            "type" : "string"
          },
          "domConfig" : {
            "$ref" : "#/definitions/DOMConfiguration"
          },
          "implementation" : {
            "$ref" : "#/definitions/DOMImplementation"
          },
          "nodeName" : {
            "type" : "string"
          },
          "nodeValue" : {
            "type" : "string"
          },
          "parentNode" : {
            "$ref" : "#/definitions/Node"
          },
          "childNodes" : {
            "$ref" : "#/definitions/NodeList"
          },
          "firstChild" : {
            "$ref" : "#/definitions/Node"
          },
          "lastChild" : {
            "$ref" : "#/definitions/Node"
          },
          "previousSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "nextSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "ownerDocument" : {
            "$ref" : "#/definitions/Document"
          },
          "baseURI" : {
            "type" : "string"
          },
          "textContent" : {
            "type" : "string"
          },
          "localName" : {
            "type" : "string"
          },
          "namespaceURI" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "nodeType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributes" : {
            "$ref" : "#/definitions/NamedNodeMap"
          }
        }
      },
      "DocumentType" : {
        "type" : "object",
        "properties" : {
          "publicId" : {
            "type" : "string"
          },
          "systemId" : {
            "type" : "string"
          },
          "entities" : {
            "$ref" : "#/definitions/NamedNodeMap"
          },
          "notations" : {
            "$ref" : "#/definitions/NamedNodeMap"
          },
          "internalSubset" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "nodeName" : {
            "type" : "string"
          },
          "nodeValue" : {
            "type" : "string"
          },
          "parentNode" : {
            "$ref" : "#/definitions/Node"
          },
          "childNodes" : {
            "$ref" : "#/definitions/NodeList"
          },
          "firstChild" : {
            "$ref" : "#/definitions/Node"
          },
          "lastChild" : {
            "$ref" : "#/definitions/Node"
          },
          "previousSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "nextSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "ownerDocument" : {
            "$ref" : "#/definitions/Document"
          },
          "baseURI" : {
            "type" : "string"
          },
          "textContent" : {
            "type" : "string"
          },
          "localName" : {
            "type" : "string"
          },
          "namespaceURI" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "nodeType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributes" : {
            "$ref" : "#/definitions/NamedNodeMap"
          }
        }
      },
      "Element" : {
        "type" : "object",
        "properties" : {
          "tagName" : {
            "type" : "string"
          },
          "schemaTypeInfo" : {
            "$ref" : "#/definitions/TypeInfo"
          },
          "nodeName" : {
            "type" : "string"
          },
          "nodeValue" : {
            "type" : "string"
          },
          "parentNode" : {
            "$ref" : "#/definitions/Node"
          },
          "childNodes" : {
            "$ref" : "#/definitions/NodeList"
          },
          "firstChild" : {
            "$ref" : "#/definitions/Node"
          },
          "lastChild" : {
            "$ref" : "#/definitions/Node"
          },
          "previousSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "nextSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "ownerDocument" : {
            "$ref" : "#/definitions/Document"
          },
          "baseURI" : {
            "type" : "string"
          },
          "textContent" : {
            "type" : "string"
          },
          "localName" : {
            "type" : "string"
          },
          "namespaceURI" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "nodeType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributes" : {
            "$ref" : "#/definitions/NamedNodeMap"
          }
        }
      },
      "ExecutionDataValue" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "HttpStateExecutionData" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DelegateResponseData"
        }, {
          "type" : "object",
          "properties" : {
            "httpUrl" : {
              "type" : "string"
            },
            "httpMethod" : {
              "type" : "string"
            },
            "httpResponseCode" : {
              "type" : "integer",
              "format" : "int32"
            },
            "httpResponseBody" : {
              "type" : "string"
            },
            "assertionStatement" : {
              "type" : "string"
            },
            "assertionStatus" : {
              "type" : "string"
            },
            "header" : {
              "type" : "string"
            },
            "headers" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyValuePair"
              }
            },
            "useProxy" : {
              "type" : "boolean"
            },
            "warningMessage" : {
              "type" : "string"
            },
            "document" : {
              "$ref" : "#/definitions/Document"
            },
            "stateName" : {
              "type" : "string"
            },
            "stateType" : {
              "type" : "string"
            },
            "startTs" : {
              "type" : "integer",
              "format" : "int64"
            },
            "endTs" : {
              "type" : "integer",
              "format" : "int64"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "ABORTED", "DISCONTINUING", "ERROR", "FAILED", "NEW", "PAUSED", "PAUSING", "QUEUED", "RESUMED", "RUNNING", "SCHEDULED", "STARTING", "SUCCESS", "WAITING", "SKIPPED", "ABORTING", "REJECTED", "EXPIRED", "PREPARING" ]
            },
            "errorMsg" : {
              "type" : "string"
            },
            "waitInterval" : {
              "type" : "integer",
              "format" : "int32"
            },
            "element" : {
              "$ref" : "#/definitions/ContextElement"
            },
            "stateParams" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "delegateMetaInfo" : {
              "$ref" : "#/definitions/DelegateMetaInfo"
            },
            "templateVariable" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "executionDetails" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/ExecutionDataValue"
              }
            },
            "executionSummary" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/ExecutionDataValue"
              }
            }
          }
        } ]
      },
      "KeyValuePair" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "NamedNodeMap" : {
        "type" : "object",
        "properties" : {
          "length" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Node" : {
        "type" : "object",
        "properties" : {
          "nodeName" : {
            "type" : "string"
          },
          "nodeValue" : {
            "type" : "string"
          },
          "parentNode" : {
            "$ref" : "#/definitions/Node"
          },
          "childNodes" : {
            "$ref" : "#/definitions/NodeList"
          },
          "firstChild" : {
            "$ref" : "#/definitions/Node"
          },
          "lastChild" : {
            "$ref" : "#/definitions/Node"
          },
          "previousSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "nextSibling" : {
            "$ref" : "#/definitions/Node"
          },
          "ownerDocument" : {
            "$ref" : "#/definitions/Document"
          },
          "baseURI" : {
            "type" : "string"
          },
          "textContent" : {
            "type" : "string"
          },
          "localName" : {
            "type" : "string"
          },
          "namespaceURI" : {
            "type" : "string"
          },
          "prefix" : {
            "type" : "string"
          },
          "nodeType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributes" : {
            "$ref" : "#/definitions/NamedNodeMap"
          }
        }
      },
      "NodeList" : {
        "type" : "object",
        "properties" : {
          "length" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ScriptStateExecutionData" : {
        "allOf" : [ {
          "$ref" : "#/definitions/DelegateResponseData"
        }, {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "activityId" : {
              "type" : "string"
            },
            "sweepingOutputEnvVariables" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "secretOutputVars" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "stateName" : {
              "type" : "string"
            },
            "stateType" : {
              "type" : "string"
            },
            "startTs" : {
              "type" : "integer",
              "format" : "int64"
            },
            "endTs" : {
              "type" : "integer",
              "format" : "int64"
            },
            "status" : {
              "type" : "string",
              "enum" : [ "ABORTED", "DISCONTINUING", "ERROR", "FAILED", "NEW", "PAUSED", "PAUSING", "QUEUED", "RESUMED", "RUNNING", "SCHEDULED", "STARTING", "SUCCESS", "WAITING", "SKIPPED", "ABORTING", "REJECTED", "EXPIRED", "PREPARING" ]
            },
            "errorMsg" : {
              "type" : "string"
            },
            "waitInterval" : {
              "type" : "integer",
              "format" : "int32"
            },
            "element" : {
              "$ref" : "#/definitions/ContextElement"
            },
            "stateParams" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "delegateMetaInfo" : {
              "$ref" : "#/definitions/DelegateMetaInfo"
            },
            "templateVariable" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            },
            "executionDetails" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/ExecutionDataValue"
              }
            },
            "executionSummary" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/ExecutionDataValue"
              }
            }
          }
        } ]
      },
      "TypeInfo" : {
        "type" : "object",
        "properties" : {
          "typeNamespace" : {
            "type" : "string"
          },
          "typeName" : {
            "type" : "string"
          }
        }
      },
      "JiraStatusCategoryNG" : {
        "type" : "object",
        "required" : [ "id", "key", "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "JiraStatusNG" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "statusCategory" : {
            "$ref" : "#/definitions/JiraStatusCategoryNG"
          }
        }
      },
      "ResponseListJiraStatusNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/JiraStatusNG"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "JiraFieldAllowedValueNG" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "JiraFieldNG" : {
        "type" : "object",
        "required" : [ "allowedValues", "key", "name", "schema" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "schema" : {
            "$ref" : "#/definitions/JiraFieldSchemaNG"
          },
          "allowedValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/JiraFieldAllowedValueNG"
            }
          },
          "custom" : {
            "type" : "boolean"
          }
        }
      },
      "JiraFieldSchemaNG" : {
        "type" : "object",
        "required" : [ "type", "typeStr" ],
        "properties" : {
          "array" : {
            "type" : "boolean"
          },
          "typeStr" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "string", "number", "date", "datetime", "timetracking", "option" ]
          },
          "customType" : {
            "type" : "string"
          }
        }
      },
      "JiraIssueCreateMetadataNG" : {
        "type" : "object",
        "properties" : {
          "projects" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/JiraProjectNG"
            }
          }
        }
      },
      "JiraIssueTypeNG" : {
        "type" : "object",
        "required" : [ "fields", "id", "name", "statuses" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "statuses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/JiraStatusNG"
            }
          },
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/JiraFieldNG"
            }
          },
          "subTask" : {
            "type" : "boolean"
          }
        }
      },
      "JiraProjectNG" : {
        "type" : "object",
        "required" : [ "id", "issuetypes", "key", "name" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "issuetypes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/JiraIssueTypeNG"
            }
          }
        }
      },
      "ResponseJiraIssueCreateMetadataNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/JiraIssueCreateMetadataNG"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "JiraIssueUpdateMetadataNG" : {
        "type" : "object",
        "required" : [ "fields" ],
        "properties" : {
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/JiraFieldNG"
            }
          }
        }
      },
      "ResponseJiraIssueUpdateMetadataNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/JiraIssueUpdateMetadataNG"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "JiraProjectBasicNG" : {
        "type" : "object",
        "required" : [ "id", "key", "name" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ResponseListJiraProjectBasicNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/JiraProjectBasicNG"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "DashboardWorkloadDeployment" : {
        "type" : "object",
        "properties" : {
          "workloadDeploymentInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/WorkloadDeploymentInfo"
            }
          }
        }
      },
      "LastWorkloadInfo" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deploymentType" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "ResponseDashboardWorkloadDeployment" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DashboardWorkloadDeployment"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "WorkloadCountInfo" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "WorkloadDateCountInfo" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "execution" : {
            "$ref" : "#/definitions/WorkloadCountInfo"
          }
        }
      },
      "WorkloadDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "serviceName" : {
            "type" : "string"
          },
          "serviceId" : {
            "type" : "string"
          },
          "lastExecuted" : {
            "$ref" : "#/definitions/LastWorkloadInfo"
          },
          "deploymentTypeList" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "totalDeployments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalDeploymentChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "percentSuccess" : {
            "type" : "number",
            "format" : "double"
          },
          "rateSuccess" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "frequency" : {
            "type" : "number",
            "format" : "double"
          },
          "frequencyChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "lastPipelineExecutionId" : {
            "type" : "string"
          },
          "workload" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/WorkloadDateCountInfo"
            }
          }
        }
      },
      "DeploymentCount" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int64"
          },
          "success" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failure" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ExecutionDeployment" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deployments" : {
            "$ref" : "#/definitions/DeploymentCount"
          }
        }
      },
      "ExecutionDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "executionDeploymentList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionDeployment"
            }
          }
        }
      },
      "ResponseExecutionDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ExecutionDeploymentInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AuthorInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "DashboardExecutionStatusInfo" : {
        "type" : "object",
        "properties" : {
          "failure" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionStatusInfo"
            }
          },
          "pending" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionStatusInfo"
            }
          },
          "active" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionStatusInfo"
            }
          }
        }
      },
      "ExecutionStatusInfo" : {
        "type" : "object",
        "properties" : {
          "pipelineName" : {
            "type" : "string"
          },
          "pipelineIdentifier" : {
            "type" : "string"
          },
          "startTs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTs" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string"
          },
          "planExecutionId" : {
            "type" : "string"
          },
          "gitInfo" : {
            "$ref" : "#/definitions/GitInfo"
          },
          "triggerType" : {
            "type" : "string"
          },
          "author" : {
            "$ref" : "#/definitions/AuthorInfo"
          },
          "serviceInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceDeploymentInfo"
            }
          }
        }
      },
      "GitInfo" : {
        "type" : "object",
        "properties" : {
          "sourceBranch" : {
            "type" : "string"
          },
          "targetBranch" : {
            "type" : "string"
          },
          "commit" : {
            "type" : "string"
          },
          "commitID" : {
            "type" : "string"
          },
          "eventType" : {
            "type" : "string"
          },
          "repoName" : {
            "type" : "string"
          }
        }
      },
      "ResponseDashboardExecutionStatusInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DashboardExecutionStatusInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "serviceName" : {
            "type" : "string"
          },
          "serviceTag" : {
            "type" : "string"
          }
        }
      },
      "ResponseTimeValuePairListDTOInteger" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/TimeValuePairListDTOInteger"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TimeValuePair" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "TimeValuePairInteger" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TimeValuePairListDTO" : {
        "type" : "object",
        "properties" : {
          "timeValuePairList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeValuePairObject"
            }
          }
        }
      },
      "TimeValuePairListDTOInteger" : {
        "type" : "object",
        "properties" : {
          "timeValuePairList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeValuePairInteger"
            }
          }
        }
      },
      "TimeValuePairObject" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "type" : "object"
          }
        }
      },
      "InstanceCountDetailsByEnvTypeAndServiceId" : {
        "type" : "object",
        "properties" : {
          "instanceCountDetailsByEnvTypeBaseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/InstanceCountDetailsByEnvTypeBase"
            }
          }
        }
      },
      "InstanceCountDetailsByEnvTypeBase" : {
        "type" : "object",
        "properties" : {
          "totalInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nonProdInstances" : {
            "type" : "integer",
            "format" : "int32"
          },
          "prodInstances" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseInstanceCountDetailsByEnvTypeAndServiceId" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/InstanceCountDetailsByEnvTypeAndServiceId"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ActiveServiceInstanceSummary" : {
        "type" : "object",
        "properties" : {
          "changeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "countDetails" : {
            "$ref" : "#/definitions/InstanceCountDetailsByEnvTypeBase"
          }
        }
      },
      "ResponseActiveServiceInstanceSummary" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ActiveServiceInstanceSummary"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "BuildIdAndInstanceCount" : {
        "type" : "object",
        "properties" : {
          "buildId" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EnvBuildIdAndInstanceCountInfo" : {
        "type" : "object",
        "properties" : {
          "envId" : {
            "type" : "string"
          },
          "envName" : {
            "type" : "string"
          },
          "buildIdAndInstanceCountList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/BuildIdAndInstanceCount"
            }
          }
        }
      },
      "EnvBuildIdAndInstanceCountInfoList" : {
        "type" : "object",
        "properties" : {
          "envBuildIdAndInstanceCountInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EnvBuildIdAndInstanceCountInfo"
            }
          }
        }
      },
      "ResponseEnvBuildIdAndInstanceCountInfoList" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvBuildIdAndInstanceCountInfoList"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "HelmChartInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "repoUrl" : {
            "type" : "string"
          }
        }
      },
      "InfrastructureDetails" : {
        "type" : "object",
        "discriminator" : "type"
      },
      "InstanceDetailsByBuildId" : {
        "type" : "object",
        "properties" : {
          "buildId" : {
            "type" : "string"
          },
          "instances" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/InstanceDetailsDTO"
            }
          }
        }
      },
      "InstanceDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "podName" : {
            "type" : "string"
          },
          "artifactName" : {
            "type" : "string"
          },
          "connectorRef" : {
            "type" : "string"
          },
          "infrastructureDetails" : {
            "$ref" : "#/definitions/InfrastructureDetails"
          },
          "terraformInstance" : {
            "type" : "string"
          },
          "deployedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deployedById" : {
            "type" : "string"
          },
          "deployedByName" : {
            "type" : "string"
          },
          "pipelineExecutionName" : {
            "type" : "string"
          },
          "instanceInfoDTO" : {
            "$ref" : "#/definitions/InstanceInfoDTO"
          }
        }
      },
      "InstanceInfoDTO" : {
        "type" : "object",
        "discriminator" : "type",
        "properties" : {
          "podName" : {
            "type" : "string"
          }
        }
      },
      "InstancesByBuildIdList" : {
        "type" : "object",
        "properties" : {
          "instancesByBuildIdList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/InstanceDetailsByBuildId"
            }
          }
        }
      },
      "K8sContainer" : {
        "type" : "object",
        "properties" : {
          "containerId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          }
        }
      },
      "K8sInfrastructureDetails" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InfrastructureDetails"
        }, {
          "type" : "object",
          "properties" : {
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "K8sInstanceInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InstanceInfoDTO"
        }, {
          "type" : "object",
          "required" : [ "containerList", "namespace", "podName", "releaseName" ],
          "properties" : {
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            },
            "podName" : {
              "type" : "string"
            },
            "podIP" : {
              "type" : "string"
            },
            "blueGreenColor" : {
              "type" : "string"
            },
            "containerList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/K8sContainer"
              }
            }
          }
        } ]
      },
      "NativeHelmInstanceInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InstanceInfoDTO"
        }, {
          "type" : "object",
          "required" : [ "podName" ],
          "properties" : {
            "podName" : {
              "type" : "string"
            },
            "ip" : {
              "type" : "string"
            },
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            },
            "helmChartInfo" : {
              "$ref" : "#/definitions/HelmChartInfo"
            },
            "helmVersion" : {
              "type" : "string",
              "enum" : [ "V2", "V3", "V380" ]
            }
          }
        } ]
      },
      "ReferenceInstanceInfoDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/InstanceInfoDTO"
        }, {
          "type" : "object",
          "properties" : {
            "namespace" : {
              "type" : "string"
            },
            "releaseName" : {
              "type" : "string"
            }
          }
        } ]
      },
      "ResponseInstancesByBuildIdList" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/InstancesByBuildIdList"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "EnvIdCountPair" : {
        "type" : "object",
        "properties" : {
          "envId" : {
            "type" : "string"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ResponseTimeValuePairListDTOEnvIdCountPair" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/TimeValuePairListDTOEnvIdCountPair"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TimeValuePairEnvIdCountPair" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "value" : {
            "$ref" : "#/definitions/EnvIdCountPair"
          }
        }
      },
      "TimeValuePairListDTOEnvIdCountPair" : {
        "type" : "object",
        "properties" : {
          "timeValuePairList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeValuePairEnvIdCountPair"
            }
          }
        }
      },
      "DeploymentsInfo" : {
        "type" : "object",
        "properties" : {
          "deployments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ExecutionStatusInfo"
            }
          }
        }
      },
      "ResponseDeploymentsInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DeploymentsInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseServiceHeaderInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceHeaderInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceHeaderInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "deploymentTypes" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Deployment" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "DeploymentDateAndCount" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deployments" : {
            "$ref" : "#/definitions/Deployment"
          }
        }
      },
      "DeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "rate" : {
            "type" : "number",
            "format" : "double"
          },
          "countList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeploymentDateAndCount"
            }
          }
        }
      },
      "HealthDeploymentDashboard" : {
        "type" : "object",
        "properties" : {
          "healthDeploymentInfo" : {
            "$ref" : "#/definitions/HealthDeploymentInfo"
          }
        }
      },
      "HealthDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "$ref" : "#/definitions/TotalDeploymentInfo"
          },
          "success" : {
            "$ref" : "#/definitions/DeploymentInfo"
          },
          "failure" : {
            "$ref" : "#/definitions/DeploymentInfo"
          }
        }
      },
      "ResponseHealthDeploymentDashboard" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/HealthDeploymentDashboard"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TotalDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64"
          },
          "production" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nonProduction" : {
            "type" : "integer",
            "format" : "int64"
          },
          "countList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeploymentDateAndCount"
            }
          }
        }
      },
      "DeploymentChangeRates" : {
        "type" : "object",
        "properties" : {
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "frequency" : {
            "type" : "number",
            "format" : "double"
          },
          "frequencyChangeRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ResponseServiceDeploymentInfoDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceDeploymentInfoDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceDeployment" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deployments" : {
            "$ref" : "#/definitions/DeploymentCount"
          },
          "rate" : {
            "$ref" : "#/definitions/DeploymentChangeRates"
          }
        }
      },
      "ServiceDeploymentInfoDTO" : {
        "type" : "object",
        "properties" : {
          "serviceDeploymentList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceDeployment"
            }
          }
        }
      },
      "ResponseServiceDetailsInfoDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceDetailsInfoDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceDetailsDTO" : {
        "type" : "object",
        "properties" : {
          "serviceName" : {
            "type" : "string"
          },
          "serviceIdentifier" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "deploymentTypeList" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "totalDeployments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalDeploymentChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "successRate" : {
            "type" : "number",
            "format" : "double"
          },
          "successRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "frequency" : {
            "type" : "number",
            "format" : "double"
          },
          "frequencyChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "instanceCountDetails" : {
            "$ref" : "#/definitions/InstanceCountDetailsByEnvTypeBase"
          },
          "lastPipelineExecuted" : {
            "$ref" : "#/definitions/ServicePipelineInfo"
          }
        }
      },
      "ServiceDetailsInfoDTO" : {
        "type" : "object",
        "properties" : {
          "serviceDeploymentDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceDetailsDTO"
            }
          }
        }
      },
      "ServicePipelineInfo" : {
        "type" : "object",
        "properties" : {
          "pipelineExecutionId" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          },
          "lastExecutedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseServiceDeploymentListInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceDeploymentListInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceDeploymentListInfo" : {
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalDeployments" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          },
          "frequency" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "totalDeploymentsChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "frequencyChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "serviceDeploymentList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceDeployment"
            }
          }
        }
      },
      "ResponseServicesCount" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServicesCount"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServicesCount" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "LandingDashboardRequestCD" : {
        "type" : "object",
        "required" : [ "orgProjectIdentifiers" ],
        "properties" : {
          "orgProjectIdentifiers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OrgProjectIdentifier"
            }
          }
        }
      },
      "OrgProjectIdentifier" : {
        "type" : "object",
        "properties" : {
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          }
        }
      },
      "EnvCount" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ResponseEnvCount" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/EnvCount"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseServicesDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServicesDashboardInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "totalDeploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "successDeploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failureDeploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalDeploymentsChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "instancesCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "instancesCountChangeRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ServicesDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "serviceDashboardInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceDashboardInfo"
            }
          }
        }
      },
      "ProjectDashBoardInfo" : {
        "type" : "object",
        "properties" : {
          "projectIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "accountId" : {
            "type" : "string"
          },
          "deploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deploymentsCountChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "successDeploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failedDeploymentsCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ProjectsDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "projectDashBoardInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ProjectDashBoardInfo"
            }
          }
        }
      },
      "ResponseProjectsDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ProjectsDashboardInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "DeploymentStatsSummary" : {
        "type" : "object",
        "properties" : {
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalCountChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          },
          "failureRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "deploymentRate" : {
            "type" : "number",
            "format" : "double"
          },
          "deploymentRateChangeRate" : {
            "type" : "number",
            "format" : "double"
          },
          "timeBasedDeploymentInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeBasedDeploymentInfo"
            }
          }
        }
      },
      "ResponseDeploymentStatsSummary" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/DeploymentStatsSummary"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "TimeBasedDeploymentInfo" : {
        "type" : "object",
        "properties" : {
          "epochTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "successCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failedCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "failureRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "PipelineExecutionDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "planExecutionId" : {
            "type" : "string"
          },
          "startTs" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PipelinesExecutionDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "runningExecutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PipelineExecutionDashboardInfo"
            }
          },
          "pendingApprovalExecutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PipelineExecutionDashboardInfo"
            }
          },
          "pendingManualInterventionExecutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PipelineExecutionDashboardInfo"
            }
          },
          "failed24HrsExecutions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PipelineExecutionDashboardInfo"
            }
          }
        }
      },
      "ResponsePipelinesExecutionDashboardInfo" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PipelinesExecutionDashboardInfo"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "Member" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "ref" : {
            "type" : "string",
            "format" : "uri"
          },
          "display" : {
            "type" : "string"
          }
        }
      },
      "ScimGroup" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "schemas" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "displayName" : {
            "type" : "string"
          },
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Member"
            }
          },
          "harnessScopes" : {
            "type" : "string"
          }
        }
      },
      "AddOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "OktaAddOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "OktaRemoveOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "OktaReplaceOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "PatchOperation" : {
        "type" : "object",
        "discriminator" : "op",
        "properties" : {
          "path" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "PatchRequest" : {
        "type" : "object",
        "required" : [ "Operations", "schemas" ],
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "Operations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PatchOperation"
            }
          },
          "schemas" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "RemoveOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "ReplaceOperation" : {
        "allOf" : [ {
          "$ref" : "#/definitions/PatchOperation"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/definitions/JsonNode"
            }
          }
        } ]
      },
      "ScimUser" : {
        "type" : "object",
        "properties" : {
          "schemas" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "type" : "string"
            }
          },
          "userName" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "emails" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "roles" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "name" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "groups" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "password" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "id" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "meta" : {
            "$ref" : "#/definitions/JsonNode"
          }
        }
      },
      "ResponseServiceAccountDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceAccountDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceAccountDTO" : {
        "type" : "object",
        "required" : [ "accountIdentifier", "email", "identifier", "name" ],
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 1024
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "orgIdentifier" : {
            "type" : "string"
          },
          "projectIdentifier" : {
            "type" : "string"
          }
        }
      },
      "ResponseListServiceAccountDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceAccountDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PageServiceAccountAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalItems" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageItemCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceAccountAggregateDTO"
            }
          },
          "pageIndex" : {
            "type" : "integer",
            "format" : "int64"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "ResponsePageServiceAccountAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PageServiceAccountAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceAccountAggregateDTO" : {
        "type" : "object",
        "required" : [ "createdAt", "lastModifiedAt", "serviceAccount" ],
        "properties" : {
          "serviceAccount" : {
            "$ref" : "#/definitions/ServiceAccountDTO"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "tokensCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roleAssignmentsMetadataDTO" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/RoleAssignmentMetadataDTO"
            }
          }
        }
      },
      "ResponseServiceAccountAggregateDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/ServiceAccountAggregateDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseListServiceNowFieldNG" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceNowFieldNG"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceNowFieldAllowedValueNG" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "ServiceNowFieldNG" : {
        "type" : "object",
        "required" : [ "allowedValues", "key", "name", "schema" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "schema" : {
            "$ref" : "#/definitions/ServiceNowFieldSchemaNG"
          },
          "allowedValues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceNowFieldAllowedValueNG"
            }
          },
          "custom" : {
            "type" : "boolean"
          }
        }
      },
      "ServiceNowFieldSchemaNG" : {
        "type" : "object",
        "required" : [ "type", "typeStr" ],
        "properties" : {
          "array" : {
            "type" : "boolean"
          },
          "typeStr" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "glide_date_time", "integer", "boolean", "string", "option" ]
          },
          "customType" : {
            "type" : "string"
          }
        }
      },
      "ResponseListServiceNowTicketTypeDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ServiceNowTicketTypeDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ServiceNowTicketTypeDTO" : {
        "type" : "object",
        "required" : [ "key", "name" ],
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ResponseSetupStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "DELEGATE_PROVISION_FAILURE", "K8S_CONNECTOR_PROVISION_FAILURE", "DOCKER_CONNECTOR_PROVISION_FAILURE" ]
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseDelegateStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "IN_PROGRESS", "FAILURE" ]
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "AwsCodeCommitSCMDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SourceCodeManagerDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication" ],
          "properties" : {
            "authentication" : {
              "$ref" : "#/definitions/AwsCodeCommitAuthenticationDTO"
            }
          }
        } ]
      },
      "AzureRepoSCMDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SourceCodeManagerDTO"
        }, {
          "type" : "object",
          "properties" : {
            "authentication" : {
              "$ref" : "#/definitions/AzureRepoAuthentication"
            }
          }
        } ]
      },
      "BitbucketSCMDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SourceCodeManagerDTO"
        }, {
          "type" : "object",
          "properties" : {
            "authentication" : {
              "$ref" : "#/definitions/BitbucketAuthentication"
            }
          }
        } ]
      },
      "GithubSCMDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SourceCodeManagerDTO"
        }, {
          "type" : "object",
          "properties" : {
            "authentication" : {
              "$ref" : "#/definitions/GithubAuthentication"
            }
          }
        } ]
      },
      "GitlabSCMDTO" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SourceCodeManagerDTO"
        }, {
          "type" : "object",
          "required" : [ "authentication" ],
          "properties" : {
            "authentication" : {
              "$ref" : "#/definitions/GitlabAuthentication"
            }
          }
        } ]
      },
      "ResponseListSourceCodeManagerDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SourceCodeManagerDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SourceCodeManagerAuthentication" : {
        "type" : "object"
      },
      "SourceCodeManagerDTO" : {
        "type" : "object",
        "required" : [ "name" ],
        "discriminator" : "type",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "userIdentifier" : {
            "type" : "string"
          },
          "accountIdentifier" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastModifiedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "authentication" : {
            "$ref" : "#/definitions/SourceCodeManagerAuthentication"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BITBUCKET", "GITHUB", "GITLAB", "AWS_CODE_COMMIT", "AZURE_REPO" ]
          }
        }
      },
      "ResponseSourceCodeManagerDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/SourceCodeManagerDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "PollingResponseDTO" : {
        "type" : "object",
        "properties" : {
          "pollingResponse" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "ResponsePollingResponseDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/PollingResponseDTO"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "SignupDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "utmInfo" : {
            "$ref" : "#/definitions/UtmInfo"
          },
          "intent" : {
            "type" : "string"
          },
          "signupAction" : {
            "type" : "string",
            "enum" : [ "REGULAR", "TRIAL", "SUBSCRIBE" ]
          },
          "edition" : {
            "type" : "string",
            "enum" : [ "COMMUNITY", "FREE", "TEAM", "ENTERPRISE" ]
          },
          "billingFrequency" : {
            "type" : "string",
            "enum" : [ "MONTHLY", "YEARLY" ]
          }
        }
      },
      "RestResponseVerifyTokenResponseDTO" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/VerifyTokenResponseDTO"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "VerifyTokenResponseDTO" : {
        "type" : "object",
        "properties" : {
          "accountIdentifier" : {
            "type" : "string"
          }
        }
      },
      "RestResponseUserInfo" : {
        "type" : "object",
        "properties" : {
          "metaData" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "resource" : {
            "$ref" : "#/definitions/UserInfo"
          },
          "responseMessages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResponseMessage"
            }
          }
        }
      },
      "OAuthSignupDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "utmInfo" : {
            "$ref" : "#/definitions/UtmInfo"
          }
        }
      },
      "ResponseYamlSchemaDetailsWrapper" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/YamlSchemaDetailsWrapper"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "YamlGroup" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "type" : "string"
          }
        }
      },
      "YamlSchemaDetailsWrapper" : {
        "type" : "object",
        "properties" : {
          "yamlSchemaWithDetailsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/YamlSchemaWithDetails"
            }
          }
        }
      },
      "YamlSchemaMetadata" : {
        "type" : "object",
        "required" : [ "yamlGroup" ],
        "properties" : {
          "namespace" : {
            "type" : "string"
          },
          "modulesSupported" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
            }
          },
          "featureFlags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "featureRestrictions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "yamlGroup" : {
            "$ref" : "#/definitions/YamlGroup"
          }
        }
      },
      "YamlSchemaWithDetails" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "schemaClassName" : {
            "type" : "string"
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          },
          "yamlSchemaMetadata" : {
            "$ref" : "#/definitions/YamlSchemaMetadata"
          },
          "availableAtOrgLevel" : {
            "type" : "boolean"
          },
          "availableAtAccountLevel" : {
            "type" : "boolean"
          },
          "availableAtProjectLevel" : {
            "type" : "boolean"
          }
        }
      },
      "PartialSchemaDTO" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "nodeType" : {
            "type" : "string"
          },
          "nodeName" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "skipStageSchema" : {
            "type" : "boolean"
          },
          "moduleType" : {
            "type" : "string",
            "enum" : [ "CD", "CI", "CV", "CF", "CE", "STO", "CORE", "PMS", "TEMPLATESERVICE", "GOVERNANCE" ]
          }
        }
      },
      "ResponseListPartialSchemaDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PartialSchemaDTO"
            }
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseJsonNode" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/JsonNode"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "ResponseYamlSnippets" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE", "ERROR" ]
          },
          "data" : {
            "$ref" : "#/definitions/YamlSnippets"
          },
          "metaData" : {
            "type" : "object"
          },
          "correlationId" : {
            "type" : "string"
          }
        }
      },
      "YamlSnippetMetaData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "iconTag" : {
            "type" : "string"
          }
        }
      },
      "YamlSnippets" : {
        "type" : "object",
        "properties" : {
          "yamlSnippets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/YamlSnippetMetaData"
            }
          }
        }
      }
    }
  }